{"596d34df24a04ee1e3000a25": "Count ones in a segment", "582ff3223a0b2b226b0000cd": "Can you predict Math.random()?", "5453dce502949307cf000bff": "Find the Nexus of the Codewars Universe", "58da3ef3ac2033ef630000ca": "The Great Pyramid of Giza", "52ebf3afa9a37da407000478": "Vending Machine", "56f1c6034d0c330e4a001059": "HTML dynamic color string generation", "596d2447c4a959794d000007": "One Line Wonder: Sum All Even Fibonacci Numbers", "5302d655be2a91068b0001fb": "Dependency Injection", "54cf7f926b85dcc4e2000d9d": "Huffman Encoding", "55df87b23ed27f40b90001e5": "N-Parasitic Numbers Ending in N", "5917a2205ffc30ec3a0000a8": "7\u00d77 Skyscrapers", "5679d5a3f2272011d700000d": "6 By 6 Skyscrapers", "556f4a5baa4ea7afa1000046": "Largest Numeric Palindrome", "5461c0e29726f66bb60010b1": "Counting in English one, two, three... to 2 Quadrillion (2,000,000,000,000,000)", "537e18b6147aa838f600001b": "Text align justify", "596bef9a7a3d0058f5000066": "Big Vocabulary", "596c26187bd547f3a6000050": "Simple Fun #342: Buy Newspaper", "52f831fa9d332c6591000511": "Molecule to atoms", "56001790ac99763af400008c": "Compute the Largest Sum of all Contiguous Subsequences", "57f9bbe759eb61a049000160": "Guess the Digits and Expression", "596b8a3fc4cb1de46b000001": "\"Center yourself\", says the monk.", "596b715c58c5bbe12d000147": "Merge two sorted algorithms", "596b2b9d9e2fbd7811000046": "FIXME: Run, Runner!", "596b041e224071ece200002e": "FIXME:  Hours to Seconds", "596ad799634dad398f0000f9": "Learn Python #1: Variables", "596ad7d3efd614fdec00001e": "Learn Python #2: Data Types", "596a690510ffee5c0b00006a": "D&D Character generator #1: attribute modifiers and spells", "596a81352240711f3b00006e": "Binary multiplication.", "596a5738efd6149fa40000c3": "Number of instances of n in a string", "596a5e32634dad2a3c00003f": "Make every letter after X into caps. ", "596a6c6722407127d4000035": "Secret Code", "586214e1ef065414220000a8": "Cut the cake", "5966a52ab4f24db1800000cc": "A + B == 123", "5968fb556875980bd900000f": "Traverse array elements diagonally", "59686005664610557c0000d6": "There are two kinds of people", "596925532f709fccf3000077": "FizzBuzz++", "5968bb83c307f0bb86000015": "Basic Nico variation", "57da7f901b5ff148ad00030d": "Sum of list of Integer Just's and Nothing's", "59678a814e686ba17b000079": "B.A.D. Hashing", "57b8b7bc89512a5fe6000005": "Calculate the required interest rate", "52ad07dd9a483f621400025c": "Trick the Christmas Calendar!", "5968644eea5c541501000110": "Hello World", "5966f6343c0702d1dc00004c": "You Got Change?", "5923fbc72eafa9bcff00011a": "Multiplying numbers as strings: Part II", "5967e5d5c6427d73cf000052": "Find The Parity Outlier redux", "5966ffb962d030e11a00005a": "Sum The Strings: ARRAY EDITION", "5966eeb31b229e44eb00007a": "V     A     P     O     R     C     O     D     E", "5966d5a6df967226aa00003a": "Boneless Pizza Order", "59665001dc23af735700092b": "Midtown Navigator", "5963c18ecb97be020b0000a2": "Take the Derivative", "59670a7591dae8b6900000e4": "Odd One Out", "595fdfe5ada6db9061000036": "What's the Highest Number?", "54db3f2903e88ad6c30002ff": "Hello W... wait what?", "5967a67c8b0fc0093e000062": "Codwars  or Codewars?", "58ee4962dc4f81d6f400001c": "Program a Calculator #2 - 3D Vectors", "596776fbb4f24d0d82000141": "Alternating between three values", "596741e24e686bccb6000019": "One Line Task: Low B", "596557071f13e4e86a000019": "Pirate Island Conquer Part 3", "5665d30b3ea3d84a2c000025": "Santa's Missing Gift List", "56eb6abd8535c2d8d0001ac7": "Unsecure login - Hack this code #1", "5966ec8e62d030d8530000a7": "Super Coordinate Sums!", "5966fb8bccb55fb44b000e51": "Condensentences", "5966847f4025872c7d00015b": "String average", "595f4df2e8f12961ab00007f": "Haiku Wizard", "5965144da82d479517000001": "They're good dogs. ", "596549c7743cf369b900021b": "The search for Primes! Twin Primes!", "5963a29980509479cd000075": "Implement the (Unnormalized) Cardinal Sine", "58e230e5e24dde0996000070": "Next Prime", "5963c43f2c3f28706f00003f": "Char shuffle", "596344ee6878a3301e0001a3": "Calculating with functions - Sum, Product, Mean, Sqrt", "5964d7e633b908e172000046": "Digit Recovery", "596266482f9add20f70001fc": "Shopping List", "5963cb8dbf0604be69000072": "Watching your pennies", "5964f3ddbed583ca90000059": "Starting with refactoring", "5964e8fcfc9cf7749000005e": "Back to the Future?", "596343a24489a8b2a00000a2": "Fix My Phone Numbers!", "59656c69253c365e58000046": "maxPossibleScore", "57ab3d89bb9944b733000a32": "T.T.T.28: Crow drink water(\u4e4c\u9e26\u559d\u6c34)", "55ea5650fe9247a2ea0000a7": "Unscrambled eggs", "5601de3f54fa4b5ed9000072": "Player Methods - Dungeon crawler #2", "5963b6f8a7000805ce000064": "Split the Lyrics!!", "5963a97e33b908c26400000c": "Function-Factory", "59634e2aa0e7a8966c000a10": "string return in alphabetical order", "5962b98c2e8c8b02fa0000b4": "Pirate Island Conquer Part 2", "5963314a51c68a26600000ae": "I'm longer than you!", "5962ddfc2f9addd52200001d": "Hexadecimal Keys", "58e4fbd63258cefa4100002c": "Frugal Pizza", "5962d557be3f8bb0ca000010": "Mean without outliers", "595910299197d929a10005ae": "Free pizza", "596218bb6878a33ca20000aa": "What time is it?", "5962bbea6878a381ed000036": "High score table", "5522d19f20cc1c8330001218": "Finding Neo (PG-13)", "551886d9fd24d8f9e20001fa": "Finding Neo (NC-17)", "537529f42993de0e0b00181f": "Calculate number of inversions in array", "56d0a591c6c8b466ca00118b": "Beginner Series #5 Triangular Numbers", "59623e9450091000150000d2": "Some Fun with Aggregate Operations (Part 4)", "58cfe6c9f9dffe0f5100017f": "Simple Class Terminology", "5960e6cf09868d7f2f0000bc": "Some Fun with Aggregate Operations (Part 3)", "596092e42e8c8b5382000026": "Some Fun with Aggregate Operations (Part 2)", "595fa01cde9d341e8c000045": "Some Fun with Aggregate Operations (Part 1)", "596185fe9c3097a345000a18": "What's the pattern?", "596144f0ada6db581200004f": "Fibonacci on roids", "59619e4609868dd923000041": "Sushi-go-round (Beginner's)", "59604925a68b04598e00001e": "Pirate Island Conquer Part 1", "5956a69343e2a8e67b00000a": "Swapping values (Revamped!)", "582f79acaeb69a632d00015b": "Smith number", "595fb7d8de9d34743f000162": "Pirate treasure chest codes", "5960434218b9a2e1b00000ca": "Find the number in the middle", "595ef0c7458ad5facc000019": "Simple Fun #341: Minimum Bonus", "595b9b85ff19c2bd35000013": "React Fun #1: Component types  and nesting", "595e8e9c3dbec5a1890000e5": "Soft relooking", "595e9f258b763bc2d2000032": "Battle of the characters (Medium)", "595d4823c31ba629d90000d2": "The rarest pepe", "595dab6c5834558a5d0000cd": "Is this  a good batch of stout? (Student's t test)", "595ddfe2fc339d8a7d000089": "Hamster me", "595d54bddddd7cf91800008c": "COFFEE!", "5951f7b6e99cf2dfbd0000df": "Partially equal objects", "546e8dc735a6613de50007ea": "Church numbers", "595c4b480bb139b96100005c": "Simple Fun #340: Minimum Possible Maximum Gap", "595bd047b96bed1f59000001": "Simple Fun #339: Maximum Product 2", "595aa94353e43a8746000120": "Lost number in number sequence", "595c2988d946a13298000157": "Truthy and Falsy", "56a73d2194505c29f600002d": "Regular Expression - Check if divisible by 0b111 (7)", "57f46250bd7b5434b7000ab8": "NSA's Little Puzzle ", "58a08e622e7fb654a300000e": "Sort the climbing grades", "595b3f0ad26b2d817400002a": "Grill it!", "52f677797c461daaf7000740": "Smallest possible sum ", "55e29a6b4d99b59e98000089": "ASCII Cipher", "56a82b5a374345dd0a0000c7": "Word Value Madness", "595ac4c0449c6dd64b000035": "Fluid summator", "571640812ad763313600132b": "Upper <body> Strength", "5959df61cc30ac2f03000046": "Simple Fun #338: The Sum Of Prime Distance", "5959b637030042889500001d": "Simple Fun #337: The Original Number", "57636ce99aa148b6a3000d1c": "Graphics Series #2: barcode EAN-13 part2", "576260cc784ead319a00052d": "Graphics Series #1: barcode EAN-13 part1", "55ba24f1cb367c48ac0000a2": "Curry me softly", "5452209f699b534c67000cdf": "Super power frequency function", "52fa7b5704bc8f7c85000d32": "String indexOf (and lastIndexOf) with regex", "589e4d646642d144a90000d8": "Running Average", "59580a14838112d91f000174": "Climb Time - Can you send it? ", "58bf9bd943fadb2a980000a7": "Who is going to pay for the wall?", "572f85cdd59ee794c30010cf": "Between a and b", "5956d127a817c7c51b000026": "These are not my grades! (Revamped !)", "59568be9cc15b57637000054": "BECOME IMMORTAL", "59564f3bcc15b5591a00004a": "filterEvenLengthWords", "59564a286e595346de000079": "Mobile Display Keystrokes", "58076cf50b5a776505000b97": "From..To..Series #5: from word1 to word2. How many steps should shift", "59549d482a68fe3bc2000146": "Simple Fun #335: Two Programmers And Gold", "58e512890f1afb3405000647": "Which path is the shortest?", "595598246bfb6c3869000012": "Order Anagrams", "586edf5fb98de0ffda0002d5": "Order Elements in an Array", "5954b48ad8e0053403000040": "Simple Fun #336: Lonely Frog", "58d06bfbc43d20767e000074": "Battle ships: Sunk damaged or not touched?", "58a65c82586e98266200005b": "Simple Fun #134: Fix Progression", "58b3a0d6eea87e6b76000044": "Simple Fun #168: RSA Super Key Generator", "58b626ee2da07adf3e00009c": "Simple Fun #171: Get Candy Position", "58aa6141c9eb047fec000133": "Simple Fun #143: Is Survivor Number?", "59547688d8e005759e000092": "Simple Fun #334: Two Beggars And Gold", "58980e288927f7f6e300001b": "Simple Fun #98: Day Of Week", "58ad0159c9e5b0399b0001b8": "Simple Fun #153: Knight Rescue", "58fea5baf3dff03a6e000102": "Simple Fun #206: Factorial Digits", "59015f8cc842a3e7f10000a4": "Simple Fun #220: Simplified Array", "595467c63074e38ba4000063": "Simple Fun #333: Incomplete Virus", "5954584610080b7252000003": "Simple Fun #332: Catch Thief", "5954452fc0467e94bf000056": "Luhn Algorithm", "590148d79097384be600001e": "Simple Fun #217: Sort By Guide", "5953e4a29e93cef2e90000aa": "Hide phone numbers", "5595c56aa6ca910f27000155": "Escaping The Matrix", "55a4de202949dca9bd000088": "A Simple Postfix Language", "59535e88e996027100000006": "Simple Fun #331: Mountaineering!", "590fca79b5f8a69285000465": "Simple Fun #251: Apples Distribution", "582bbdbcc190132e3e0001f3": "Even Binary Sorting", "56576f82ab83ee8268000059": "Running out of space", "577dc302a56c88863a0001a2": "Rebuild the Map method", "58be3d340f2c5d2ce5000056": "Cut it down!", "594b898169c1d644f900002e": "RoboScript #4 - RS3 Patterns to the Rescue", "58a5d9aaa49f6cd0f9000ad7": "Fibonacci Generator Function", "583353eab189a5b860000049": "Lazy Chain", "59530d2401d6039f8600001f": "Number of measurements to spot the counterfeit coin", "5737f14449fc581de9001845": "Inner Calls In Recursion I", "58603c898989d15e9e000475": "Master your primes: sieve with memoization", "5882b052bdeafec15e0000e6": "Thinkful - Object Drills: Quarks", "58fff93c31c24ad198000080": "Simple Fun #212: Processing Requests", "5899f1df27926b7d000000eb": "Tower of Hanoi", "595249fc10b69f4f7a000003": "Do you know how to make Query String?", "573b79da301a2d48060001f7": "Regex Match Generator: Alternation", "53165ceea8fbdb4e0c00015b": "Quantum Bogosort", "58dc188353a708f07400043f": "is it Prime?", "572fb7b3d59ee7371700153e": "Are you the \"One\"?", "5951fad4e57e415138000046": "Simple Fun #330: The Selling Price", "5902f769dbf4ccbdd900005d": "Simple Fun #224: Blindfolded", "5951ce09add2b6d9b8000017": "Simple Fun #329: Best Score", "5951c2025e26397ef6000001": "Simple Fun #328: Sprinkler", "5951b409aea9beff3f0000c6": "Simple Fun #327: The Final Attack Value", "590c3b1ff06c49a024000001": "Simple Fun #249: Subtraction By Regrouping", "591570559f40564592000114": "Simple Fun #271: Chessboard Shapes", "55bcf04de45497c54a0000d0": "Defining getters and setters on an existing class", "59512d72944ca1feb000013d": "Calculator (Addition and Spaces) [Part 1]", "58b57f984f353b3dc9000030": "One Line Task: Palindrome String", "5906bc3e59a2f7d14e000048": "Simple Fun #227: Liquid Mixing", "591b9c07266a3164c90001fe": "Choose featured projects for Gratipay's homepage!", "595103838e7871aa4c000069": "Derive Cipher from Plaintext", "59507fb9438dbf17de0000a5": "Simple Fun #325: Coins In Hat", "5716afffb436cf11b7001937": "Too Big To Sum?", "5950a4bfc6bf4f433f000031": "Simple Fun #326: The Shortest Time", "594fae1a0462da7beb000046": "Jump!", "5825d14385f5c52a590000b2": "dataTypes String to Array", "594fd4950462dadf2e000112": "Zero Crossing Rate", "58c3fbe3ea65729f3800007d": "Validate credit card expiry date", "59031db02b0070a923000110": "One Line Task: Zero Or One", "594b8e182fa0a0d7fc000875": "Without the letter 'E'", "57a5f023e298a767da0000d5": "Inverted school grades", "577ccfad311a2442f00001ab": "Graphics Series #6: Traffic lights check", "58aed2cafab8faca1d000e20": "Nth power rules them all!", "58b9e63c92ef0db5fe0000a3": "Count Prime", "5831caa9fe3801522300000c": "Min value of each n elements -- Challenge version", "5695995cc26a1e90fe00004d": "The learning game - Machine Learning #1", "563fbac924106b8bf7000046": "Breadcrumb Generator", "529f5e262281a70d9b00088a": "Arithmetic Expressions Evaluator", "587a58d008236e4951000197": "Recursion puzzle", "5859d3325a8a0747180000c6": "Thinkful - String Drills: Hello,  World", "594cd799c08247a55a000004": "Simple Fun #324: Is John Lying?", "594cc999d3cc8c883a00003b": "Simple Fun #323: Bears And Apples", "567610d21541a88876000024": "ThetaFormulation", "58a3ea0a8bdda5093800000e": "Simple Fun #128: Doubly Not Less", "590005bab7c61748c0000039": "Simple Fun #214: Pascal Matrix", "53cae2709bbf4cb80c000575": "Pascal Problem", "536e7c7fd38523be14000ca2": "Simple Memory Manager", "522f421badceba9f8a0000a6": "Set - the card game", "53006ec8c7c0f4f5e00002c3": "Fancy Schmancy Sort", "52bb6539a4cf1b12d90005b7": "Battleship field validator", "53e57dada0cb0400ba000688": "Alphabetic Anagrams", "5701e26c86306aa45f001847": "hidden key", "58d98655ac203322a6000081": "All representations as binomial coefficient, or: How often in Pascal's Triangle ?", "525ca723b6aecee8c900033c": "Complex CSV Parser", "57980be93467db22f5000038": "Training Random Testcases #1: Fizz Buzz", "5779b0f0ec883247b2000117": "Peano numbers", "594a5d8f704e4d5561000019": "ASCII Fun #4: Build a pyramid", "594a7ea087a7c6cbe60000d6": "Oh come on! Hello world! once again?", "5671d975d81d6c1c87000022": "4 By 4 Skyscrapers", "594a2d1ba8a4a534920000c1": "Simple Fun #322: Scratch lottery III", "594a2758954a44749f000359": "Simple Fun #321: Scratch lottery II", "58b059225cf83240d800007c": "One Line Task: Digit-Virus", "58bf79fdc8bd4432d6000029": "Simple Fun #188: Slogans", "56e3cbb5a28956899400073f": "Maximum Subarray Sum II", "552ec968fcd1975e8100005a": "N00bify - English to n00b Translator", "58dbdccee5ee8fa2f9000058": "Do you speak \"English\"?", "594a1822a2db9e93bd0001d4": "Simple Fun #320: Scratch lottery I", "52d9b893b2fcb0b76c000029": "Movie Agent", "577b9f99ae2807531f00001c": "Who needs lodash anyway?", "57f802427b992e7f030001fb": "Rotate Square Matrix Clockwise, In Place.", "57c178e16662d0d932000120": "Bundesliga 1. Spieltag - First Match Day", "573bd40dade727d59a0001ea": "fogcity89's Kata #3", "56c85eebfd8fc02551000281": "Play Tetris  :  Shape anastomosis", "55db7b239a11ac71d600009d": "Integer triangles", "58120969784095e1c8000090": "Working from Home - Lunchtime Beer", "578e55c275ffd11cb3001045": "Chessboard Squares Under Queen's Attack", "56983c83247662b3fb00005c": "Multiply a very large number", "56d930a9ba01a86d8f0006b7": "hjyao's Kata #3", "5949481f86420f59480000e7": "Odd or Even?", "594946120f7b28c70300008d": "Its all backwards", "585de79128bc74912d0001c5": "Smallest Difference", "5696c8b5fddc42058b000032": "Configure an express server", "584e93a70f60247eb8000132": "Perfect Square.", "58e7c765eaf2068d67000028": "Beetlejuice!", "577ce2c97a3dbd74b7000059": "Determine sizeof C datatype - Beginner (No prior C knowledge required)", "57c18a16c82ce75f4b000020": "Number of Digit d in m-based Number Converted to Base n", "5877786688976801ad000100": "Creating a string for an array of objects from a set of words", "56ff358cc25bf37e75001cb0": "ScholarStem: Unit 5- Balloon count!", "5845a382a470750207000a4e": "Welcome to Economics! #1 Consumer Price Index", "58922d454570478bb4000050": "Trinary", "5645f5c18ef0b11a84000066": "Flatten nested map  with generators", "54d130bb11b05bd224000212": "Big Arithmetic - integer add/subtract", "5947d86e07693bcf000000c4": "ASCII Fun #3: Puzzle Tiles", "54ce4c6804fcc440a1000ecb": "Burrows-Wheeler-Transformation", "59414b46d040b7b8f7000021": "Turn any word into a beef taco", "594093784aafb857f0000122": "Difference between two collections", "574d0b01b4b769b207000ca3": "Priori Incantatem", "5738d04fd9fc5355f700106e": "Balanced ()", "57cc847e58a06b1492000264": "Sort and Transform", "57cc992b484cf908740001af": "Copy Within - Beginner", "5774d8ae6eb870c26e000420": "T.T.T.10: The largest square", "588b7765beb7a6fa19000008": "Integers Sum Square", "59473c0a952ac9b463000064": "Alphabet war -  Wo lo loooooo priests join the war", "5877146c7aad3940f0000029": "Well, that's just (proto)typical!  The Misadventures of Bob the Highly Paid Consultant #3", "587593285448632b8d000143": "Promises Made and Broken: The Misadventures of Bob the Highly Paid Consultant", "5876a9f6b09010b1b4000191": "This isn't what you think!  The Misadventures of Bob the Highly Paid Consultant #2", "58ad740c4b852be4a3000381": "Find warrior's  kyu!", "57d993083c3f960c71000005": "99 Problems, #5: reversing a list", "59474c656ff02b21e20000fc": "Ciphers #2 - The reversed Cipher", "594620d5e80216ec6700003a": "Lat/Long Parser", "5889177bf148eddd150002cc": "TIY-FizzBuzz", "5945fe7d9b33194f960000df": "Find the gatecrashers on CocoBongo parties", "57d1203395497e99120000c9": "Car Door Roulette - Easy Version", "58d82486ba7462035000005f": "DP - Edit Distance Part 2", "58e0f0bf92d04ccf0a000010": "Count all the sheep on farm in the heights of New Zealand", "5944f3f8d7b6a5748d000233": "Distance Between 2 Points on a Cartesian Plane", "59441520102eaa25260000bf": "5 without numbers !!", "54ce6115975ca685dd0005d5": "Move-To-Front Encoding", "5944367162ed20be2a00005d": "Filter out the vowels", "5943bf2895d5f74cfb000032": "Random Substitution Cipher", "5943db60800cebe12000003d": "Throw without throwing", "5659c6d896bc135c4c00021e": "Next smaller number with the same digits", "552b1404db0236b2cb0006f4": "Seating arrangement at a Polyglot Summit", "581056ba36a3e5446d00007f": "Random number in range", "59437bd7d8c9438fb5000004": "Alphabet wars - nuclear strike", "583a02740b0a9fdf5900007c": "[Minecraft Series #2] Minimum amount of fuel needed to get some iron ingots", "58d41a73a1111a21030000c3": "Sashay, array!", "588882cc8a595fd897000503": "What is love?", "57e7d21f6603f6e31f00007c": "The Crockford Invocation", "556a8adc4e0876d6a6000187": "Array Imposter (a.k.a. String Undercover)", "56c4931400165c5283000661": "NASA Countdown", "58298e19c983caf4ba000c8d": "A Man and his Umbrellas", "57b64627d2415635ac000529": "Just Adding and Multiplying", "5941c545f5c394fef900000c": "The Greatest Warrior", "5804ec60e05356a31c00032f": "Sugar Rush", "55a838015aea588a8d000173": "Answering questions about data with Lo-Dash - 1", "5424e78460d77749f2000279": "Go so far around to the right that you end up left", "5796ca797cb7a1cee10009d0": "Make the sum... if you can.", "54c2d10ffb7da04f04000bca": "The ugly truth about reduce (iii)", "54c8df9c331458279e00145e": "The ugly truth about reduce (ii)", "54c29efd6fd290c8140017d7": "The ugly truth about reduce", "59409680cda33a496700000a": "Code Fantasy 1: The Beginning", "57e6dd0b6603f63e4f0000fd": "NHA JS1 Variables - Declaration & Assignment", "586a961e2d52097283000314": "Hack My Account!", "553d83abe29b91be2f00006c": "Super Smaaassh Brotheerrrs!", "59418db3f5c394eca80000ef": "Walk the Object Path", "57b6f1bab69bfc9fb80002ca": "Gradually discounted milk price", "5940ec284aafb87ef3000028": "Number Decoding", "594153d346e38d8017000060": "Will the Brick Sink?", "5610a8eeb9a84d624b000005": "The sortReloaded() method", "5817ff3ad4f64f4192000225": "Spider man and his enemy", "58dd82aeee8586d9b800007e": "Find the Length of One Side of a Right-Angle Triangle Given the Lengths  of the Other Sides", "581951b3704cccfdf30000d2": "Split Without Loss", "583d171f28a0c04b7c00009c": "The maximum sum value of ranges -- Challenge version", "579ef9607cb1f38113000100": "Operation Transformation", "56efff4a49cd0c58a0000b8c": "Handy Toolbox for Kata authors", "5378d0eba3abed845a000c03": "String Compression Challenge", "55f1a53d9c77b0ed4100004e": "Multiples by permutations ", "5835e6ce6bdc270a5f00019b": "BRL currency format", "56242a31689c352359000044": "Deep Assignment", "56eb717c2caf7923bf001bf5": "Horse racing(\u7530\u5fcc\u8d5b\u9a6c)", "57cc8f3058da9e302a0001c4": "No Loops 3 - Copy Within - Shortest Code Version", "589926bf7a2a3992050014f1": "Fib Factorials", "5736b7b749fc585e8900001f": "Make it equal", "57e8ff073d1cb559280005de": "Holiday IV - Leg Room", "56c2a067585d9ac8280003c9": "Job Matching #3", "57c2be599f48a8244000004f": "Climbers Rankings", "556032250449c422d200004a": "Treasure hunt", "593c9175933500f33400003e": "Return the first M multiples of N", "58b8e11f60873d9068000110": "One Line Task: Pyramid Matrix", "57847054bc2e0fcdaa000106": "Add Unique Array Numbers", "593ee7195b851e1bc90005b0": "Order by frequency", "582cc36ecd858349b40000c5": "Return TIMESTAMP from date", "5840946ea3d4c78e90000068": "Gryffindor vs Slytherin Quidditch Game", "58d2d014e8f439e1e100005b": "Sum things up", "55edf7644b1368e39400000b": "Throw from list - Error Handling #3", "58e6868cfd2d89e9370001ad": "Count letters in a string", "5544cf192162f146400000cf": "Multiplication sequence - part 1", "588bb1195eb601f5d400001f": "Numbers in different systems ", "587cecb7024ac70348000008": "Implement Array.prototype.forEach", "5808ce703e55743db7000d92": "Extract the contents of a given tag from the HTML document", "593f50f343030bd35e0000c6": "Ciphers #1 - The  01 Cipher", "58cfd705f9dffe0f510000fb": "Automaton (Part 3)", "58cd1da0bd0fd3dede00007a": "Automaton (Part 2)", "58cc4aa45b73bae58a000e67": "Automaton (Part 1)", "5890579a34a7d44f3b00009e": "Number Manipulation I (Easy)", "5838d930aa67172cb300004a": "Everything that remains", "580e6adffbf2be2e870005c0": "Create Your Own \"Promise.all()\"", "593e84f16e836ca9a9000054": "Return 1, 2, 3 randomly", "593e978a3bb47a8308000b8f": "Matrix Rotation", "58636dd335af2120f10001ef": "Spliter - Enhance Split", "593e2077edf0d3e2d500002d": "Alphabet wars - reinforces massacre", "5937ae46377144bb2f000029": "Print a Rectangle Using Asterisks", "56c5f95027be2cbe660017a7": "It's Full of Stars", "58402cdc5225619d0c0000cb": "I am very very very....", "57bc802c615f0ba1e3000029": "Faro Shuffle Count", "56d9439813f38853b40000e4": "Strings, strings, strings (Hard)", "58d93a93091c1143e80000e9": "Get the Mean", "5861d2266d36a54f820000e6": "Bill Gates' Percentage Calculator", "55c02535bf0974404b0000f9": "Summations: 1", "58ed00fef70c1219b8000103": "Count the Number of Words in a Sentence", "58552bdb68b034a1a80001fb": "Fast cooking pancakes", "58dd95d4b4b74ca604000068": "Last Digit  of an Array", "58d5a7c21c040283b0002d88": "Insights for Uncle Tom", "578561389722bcd42e000251": "Palindrome Checker", "58974de5206bed389d000040": "Calculate Factor", "58a3cb34623e8c119d0000d5": "Simple Fun #126: Decrypt Number", "55bc0c54147a98798f00003e": "Longest 2-character substring", "5376343a003bf6e034000c56": "Closest pair of points", "52fe629e48970ad2bd0007e6": "Efficient Power Modulo n", "529b9ec8064ec38636000134": "A simple Tic-tac-toe class", "5518a860a73e708c0a000027": "Last digit of a huge number", "55084d3898b323f0aa000546": "Second Variation on Caesar Cipher", "58b8d22560873d9068000085": "Simple Fun #178: Faulty Odometer", "53c945d750fe7094ee00016b": "Modular Multiplicative Inverse", "53b406e67040e51e17000c0a": "LRU Cache", "57040e445a726387a1001cf7": "The fusc function -- Part 2", "572ced1822719279fa0005ea": "Building Chains Using  the Arithmetic Derivative of a Number", "593c0ebf8b90525a62000221": "Grocer Grouping", "586c1cf4b98de0399300001d": "Grasshopper - Terminal game combat function", "54acd76f7207c6a2880012bb": "Decode the Morse code, for real", "59321f29a010d5aa80000066": "Help  Mrs Jefferson", "581bb3c1c221fb8e790001ef": "Remove a Specific Element of an Array", "5578a806350dae5b05000021": "Fluent Calculator", "585b373ce08bae41b800006e": "Create a funnel", "565ed355e532022eb50000ad": "How to pronounce French.", "5939f09c193f71b5fc0000fa": "Code Adventurer Guild: HongKong", "58958ef541c9794213000090": "Simple Fun #90: Rows Rearranging", "593a061b942a27ac940000a7": "Getting MAD", "585cd11a0a7b90c529000ceb": "Count Repeat Times of Array", "543e926d38603441590021dd": "Get All Possible Anagrams from a Hash", "582b87012d44a4b260001f40": "String tree-ification", "58954096f780edd09a0001ce": "Challenge Fun #2: Gravitation", "58762a170afb9881da0001f5": "Palindrome", "564d5bc681b135f1c60000b9": "Many  Maps As One", "583845d32fb0bab919000004": "Odd only", "572ad64ea3af3833240012cf": "String Gymnastics", "57e402969cb1193746000744": "Personalising Spammy Marketing Emails", "55f7c3664fec281400000023": "jsPizzeria", "56782b25c05cad45f700000f": "Polynomial Evaluation - Binomial Form", "58d5becd3cdcbff3c1000065": "Convert me to an Array of Numbers =)", "5939ab6eed348a945f0007b2": "Inspiring Strings", "593965ac6ae2227953000111": "Dota 2 - Effective HP calculator", "59392ff00203d9686a0000c6": "Guess the array", "5902bc7aba39542b4a00003d": "The Hunger Games - Zoo Disaster!", "5938a6a57b952e5b0d000005": "Code Adventurer Guild: BeiJing", "58df2d65808fbcdfc800004a": "Protein Synthesis: From DNA to Polypeptide", "5877c57388976801ad0004cb": "Is my girlfriend right?", "5780a8a1a56c88f04800096f": "Joe_fe's Kata #2", "5938fca106c3037d72000194": "My First Kata - Greetings!", "5938f5b606c3033f4700015a": "Alphabet war - airstrike - letters massacre", "58db8adbb9f417c74b000049": "Body Mass Index (BMI) calculator", "55c0c452de0056d7d800004d": "Church Numbers - Add, Multiply, Exponents", "5831200eb812b8016d000094": "Smart Sum", "57b68a8f20b1042eb900000e": "BitMath: Multiplication", "57a6c52a72292d3235000187": "BitMath: Addition", "5832514f64a4cecd1c000013": "Chess piece values", "57fd8d7187b8012f4700062a": "Combinations with identicals", "57fdb79487b801698e000a0f": "Permutations (partial) with identicals ", "57f8b50f5cae448cb70001fd": "Permutations (partial)", "57f65eec6730511aad00017f": "Combinations", "545a4c5a61aa4c6916000755": "Find the middle element", "58e927c3cf8fff9296000108": "Distance between Black and White", "5389e2b687c26dcc530008e5": "sliceBits(int, from, count)", "583310c5dbeb310c34000352": "Work out is it falsy or truthy?", "584e4ef56cf17fc491000e0a": "Cost of Shopping", "55f91566e0d2317066000057": "YACK (Yet  Another  Currying Kata)", "57fa3240e8c829230700041f": "Array.prototype.push", "5826231422be6e7344000006": "zipWith II: Lists :]", "58dd55d23f371190f30000a0": "Andy's coffee addiction ", "57ff389608d1023524001327": "Compare by value", "56fc7a29fca8b900eb001fac": "Shortest Code: Collatz Array(Split or merge)", "56fe9d579b7bb6b027000001": "Coding 3min: Collatz Array(Split or merge)", "5700c79dc155575b31000265": "Shortest code : Balance Attraction", "57033601e55d30d3e0000633": "Coding 3min : Balance Attraction", "57aae4facf1fa57b3300005d": "T.T.T.27: Four piles of apples", "5703ace6e55d30d3e0001029": "Coding 3min : Tidy up the room", "588bc0c1ee6bd08b3a0000ac": "The Most Repeated Letter. ", "58fdc60ed94f25a863000092": "Array of twins", "55b195a69a6cc409ba000053": "Total increasing or decreasing numbers up to a power of 10", "581214d54624a8232100005f": "Change two-dimensional array", "59150753cdee8ddd2c000009": "Combinations of Logs", "5937782609515c4ac300001d": "Triangle Line Task: Fizz Buzz", "59377c53e66267c8f6000027": "Alphabet war", "5934d648d95386bc8200010b": "Ka Ka Ka cypher - words only vol 1", "5913f53a4ef30521ab00002e": "Simple Fun #266: K Bits Digits", "58bc634725e5225397000005": "Unique items in Array", "5934485ed953861c3100005f": "Find my birthday", "58bae32c14f4f2d378000ce8": "Sort Letters Sum Numbers", "58063f6c6d88be7cc200006b": "Code-ilocks. This exercise is JUST RIGHT!", "5702f077e55d30a7af000115": "ScholarStem: Unit 6- Baby count! ", "57991e4f3467db48c20000f1": "Symmetric Difference", "566c3f5b9de85fdd0e000026": "Walk-up Stairs ", "593406b8f3d071d83c00005d": "How many animals are there?", "59357d303864834c1a000026": "Find twice of a number's value", "5934423e5f390dd9ed0000e1": "Slightly more comfortable Object.assign", "5934171fcff4ac4f69000028": "Same calendar?", "5934ef21b2defb45df000026": "Find a number increase", "58be3f72c1dd1e6ec0000091": "Edit That Brochure", "58a4f7f43d97b56d27000022": "Reverse Odd Count", "573b4dbdffc3d1a51800137f": "Isolate the keys", "5934b1db00f77d7d84000016": "Simple Fun #315: Stock God", "5936371109ca68fe6900000c": "Simple Fun #319: Number And IP Address", "5936256f2e2a27edc9000047": "Simple Fun #318: Sort String", "5936107d40ed69ea1e00003d": "Simple Fun #317: Coordinate Helper", "5934c24ed953868340000014": "Simple Fun #316: Buy Fruits", "5830e7feff1a3ce8d4000062": "Area and perimeter of the ellipse", "578a55517c77f535a8000064": "Sum of values from 1 to n inclusive { n\u03a3n=1 }", "5935ecef7705f9614500002d": "The most asked question on CodeWars", "56c6ca817e38e9d1190005a7": "Beautiful STAR", "5869d40ddbca9a6221000132": "All Star Code Challenge #32", "5865a407b359c45982000036": "All Star Code Challenge #19", "58640340b3a675d9a70000b9": "All Star Code Challenge #3", "58641f6eb359c4611c0001f2": "All Star Code Challenge #6", "5864916573bd9c1e1c000007": "All Star Code Challenge #12", "58657574a5f191e4090002ab": "All Star Code Challenge #17", "5866c9e7dbca9af99400009e": "All Star Code Challenge #25", "5864614683f7e6e7830000c1": "All Star Code Challenge #9", "58646a1173bd9c86080000ef": "All Star Code Challenge #10", "5864001db3a675d9a7000091": "All Star Code Challenge #2", "586566b773bd9cbe2b000013": "All Star Code Challenge #16", "5866d90edbca9ae420000145": "All Star Code Challenge #26", "58d76854024c72c3e20000de": "Reverse every other word in the string", "59016379ee5456d8cc00000f": "One Line Task: Squirrel And Tree", "583cd1a8977933957800026e": "Natas Recipes", "58646b6439c5ab22fb0000e0": "All Star Code Challenge #11", "588fe9eaadbbfb44b70001fc": "Zalgo text reader", "58b7fafd0571aa5f44000038": "replace a string with * except the first letter", "58e77c88fd2d893a77000102": "City Swim - 2D (TowerFlood And PlainFlood)", "583daf5f8bbc0446f50002d0": " Trapping Rain Water", "565c4e1303a0a006d7000127": "Number Format", "58882bdb5edef0343400002a": "Simple Fun #43: Ada Number", "54c26ee86fd2903443001394": "Circumference Pathing", "58d3cf477a4ea9bb2f000103": "Rotate a square matrix like a vortex", "586dd5f4a44cfc48bb000011": "Spaghetti Code - #2 Hard", "58ebfa6ef7cda1a3d4000048": "Holy cats", "5935558a32fb828aad001213": "Multi Line Task++: Hello World", "593550e26d07549c5100004a": "Multi Line Task: Fizz Buzz", "59354ece32fb82522f000002": "Multi Line Task: GCD Function", "56a73a200c91389531000063": "Regular Expression - Check if divisible by 0b101 (5)", "5647c3858d4acbbe550000ad": "Regular expression for binary numbers divisible by 5", "578cf7e2daa01af481001589": "Factorial Fun", "5845a88c595540840900006b": "Map keys of an object", "56a115cadb39a2faa000001e": "Add commas to a number", "588c0a38b7cd14085300003f": "Find Number With Maximum Number Of Divisors", "586405a639c5abc2db0000e8": "All Star Code Challenge #4", "58aac690d68a9c7a300000c0": "Beginner friendly: Uppercase a string", "57d83dfc950d842dcb00005b": "Concatenate sequential page numbers in an array", "5933af2db328fbc731000010": "Get Smallest Common Factor", "59339669a66ac5f95000005b": "One Line Task: Sum of Preceding Ints", "57e8e9df2aee49c0280009ab": "Holiday I - Temperature in Bali", "58dd153bb98bece0c40000a6": "Mrs Miggins the crazy cat lady ", "5773e83810a0a60dca000a1b": "Valid Shuffle", "557d18803802e873170000a0": "String Shortener (shrink)", "57e921d8b36340f1fd000059": "Holiday VI - Shark Pontoon", "53d56645ed770fb7c500085f": "Find something in an Array", "56a2e3419f9e920186000004": "The Lamp", "58aacf3e048560c705000799": "Beginner friendly: Lowercase letters", "5711fc7c159cde6ac70003e2": "Search The 0 Sums Combinations in an Array", "582c5e763fd1ccc4bd00037b": "FizzBuzz", "58063cdcc27998d01f00031b": "Switch on some pizza", "58e0bd6a79716b7fcf0013b1": "Calculate Two People's Individual Ages", "58f1419b03388b4d45000081": "RegExp for validation string", "587854330594a6fb7e000057": "Math engine", "5817e09e628854ed390004cb": "Translate to 1337", "5799a2d13467dbc64900094b": "Who am I?", "586a933fc66d187b6e00031a": "Image host filename generator", "592a5f9fa3df0a28730000e7": "Dark Souls: Prepare To Die - Soul Level", "58587905ed1b4dad6e0000c6": "Smart Traffic Lights", "5933b154a08ce9f9730005f8": "Antipodal Points with Same Temperature", "58348ae9ed088ccf96000005": "Counting number of words having a second vowel", "5763a557f716cad8fb00039d": "Graphics Series #3: Repair the LED display", "583c905cb0972b3ad90000ea": "Switch", "589aa12dcb4fabf6e9000611": "Simple Fun #108: Task Maker", "582933a3c983ca0cef0003de": "Children and candies", "586430a5b3a675296a000395": "Cost of my ride", "57d250e55dc38e288c000081": "I guess this is a 6kyu kata #5: Whac-A-Mole", "586aee762d5209d4b0000186": "MOBA game rage simulator", "555b1890a75b930e63000023": "Find all possible number combos that sum to a number", "55e1990978c60e5052000011": "Merge in 2048", "57a0515f53ba33ac5e000245": "Sum of list values", "57da675dfa96908b16000040": "Maybe - concat 2 maybe's", "59329b7da66ac588e600014e": "Page pagination", "59325dc15dbb44b2440000af": "Are we alternate?", "5932c94f6aa4d1d786000028": "number with 3 roots. ", "58cfa5bd1c694fe474000146": "Socialist distribution", "58b65c5e8b98b2e4fa000034": "Simple Fun #174: Unlucky Number", "5768b217b8ed4a77c0000c46": "T.T.T.#6: nth user", "5931614bb2f657c18c0001c3": "Cancer cells", "53d51336c2c772aa43000724": "Moving element in an array", "57cc40b2f8392dbf2a0003ce": "No Loops 2 - You only need one", "59318a9d4d03c38f7a00006a": "Rabbits", "5930d8a4b8c2d9e11500002a": "Digital cypher vol 3 - missing key", "52ef1c60a863b919ef00025f": "Poker cards reducer", "562b2ef267350ad163000106": "Composed Integers Having Prime Factors Only Once", "59302a6af1c4f0a8fe0000a6": "Sum the Arrays", "57cebf1472f98327760003cd": "Coloured Lattice Points Forming Coloured Triangles", "5293ef9b6144df008d000147": "better Add Floats", "52cc2bbafb9a9985a700061f": "Number.prototype.toDecimal", "592fd8f752ee71ac7e00008a": "Covfefe", "58fdcc51b4f81a0b1e00003e": "Pigs in a Pen", "57ec7091e77282474000060f": "So Easy: Arrange students' seats", "5717924a1c2734e78f000430": "Building a Sequence Cocatenating Digits with a Given Order.", "56f7eb14f749ba513b0009c3": "Thinking & Testing : Safe position", "57be87d184972da58e0001e2": "T.T.T.49: John and Anne's sweet date", "592eccf7d6a5403edf000aa1": "Adding words - Part II", "57b127051fae8a1d1b000104": "T.T.T.34: Five boxes", "55cf3b567fc0e02b0b00000b": "Getting along with Integer Partitions", "59279aea8270cc30080000df": "The Freeway Game", "5240e3a98d333f81950001ad": "Fast Stats on an Array", "592cc1eee19620efef00001a": "groupBy", "587c0d396d360f3cc600003f": "Euler method for numerical integration", "592f777f096ba4eb8d000054": "Number of Clouds", "55f9ee4d8f3bbabf2200000c": "MONTE CARLO 3D", "580792e79c739987c1000022": "Sum and Cubed", "592edfda5be407b9640000b2": "Digital cypher vol 2", "592f34d27801826d150000ab": "Snake Draft", "57fe50d000d05166720000b1": "The Office VI - Sabbatical", "57e93e4a2aee4974d4000c2f": "Holiday X - Bintang Vests", "592eaf848c91f248ca000012": "Adding words - Part I", "58288cc7ef8d44e3df000296": "Messing with the Elements", "569a3221d69a2b6ee4000060": "To buy or not to buy", "592e830e043b99888600002d": "Digital cypher", "5516b80d891547c9b50007fd": "Playing with laziness", "538f6fe1f4d60f8726000cf2": "A function to display Mottos for Westerosi Houses", "592dcbfedc403be22f00018f": "Markings to White Triangles and How to Find Them", "592e3b99166edbd005000065": "Simple Fun #313: Create +- Triangle", "57777e595d69f808f2000140": "Get the closure property", "57fe54302ad2dc1c8e00081e": "The Office VII - Expression of Interest", "592a5ec26d6c5a3769000081": "Factorial (gamma)", "592e2446dc403b132d0000be": "Simple Fun #312: Maximum Product", "562c5ea7b5fe27d303000054": "Permutations Of An Array And Associated Values", "5681e4ff81ba1b0cdb000031": "Check a Curious Divisibility. (Brute force version)", "59245b3c794d54b06600002a": "Bleatrix Trotter (The Counting Sheep)", "592d7b3f8a124edf080007ea": "No Return #3: Solve the Equation", "55f81f9aa51f9b72a200002f": "Find the unique number", "5917f22dd2563a36a200009c": "Algebraic Isomorphism", "52793ed3fdb8e19406000c72": "Monads:  The Maybe Monad", "592c6d71d2c6d91643000009": "Carpet shop", "59280c056d6c5a74ca000149": "Simultaneous Equations - Three Variables", "58d4785a2285e7795c00013b": "Two's Complement", "5922543bf9c15705d0000020": "Isomorphism", "54f9173aa58bce9031001548": "The takeWhile Function", "59290e641a640c53d000002c": "#1 Sequences: Pure Even Digit Perfect Squares (P.E.D.P.S)", "582fdcc039f654905400001e": "Sorting Arrays by the Amount of Perfect Squares that Each Element May Generate", "585b989c45376c73e30000d1": "Christmas Present Calculator", "592bdf59912f2209710000e9": "GA-DE-RY-PO-LU-KI cypher vol 3 - Missing key", "59098c39d8d24d12b6000020": "ASCII Fun #2: Funny Dots", "592c1dfb912f22055b000099": "Mr. Safety's treasures", "59269e371a640c0e98000085": "X plus Y Card problem", "58ff1c8b13b001a5a50005b4": "Sort My Animals", "592aca6975b580142000098e": "No Return #2: Test the Devices", "52de9bd621c71b919c000592": "Hyper Sphere", "543833d86f032f0942000264": "Hutton's Razor", "592b7b16281da94068000107": "GA-DE-RY-PO-LU-KI cypher vol 2", "5927d1e26d6c5a89d1000023": "One Line Task: Periodic Rows", "584fa5ae25dd087e6b000070": "Is my string repeating the same character over and over ?", "582b327fc19013405e000014": "Who's Next in Line?", "566039931cb747be82000095": "Mutation in Arrays", "5728fd7ea1f69f234c00000a": "Is Array?", "592a6ad46d6c5a62b600003f": "GA-DE-RY-PO-LU-KI cypher", "592a33e549fe9840a8000ba1": "isEven? - Bitwise Series", "57cc91a458a06b1492000318": "No Loops 1 - Small enough? - Shortest Code Version", "58dd1c1710d1620c27000219": "Bill & Bobs Secret Language", "59293c2cfafd38975600002d": "Find matching parenthesis", "5928da5f1fad49c34d00013a": "Canvas Fun #1: Draw Lines", "592915cc1fad49252f000006": "No ifs no buts", "5927cea3af58a6f111000024": "One Line Task: Super Even", "580435ab150cca22650001fb": "Find the lucky numbers", "544a247518b8e08af2000251": "Ordinary Ordered Objects", "57c9359540e302d32700013a": "Person type - string representation", "5927db23fb1f934238000015": "Find primes in range (complexity matters)", "5927caedaf58a600ff00000b": "Simple Fun #311: Missing Term", "5901555b63bf404a66000029": "Simple Fun #219: Light Bulbs", "5927aabdf3a75890a10000ee": "Simple Fun #310: Array Conversion", "592791d2f3a7584c260000fc": "Simple Fun #309: Python Snake", "592786effb1f93349b0000b2": "Simple Fun #308: Hamming Rotate", "562e9828fb8d9bdaee000069": "Factorializing a number", "5926e6589b424d852c000050": "switch case (lower case to upper case and vice versa)", "5926d7494b2b1843780001e6": "Add numbers", "54411212cf36259c04000f04": "Find the k-th Element of a list safely", "592685a68270ccd7950001f8": "Simple Fun #307: Shaolin Kungfu", "5874d1c9d5abe8e534000235": "Two's complement", "59267e389b424dcd3f0000c9": "Vending Machine - FSA", "59264edbd771a7e7e60000b6": "Simple Fun #306: Super Brain", "592645498270ccd7950000b4": "Simple Fun #305: Typist", "5925acf31a9825d616000e74": "Friday the 13th Part 1", "57a852c353ba334961001480": "Say `Hi` - Person type", "587a75dbcaf9670c32000292": "No yelling!", "592541dd071ba5bbd800001d": "Simple Fun #304: Garbage Bomb", "59252121fb1f93fc8200013a": "Simple Fun #302: Find The Max Sum", "58dc15eed2ba027579000175": "Letter to ASCII", "5680781b6b7c2be860000036": "Find the vowels", "56459c0df289d97bd7000083": "From-To-Step Sequence Generator", "592538b3071ba54511000219": "Simple Fun #303: Prime Product", "5925138effaed0de490000cf": "Simple Fun #301: Rope Skipping Game", "54162d1333c02486a700011d": "Penultimate", "55afed09237df73343000042": "lucky number", "5416356b1b28a5e297000bc7": "Find the K'th Element of a List", "57a20510cf1fa5bfc400095f": "Make all numbers negative", "57a06c1b7cb1f3e15b00082b": "Is it a digit?", "57a6633153ba33189e000074": "Ordered Count of Characters", "5809c661f15835266900010a": "Double Every Other", "5436bb1df0c10d280900131f": "String array joining in Haskell", "57a06b07cf1fa58b2b000252": "Is it a letter?", "57a06e21e298a7b5ae000229": "Is it whitespace?", "57a1ae8c7cb1f31e4e000130": "Find min and max", "57a059d753ba33229500001a": "MakeLowerCase", "577303d4914da62b4b0001c4": "Smallest Pair Sum", "56a2d27f8af7384815000037": "Concatenate two list", "54ba504e2804ced78a000170": "Know your ABCs", "57a1dd9fcf1fa5d0d100005f": "Count vowels", "5738f5ea9545204cec000155": "Help Bob count letters and digits.", "5840586b5225616069000001": "Which string is worth more?", "57b71a89b69bfc92c7000170": "Sum of squares less than some number", "579a4725cf1fa52d4700010e": "EAN 13 barcode key controller", "592421cb7312c23a990000cf": "Look and say sequence generator", "5866e26f2e8d9cdbcd0003d7": "All Star Code Challenge #27", "58424c2e5692f50715000080": "Perimeter of a Rectangle", "58555e3db45c01bada0001e0": "Stop worrying!", "588d54c2ce8a3532a500001b": "Day of The Week", "57aa7e5ecf1fa5c6ba00058f": "darlanmendonca's Kata #9", "55f2a1c2cb3c95af75000045": "When greatest is less than smallest", "57d0695142e44e65e8001346": "Infinite list of 1's", "579e3476cf1fa55592000045": "Find the GCF of Two Numbers", "58d3dd53b0fe8c9ac10000b3": "Beginner friendly: remove the letter o", "583872e3c233416868000162": "How low do you go?", "5912ded3f9f87fd271000120": "Guess the Word: Count Matching Letters", "589e39a06642d144a9000043": "Begin Coding ", "5922828c80a27c049c000078": "Simple Fun #299: Look And Say And Sum", "5922732862886e93d8000020": "Simple Fun #298: \"Hoop\" Game", "5630c850ed4343c1d0000083": "A (no more) bugs trilogy: Episode 3 - Make a  Player", "5630c81e8e90d20992000051": "A (no more) bugs trilogy: Episode 2 - An Array of Tasks", "57d2c32626427662e30004a6": "Are You a One-Liner? #2:  multiplication table", "5729fa716c7d26dc84000040": "Lowercase strings in array", "57cc4853fa9fc57a6a0002c2": "No Loops 1 - Small enough?", "586a3270c66d18ad810001d4": "Get array elements with specified keys", "5922009a5d4ad2322300008b": "No Return #1: Multiply", "5921c0bc6b8f072e840000c0": "Sequence classifier", "55e56e5b2f71cee88f00004f": "change for pizza", "5811501c2d35672d4f000146": "SQL Basics: Simple WITH", "58112f8004adbbdb500004fe": "SQL Basics: Simple UNION ALL", "58094559c47d323ebd000035": "SQL Basics: Simple JOIN and RANK", "58164ddf890632ce00000220": "SQL Basics: Simple HAVING ", "58113a64e10b53ec36000293": "SQL Basics: Simple EXISTS", "581676828906324b8b00059e": "SQL Basics: Simple FULL TEXT SEARCH", "58113c03009b4fcc66000d29": "SQL Basics: Simple IN", "580fb94e12b34dd1c40001f0": "SQL Bug Fixing: Fix the JOIN", "5811315e04adbbdb5000050e": "SQL Basics: Simple NULL handling", "5802e32dd8c944e562000020": "SQL Basics: Simple JOIN", "580fe518cefeff16d00000c0": "SQL Basics: Create a FUNCTION", "581283eb0a5fb13e06000020": "Hello SQL World!", "580918e24a85b05ad000010c": "SQL Basics: Simple JOIN with COUNT", "5809b9ef88b750ab180001ec": "1. Find all active students", "58111f4ee10b5301a7000175": "SQL Basics: Simple GROUP BY", "58111670e10b53be31000108": "SQL Basics: Simple DISTINCT", "581113dce10b531b1d0000bd": "SQL Basics: Simple MIN / MAX", "58110da0009b4f7ef80000ad": "SQL Basics: Simple SUM", "5809508cc47d327c12000084": "SQL Basics: Simple WHERE and ORDER BY", "582365c18917435ab3000020": "SQL Grasshopper: Select Columns", "591127cbe8b9fb05bd00004b": "Best-Selling Books (SQL for Beginners #5)", "5910b0d378cc2ba91400000b": "Collect Tuition (SQL for Beginners #4)", "590cc86f7557c0494000007e": "Register for the Party (SQL for Beginners #3)", "590ba881fe13cfdcc20001b4": "On the Canadian Border (SQL for Beginners #2)", "590a95eede09f87472000213": "Adults only  (SQL for Beginners #1)", "58738d518ec3b4bf95000192": "RoboScript #3 - Implement the RS2 Specification", "5908033e30e4f546bc00003d": "Simple Fun #234: Euler's Totient Function", "590aa48a319e7b634400003c": "Simple Fun #245: Count Increasing Sequences", "590c37d79f4b9f21ef000013": "Simple Fun #248: Gift Safety", "58a3e2978bdda5a0d9000187": "Simple Fun #127: Prime Operations", "58870c87c81516bbdb0000d8": "Simple Fun #33: Construct Square", "5895326bcc949f496b00003e": "Simple Fun #84: Box Blur", "5907f9032e5646e409000001": "Simple Fun #232: Professional Categorization", "5875bd0f382fc2298e000003": "Simple Math Puzzle (Easy) #0", "59080216d296b7fc1d00006a": "Simple Fun #233: Segment Sums Matrix", "590fcc057bbb3eef70000103": "Simple Fun #252: Parking Cost", "59115fdca53112c41c0002f4": "Simple Fun #260: Permutation Shift", "591bc86518ff1ff1fa000051": "Simple Fun #287: Multiply Numbers", "5911d212243fe511ad000231": "Even Larger Factorials", "591f46ad296d5aefc0000024": "Calculator", "556206664efbe6376700005c": "Polydivisible Numbers", "51eead3461ccf7db04000017": "UriBuilder", "5286d92ec6b5a9045c000087": "Objectify a URL Query String", "54de279df565808f8b00126a": "Binary multiple of 3", "591e996f67cd75f274000006": "Simple Fun #297: Codewars T-shirt", "591eab1d192fe0435e000014": "Car Park Escape", "591e62eef99b994288000057": "Simple Fun #295: Guess Number", "591e8c715b1d254f9e00005e": "Simple Fun #296: Round And Round", "5907f258d296b7cc7b000053": "Simple Fun #231: Kth Divisor", "58fef91f184b6dcc07000179": "#4 Matrices: Process for a Square Matrix", "57ecdd3d2559761b60000403": "SafeSqrt", "56b0f5f84de0afafce00004e": "Relatively Prime Numbers", "57a883cfbb9944a97c000088": "Reverse list recursively", "53d16bd82578b1fb5b00128c": "Grader", "591d6489ff832a7c6a0000da": "Simple Fun #294: Reduce Square Roots", "591d4581c09ee0555c00004d": "Simple Fun #291: Scheduling Denouncement", "591d56c8ff832ae47a000036": "Simple Fun #293: Broken Jigsaw", "591d0fd7c09ee0021400005b": "Simple Fun #289: Sum The Difference", "591baef1c4c557dc48000002": "Simple Fun #286: Chemistry", "591d4aeea6007e95ba0000e7": "Simple Fun #292: Primiest Number", "591d3375e51f4a0940000052": "Simple Fun #290: Sum Of Threes", "57d775931a628290bf001935": "Are You a One-Liner? #3:  A4 Paper", "5831c5f8ac6a11e3380002de": "Min value of each n elements -- Simple version", "56dc5a773e5dd6dcf7001356": "Thinking & Testing : Sum of 15(Hetu Luosliu)", "572caa2672a38ba648001dcd": "Transformation of a Number Through Prime Factorization", "591ce4c2e51f4a1aad000065": "The Prime Probability Mystery ", "5826d9d9392e28d0bd000125": "The first rule of fight club is...", "57cc9fd358a06b22a4000248": "Every Every - Shortest Code", "565c5e48072f02327a000036": "Simplified object comparison", "591c075a94414c1617000063": "Simple Fun #288: Turns On Road", "58be5aff9fb673ada300004c": "No Love", "57cc5f9258da9e47bc000143": "No Loops 3 - Copy Within", "591b3cbc40ef9503700000ef": "Simple Ruby code formatter", "58e8c25806db4de3da00011c": "Counting like a kid.", "5627f741255e6145980000d8": "Fizz Buzz", "58af092f78a1a54f2000000f": "A === B", "591b3ca0e0f838dfea0000bf": "How deep do these trees even go?", "591be6fdb873a7722700008f": "One Line Task: Count \"Word\"", "5835e18aae05334410000032": "Replace vowels", "569e562b1eed93910f000052": "Pre-FizzBuzz Workout #2", "57cc91361ccdc727f90000cf": "No Loops 2 - You only need one - Shortest Code Version", "5917fbed9f4056205a00001e": "Bananas", "591ad38f41b059d5cd000092": "Compare Number", "57d14a9d95497e9912000267": "National Bath Safety Month", "58ca658cc0d6401f2700045f": "Find Multiples of a Number", "561064d9326fbd159f00011d": "Set for JavaScript(Hello ES-2015)", "58a3b28b2f949e21b3000001": "Chess Fun #9: Bishops And Rooks", "5919575c5ffc3080490000b9": "Simple Fun #280: Digit One", "591aab3440ef95642f0000b0": "Simple Fun #285: Path To File", "58d5c86f8582321a51001665": "Arrive to the Sum!", "57f501f1beb0b4d46d000248": "Array interval", "591aa1752afcb02fa300002a": "Thue-Morse Sequence", "591a70c6afbf2af72d0001fe": "Simple Fun #281: Possible Palindrome", "591a9c88658902e22f0001be": "Simple Fun #284: Making A String", "56895d1636919c5609000059": "Baby steps  - Replace commas", "590b8d5cee471472f40000aa": "#8 Matrices: Up and Down Sorting For Each Column", "563a5f4366fbf8cc6e00008b": "Grasshopper - Terminal game combat function", "591a86bfe76dc98f24000030": "Simple Fun #283: Censor The Forbidden Words", "58a6e75d934f82c94f0000ce": "Is it Integer?", "591a7eee5ffc30bcb20000c1": "Simple Fun #282: Compare Powers", "57227b32785220c82b000b93": "Grasshopper - if/else review", "590bb735517888ae6b000012": "#9 Matrices: Adding diagonal products", "53c29a6abb5187180d000b65": "ES5 Generators(i)", "5603002927a683441f0000cb": "Are you available?", "58e3f824a33b52c1dc0001c0": "Geometry Basics: Circle Area in 2D", "5919427e5ffc30804900005f": "Simple Fun #279: Finding K", "5919237fcdee8ddd25000082": "Simple Fun #278: Remove K", "59191c935ffc306999000076": "Simple Fun #277: Line Intersections", "591918cd071575ee740000a1": "Simple Fun #276: Book Partition", "5918fe1f9579c32087000187": "One Line Task?: Sentence Compression", "591837f2e76dc9be4b000024": "Unicode Madness: \u6771\u65b9\u540d\u78ba\u8a8d\u3000\uff5e Eastern Title Validator.", "5914b412921f67e678000050": "PI", "59175441e76dc9f9bc00000f": "Ideal electron distribution", "5706f1b4fb3008814d0013d2": "Approving Kata", "57fb2c822b5314e2bb000027": "Exclamation marks series #15: Replace the pair of exclamation marks and question marks to spaces", "56f928b19982cc7a14000c9d": "Shortest code: Father and Son", "58bf67eb68d8469e3c000041": "Simple Fun #186: Duplicate Phone Numbers", "5893e7578afa367a61000036": "Simple Fun #64: Almost Increasing Sequence", "5889f08eb71a7dcee600006c": "Simple Fun #58: Volleyball Positions", "5889902f53ad4a227100003f": "Simple Fun #54: Strings Crossover", "57fb44a12b53146fe1000136": "Exclamation marks series #17: Put the exclamation marks and question marks on the balance - are they balanced?", "5915686ed2563aa6650000ab": "Simple Fun #270: Evil Code Medal", "58fdada9b4f81a844f0000cb": "One Line Task: Stick Or Chopsticks", "57fb04649610ce369a0006b8": "Exclamation marks series #10: Remove some exclamation marks to keep the same number of exclamation marks at the beginning and end of each word", "570bae4b0237999e940016e9": "Coding 3min : Regular expression compression", "5707c6e74f2c29a750001f8b": "Shortest Code : Regular expression compression", "57530135aeb792ba42000620": "T.T.T.#4: Key of door", "57c9313cf8392dd5480000fa": "T.T.T.59: The language from the distant planet", "57b2e6de1fae8a30fa000219": "T.T.T.41: The maximum profit", "5897df29fcc4b9c310000030": "Simple Fun #92: Digit Difference Sort", "58ad388555bf4c80e800001e": "Simple Fun #160: Cut The Ropes", "589d74722cae97a7260000d9": "Simple Fun #121: Mr. Odd", "54bb6f887e5a80180900046b": "longest_palindrome", "58aa8368ae929ea2e00000d9": "Simple Fun #146: Chandos Number", "589425c2561a35dd1a0000a2": "Chess Fun #2: Bishop And Pawn", "5897e394fcc4b9c310000051": "Chess Fun #4: Bishop Diagonal", "55217af7ecb43366f8000f76": "Mysterious function", "58d53839e4d6556b94000192": "Storm the Castle", "583629801342d1d0ca0003b4": "Brownrw8's \"for\" loop", "56c24c58e0c0f741d4001aef": "isReallyNaN", "5913ffb2cb1475215c000039": "Simple Fun #267: Count Triangles", "591404294ef3051cbe000035": "Simple Fun #268: Triangular Sum", "5914e068f05d9a011e000054": "Basic Compression", "59157809f05d9a8ad7000096": "Simple Fun #273: Powerset", "59152d8c96362e5d59000059": "Dictionary compression", "552679ea44a9e400b600124f": "Nth Root of a Number Redux", "591575f6d64db0431c000009": "Simple Fun #272: Throwing Dice", "5915648051f1d324ef00007a": "A kata is a kata, you can't say it's only a half!", "58942c43c5d31a77eb0000ea": "Simple Fun #77: Is Beautiful String?", "571b93687beb0a8ade000a80": "Fastest Code : Excel Puzzle #1", "571b75ad8d8c9c27cc0019a2": "Coding 3min : Excel Puzzle #1", "570771871df89cf59b000742": "Coding 3min : Max Value", "57075f6d4f2c293f0c0014be": "Shortest code: Max Value", "56d98b555492513acf00077d": "Thinking & Testing : Spatiotemporal index", "57761dd0c0276bebab000134": "T.T.T.11: Three increasing numbers", "57a2ab1abb994466910003af": "T.T.T.17: Split odd and even", "57ad7e10e298a7b65c000712": "T.T.T.31: Chinese poetry and calligraphy(\u4e2d\u56fd\u8bd7\u8bcd\u4e0e\u4e66\u6cd5)", "57a42ef9e298a72d710002aa": "T.T.T.19: How many steps are required to turn A into B?", "57a8afa072292dccfe000270": "T.T.T.22: Left? Right? Both?", "58e26b5d92d04c7a4f00020a": "Numerical Palindrome #5 ", "58e2708f9bd67fee17000080": "Numerical Palindrome #3.5", "58df62fe95923f7a7f0000cc": "Numerical Palindrome #3 ", "58de819eb76cf778fe00005c": "Numerical Palindrome #2 ", "57de02e2f5ec16bda100074f": "myjinxin's Fairy tales #001 : Aladdin's lamp and three wishes", "589d3938b6c071e4de000011": "Simple Fun #117: Winner String", "59040fdae1bfd334ca00007a": "#6 Matrices:  How Many Matrices Do These Elements Produce?", "58870742c815166a960000af": "Simple Fun #31:  Is Substitution Cipher?", "591144f42e6009675300001f": "The Hunger Games - Foxes and Chickens", "54f8693ea58bce689100065f": "Some Egyptian fractions", "58878393fc23972533001434": "Check if number is prime without loops", "591286823c0417fc090000af": "One Line Task: Makes 10", "591120432e6009420b00002d": "Simple Fun #256: Two Arrays Nth Element", "58e18c5434a3022d270000f2": "The Road-Kill Detective", "56748c679c14c10b6e000022": "80's Kids #8: The Secret World of Alex Mack", "59128363e5bc24091a00006f": "Simple Fun #265: The Janitor And His Mop", "59127598c0f53a738f0000e0": "Simple Fun #264: Compare Two Integers", "54a305521817ec2f1b001512": "multiply(value, times)", "5897d94dd07028546c00009d": "Simple Fun #91: Unique Digit Products", "57fb3c839610ce39f7000023": "Exclamation marks series #16: Find the longest successive exclamation marks and question marks combination in the string", "58885a7bf06a3d466e0000e3": "Simple Fun #52: Pair Of Shoes", "57fb0f3f9610ced69000023c": "Exclamation marks series #12: Remove odd number continuous exclamation marks and question marks", "5912701a89fc3d0a6a000169": "Simple Fun #263: Even Numbers Before Fixed", "59126cd3379de6ca5f00019c": "Simple Fun #262: Case Unification", "5653d33e78e3d9dfe600004e": "telephone words", "586eca3b35396db82e000481": "Get Euchre Score", "56e23f98bf8f6e9aed000367": "The String Combat", "59126992f9f87fd31600009b": "Simple Fun #261: Whose Move", "5905871c00881d0e85000015": "Mix Fruit Juice ", "57d2767095497ef41c0000c7": "Are You a One-Liner? #1:  divide 2,3,5,7", "56d4eebedf52109fd90019ca": "Crazy programmer 02: Insert advertising code", "56d3c1eb3323a88d0a000305": "Crazy programmer 01: find  SuperMan", "58065440a4647e0ed3000230": "From..To..Series #1: from m to n. Find the maximum range", "5816b76988ca9613cc00024f": "Sort the number sequence", "58097ae96037b88f57000105": "From..To..Series #7: from sentence to camelCase. Can you convert it?", "57f9f20004d82828c10000cd": "Where are you from?", "574ea183ff5b0ad83b0007bb": "DOS era #1: Help!!!", "571d0c80eed4a1c850000ef2": "Pete's inappropriate speech", "5827a4f5ffe0cbcbe600009f": "Sloppy Censorship", "5845b080a87f768aaa00027c": "Travelling on a Grid", "581b29b549b2c0daeb001454": "Linux history and  `!` command. Series#5  The `!?string` command", "5818236ae7f457017b00022b": "Linux history and  `!` command. Series#4  The `!string` command", "5815fd7441e062463d0000f8": "Linux history and  `!` command. Series#3  The `!-n` command", "5814bf3f3db1ffc0180000d3": "Linux history and  `!` command. Series#2  The `!n` command", "582e0450fe38013dbc0002d3": "Regex Tic Tac Toe Win Checker", "5840107b6fcbf56d2000010b": "Palindromization", "58235a167a8cb37e1a0000db": "Pair of gloves", "58143221f9588e340e00009f": "Linux history and  `!` command. Series#1  The `!!` command", "57fa3a33e8c829780a0001d2": "Berserk rater: CG Vs. Clang", "5803ee0ed5438edcc9000087": "Padovan numbers", "5800b6568f7ddad2c10000ae": "Simplify the number!", "57ebdf1c2d45a0ecd7002cd5": "Inside Out Strings", "571bff6082661c8a11000823": "Number of permutations without repetitions", "57450805fd21f01f790002b6": "Fake website #3: Choose a cool color for the web site", "574655d3b5d0affdac0003f9": "Fake website #4: Design a strict user registration verification function", "5743aa63cce789b2e600034f": "Fake website #2: Choose a best server to create website", "57427526550d138448000458": "Fake website #1: Choose a good name for the website", "5842f943c5c9b0f7140001e1": "Find number in an array # 5", "57fe5b7108d102fede00137a": "Hungarian Vowel Harmony (harder)", "59113da398dcd456270000a8": "Simple Fun #259: Different Digits Number Search", "591074c7ea12ad515500007e": "Simple Fun #255: Visits On Circular Road", "5911385598dcd432ae000004": "Simple Fun #258: Is Divisible By 6", "57dab71714e53f4bc9000310": "myjinxin katas #001 : Rotate, Remove, Return", "58326ae9ea9e320bf5000083": "How many new friends John has?", "58216d66b81f7094e000001f": "Find a word sequence", "57b31dc11fae8a4137000693": "Collaboration Station", "57819b700a8eb2d6b00002ab": "Hollow Triangle", "577e694af5db624cf30002d0": "Closest Sum", "55b7bb74a0256d4467000070": "Number of Proper Fractions with Denominator d", "5897ea323387497f460001a0": "Chess Fun #6: Chess Bishop Dream", "590ee3c979ae8923bf00095b": "Convert Color image to greyscale", "58583922c1d5b415b00000ff": "Street Fighter 2 - Character Selection - Part 2", "591168586a57682bed000055": "One Line Task: Make Bricks", "5717fbf85122b8f757001b3f": "Rotate Corners", "562b384167350ac93b00010c": "Weird prime generator", "590f5b4a7bbb3e246000007d": "What comes after? ", "587ae98e2ab0ef32ef00004c": "We are the Robots d[(0)(0)]b", "584e8bba044a15d3ed00016c": "Old Mobile Display", "570957fc20a35bd2df0004f9": "The Sceptical Kid Generator", "56af1a20509ce5b9b000001e": "Salesman's Travel", "58ade79f3c97367977000274": "DevOps legacy roasting ->  disco inferno -> burn baby burn", "590fdc0cc7d00e175b00011e": "Simple Fun #254: Factorized GCD", "578b8c0e84ac69a4d20004c8": "What's your running pace?", "590fd3220f05b4f1ad00007c": "Simple Fun #253: Cool String", "580b746830f829e46400001e": "A small difference", "580741302e14acaef900015a": "Extract last names of people named Michael", "57a31ce7cf1fa5a1e1000227": "Update inventory  in your smartphone store", "57829376a1b8d576640000d6": "Trumpness detector", "57f669477c9a2b1b9700022d": "Identify the array's ordering", "581dc1852d68e751180000c6": "Insert value into an array", "5783ef69202c0ee4cb000265": "IndexOf Array in Array", "5816ead8dae5a59eaa000053": "Split and Join", "57861fd922542afb0b00028b": "n times 2 to the power of x", "5799fadd39f33a30d70002ea": "Parsing musical notes into MIDI", "583710f6b468c07ba1000017": "Proof Read ", "580be55ca671827cfd000043": "Word Challenges at School", "57a125e772292dadcb0005f5": "Resultant Moment I", "5817030088ca96c0b7000083": "Find character", "577c2d68311a24132a0002a5": "Case Reversal of Consecutive Duplicates", "581302bbbee85709d00002ae": "Halloween: trick or treat!", "57fcedb387b8012b23000023": "not So Easy: Count characters", "57946a671ace7f940a000031": "Thinking & Testing  #38: What's the \"?\"", "57fb1705f815ebd49e00024c": "Exclamation marks series #14: Convert the exclamation marks and question marks to a prime number", "56390ac2815fb1222a000070": "Generating Generators - Generators #3", "5781265ee6e3d06fd30000fe": "Find Transcription Factors", "57f625992f4d53c24200070e": "Lottery Ticket", "58311536e77f7d08de000085": "How many cows do you have?", "5876031f889768640900004c": "Vodka festival.", "5836f1bb44ff28b068000ba4": "Brick pyramid.", "5821cd4770ca285b1f0001d5": "Snakes & Ladders", "58397ee871df657929000209": "Acronym Buster", "5826773bfad36332bf0002f9": "Character Counter and Bars Graph", "57bff6f6b5e2c99387000149": "Is there an Arithmetic Progression sequence?", "57e6bcbd684e570c6700021c": "Help Green Lantern with his web site", "586305e8916e244b66001a93": "Mirror object - tcejbo rorriM", "5845e6a7ae92e294f4000315": "Sum of nested numbers", "58b20418e39e2ad9ae000150": "Kushim the Accountant: Extract $ values from text", "590c4c342ad5cd6a8700005c": "Simple Fun #250: Prefix Sums To Suffix Sums", "590c3173cd3b99c467000a26": "Simple Fun #247: To And From", "57dde8f7f6df9b27cd001324": "myjinxin katas #002 : Hotel room number", "590942d4efde93886900185a": "Simple Fun #238: Tennis Game Points", "590e03aef55cab099a0002e8": "Incrementer", "57630df805fea67b290009a3": "Permutation  position", "590d9935e7cac41a6a000034": "Testing cheat prevention system (python)", "5592dd43a9cd0e43a800019e": "Diagonals", "5247799e69828fb3aa00019b": "Compact data processing: bit comparison", "57a2bd03bb9944669100042e": "T.T.T.18: Find out the prime part in a number", "587319230e9cf305bb000098": "Soundex", "590adadea658017d90000039": "Fruit Machine", "590bdaa251ab8267b800005b": "Simple Fun #246: Array Center", "58e8cad9fd89ea0c6c000258": "Kooka-Counter", "590bba7d51ab820001000057": "???- ! - ! - ! - ! - ! - ! - ! - ! -???", "590bb4bd0d363131ab000085": "Computing the complex Gamma function", "58e953ace87e856a97000046": "Wise drunk man", "590ba5a55178888db300006f": "Computational Geometry: 2D colliders", "590ba2baf06c49595f0000a0": "Computing the complex logarithm function", "54c14c1b86b33df1ff000026": "Base -2", "590b93d05902b81f1c0001a3": "Computing the complex exponential function", "590b92b5ee4714210f0000ad": "Computing the complex Zeta function", "584703d76f6cf6ffc6000275": "Estimating Amounts of Subsets", "58a510fa8dff50aa56000030": "One Line Task: Two Letters", "586560a639c5ab3a260000f3": "All Star Code Challenge #15", "58bfb56c5e287b3fca000101": "One Line Task: nth Row Sum", "56dc41173e5dd65179001167": "Thinking & Testing : A happy day will come", "56dfce76b832927775000027": "Thinking & Testing : Join but not join", "590a7f2be8e86e1240000068": "Simple Fun #241: Strange Code", "56f214580cd8bc66a5001a0f": "Thinking & Testing : Love Forever", "56db19703cb6f5ec3e001393": "Thinking & Testing : Welcome to take the bus", "56d9cfd3f3928b4edd000021": "Thinking & Testing : From nothingness To nothingness", "57f4ccf0ab9a91c3d5000054": "chmod calculator in octal.", "5898761a9c700939ee000011": "Corner circle", "5716a4c2794d305f4900156b": "Find the Partition with Maximum Product Value", "58902b5edd7609f22d000059": "Pinocchio's polygraph.", "585db3e8eec141ce9a00008f": "Reverse Vowels In A String", "577bfdc0d48e5172ed00021d": "Mexican provenza 's phone number validator", "577c136fdf78c163990007cd": "Mexican capital 's phone number validator", "57d15a03264276aaf000007f": "Roof Replacement", "5878520d52628a092f0002d0": "String transformer", "56de82fb9905a1c3e6000b52": "Thinking & Testing : Mobile phone simulator", "56dae2913cb6f5d428000f77": "Thinking & Testing : Not perfect? Throw away!", "56b3b9c7a6df24cf8c00000e": "Nested List Depth", "559c7b6e3c38b1d1b900006f": "Format Text", "563f960e3c73813942000015": "Scrabble best word", "564871e795df155582000013": "Fill in the gaps in my timesheet.", "55b6dd6282cc7ceadb000131": "React with JSX", "590938089ff3d186cb00004c": "Simple Fun #237: Suffix Sums", "59094c5d579da9aceb000037": "Simple Fun #240: Increasing Number", "567c26df18e9b1083a000049": "Last man standing", "564b323d7ff0ed401400015f": "Compute Unix path", "56b409febccd5aafbd000021": "Character counts", "53a71e153d87ddcb34000d20": "Simple min heap implementation", "56bc7687e8936faed5000c09": "Deficiently Abundant Perfect Amicable Numbers", "56c0ca8c6d88fdb61b000f06": "Next Version", "56d082c24f60457198000e77": "Get the Excel column title!", "56eb16655250549e4b0013f4": "Most Frequent Weekdays", "56be4affc5dc03b84b001d2d": "HTML Complementary Color", "56a127b14d9687bba200004d": "Paths in the Grid", "56832fb41676465e82000030": "Hangman game", "56743fd3a12043ffbb000049": "80's Kids #7: She's a Small Wonder", "567c63c365ee000c5f000007": "RuplesJS #2: String Delete", "56955dc2135a2e049f0000a9": "Write a function to sort a given string into alphabetical order", "5692354f95f6b7c813000014": "Guess the function", "56f2d43fe40b70a442000f26": "Sorted Arrays", "56a298b27e9e994977000023": "multiFilter", "567c48062bb1ede32200002a": "RuplesJS #1: N Times Do", "5669ec539556f9e9f2000074": "Pad Left and Right", "58687d7d81e0e8849c00006a": "My daughter's math test questions -- Part 1", "56648a2e2c464b8c030000bf": "80's Kids #4: Legends of the Hidden Temple", "565225029bcf176687000022": "Numbers so vain, they probably think this Kata is about them.", "564e624da64546f72e0000e8": "Did someone say cake?", "5645d1a4d907bd6009000052": "Walter's miraculous FizzBuzz factory", "563ce9b8b91d25a5750000b6": "Another one down\u2014the Survival of the Fittest!", "5629b94e34e04f8fb200008e": "The Sum of The First and The Last Prime Factor Make Chains of Numbers", "560985a07add63e1a1000019": "Required Data II (Easy One)", "55f5efd21ad2b48895000040": "How Many Numbers? II", "55ffb44050558fdb200000a4": "Reach Me and Sum my Digits", "5611e038a1b7990def000076": "Island Count", "5626ec066d35051d4500009e": "The Sum Of The Prime Factors Of a Number... What For?", "561e77b73277d394e4000043": "The Queen Of Hearts Challenge", "55da2a419f8361df45000025": "Most improved - Puzzles #4", "55d4f2a0eae6b0c15b000100": "Obfuscation confusion - Bug Fixing #10", "55ec80d40d5de30631000025": "Decompose a number", "558f0553803bc3c4720000af": "Find The Duplicated Number in a Consecutive Unsorted List - Tougher Version", "55e785dfcb59864f200000d9": "Special Multiples", "55f1614853ddee8bd4000014": "Find Numbers with Same Amount of Divisors", "55f8370b0229d3dad000007a": "Count addresses grouped by state", "55fd4919ce2a1d7c0d0000f3": "Two cube sums", "55f95dbb350b7b1239000030": "Required Data I", "55d8aa568dec9fb9e200004a": "How Many Numbers?", "55db23c6ab208d61e10000af": "Subtract big numbers", "55de3f83e92c3e521a00002a": "A for Apple", "55df2e52954f1b311a000024": "Two variable simultaneous equations", "559d34cb2e65e765b90000f0": "String Suffixes", "582dcda401f9ccb4f0000025": "Primes with Even Digits", "55c9172ee4bb15af9000005d": "Pentabonacci", "55d1b0782aa1152115000037": "Bin to Hex and back", "55c11989e13716e35f000013": "Adding Binary Numbers", "55bb6493a0bf37798800004a": "Prime Number Generator :Intermediate (with inputs) version", "55bacaaccf8b5eb992000086": "Prime Number Generator :Simple version", "55ba95a17970ff3e80000064": "Ore Numbers", "5539fecef69c483c5a000015": "Backwards Read Primes", "5534c7858f06db29b8000075": "Greedy seller's quotes", "550cb646b9e7b565d600048a": "Scheduling (Round-Robin)", "55b019265ff4eeef8c000039": "Logical Disjunctions", "55b2549a781b5336c0000103": "Compare powers", "55b22ef242ad87345c0000b2": "Quick (n choose k) calculator", "55a7de09273f6652b200002e": "Lucas numbers", "55a5d97d81a010881800004a": "Enigeliisohe too Eniigeeliiisoohee Toroanisoliatooro", "559e708e72d342b0c900007b": "Even Odd Pattern #1", "558ffec0f0584f24250000a0": "Drunk friend", "559aa1295f5c38fd7b0000ac": "Routes in a square grid", "556025c8710009fc2d000011": "(L33T + Gr\u03b5\u03b5\u03ba) Case", "555624b601231dc7a400017a": "Josephus Survivor", "5550d638a99ddb113e0000a2": "Josephus Permutation", "590300eb378a9282ba000095": "Hungry Hippos", "590818ddffa0da26ad00009b": "Simple Fun #235: Construct Submatrix", "5906436806d25f846400009b": "ASCII Fun #1: X- Shape", "590572de63bfadf5d4000027": "#7 Matrices: Focused on the Contour", "590748ba155e0c1554000001": "Simple Fun #230: Axis Aligned Bounding Box", "583dee7395a0632356000a0f": "What doesn't belong to these?", "55327e12f5363713200000e4": "JoJo's Bizarre Kata", "558ecd6398ae4ed3350000c2": "Parse the log", "55830eec3e6b6c44ff000040": "Odd/Even number of divisors", "557e8a141ca1f4caa70000a6": "Triangle number check", "55679d644c58e2df2a00009c": "All that is open must be closed...", "556eed2836b302917b0000a3": "Vasya and System of Equations", "55738b0cffd95756c3000056": "Optimum coding school location", "556d120c7c58dacb9100008b": "IPv4 Parser", "55491e9e50f2fc92f3000074": "Your Ride Is Here", "55251c0d2142d7b4ab000aef": "Vasya and Stairs", "551186edce486caa61000f5c": "Feynman's square question", "54cf4fc26b85dc27bf000a6b": "Precise fractions pt. 1 - basics", "54f0d905d49112f3a300055a": "Mastermind Hint Pegs", "54f4b6e7576d7af70900092b": "Diff That Poly!", "54fa3fe80609866d77001094": "Give me DST !!!", "54f8b0c7a58bce9db6000dc4": "Rotate Array (JS)", "553639695a87cf996200008c": "Equal and opposite", "552fc8d81b59b6b4820000a4": "Arrays are Objects", "551e467e24b7a4e0b20001e8": "Forbidden constructor", "5464d6811e0c08e574000b76": "Stop the Zombie Apocalypse!", "5436fdf34e3d6cb156000350": "Flexible Card Game", "57675f3dedc6f728ee000256": "Build Tower Advanced", "5906dcc359a2f71fe700002e": "Simple Fun #228: Greatest Common Prime Divisor", "545b860f82e55db165000554": "(Dis)member functions", "545a5dd961aa4c0987000980": "Chain Evaluation", "533b0d5e7abec41550000a9e": "JSON.parse Date Reviver", "536a155256eb459b8700077e": "The Clockwise Spiral", "54c2fc0552791928c9000517": "Sum of many ints", "54bb6ee72c4715684d0008f9": "Multiples of 3 and 5 redux", "5496033fbecf8ad838000336": "Length of longest subsequence of same incrementing values", "5491689aff74b9b292000334": "Repeated  Substring", "549013f6f71e7786aa0002a8": "Magic Zeckendorf", "5483366098aa442def0009af": "Hex class", "546dba39fa8da224e8000467": "Run-length encoding", "546c7f89bed2e12fb300056f": "String searching with wildcard", "545f05676b42a0a195000d95": "Rank Vector", "534161c506654f1559000483": "Simplify Compound Fractions", "545c4f7682e55d3c6e0011a1": "Find heavy ball - level: ubermaster", "5906a218dfeb0dbb52000005": "The Hidden Word", "544034f426bc6adda200000e": "Find heavy ball - level: master", "54404a06cf36258b08000364": "Find heavy ball - level: conqueror", "5844ba39a87f763849000c98": "Maximum value in nested arrays", "5457ea88aed18536fc000a2c": "Permutations and Dot Products", "543abbc35f0461d28f000c11": "House of cards", "530d0298e09e54a3620006c2": "Palindromes Below", "53046ceefe87e4905e00072a": "Palindrome for your Dome", "53837b8c94c170e55f000811": "Zonk game", "57c4ed873189a5bea00007e6": "Paul Cipher & Kevin Arnold", "52817f04b70058a1b1000037": "Process trees", "57b840b2a6fdc7be02000123": "Circles: Count the Circles Having a Given Internal Point.", "53c8b29750fe70e4a2000610": "Haskell List  Dot Notation", "577bcb5dd48e5180030004de": "Minimum unfairness of a list/array", "5452113c699b538c18000b01": "Guess the number!", "544bdc2ec29fb3456e00064a": "Ping-Pong service problem", "5442e4fc7fc447653a0000d5": "Greatest Position Distance Between Matching Array Values", "5443b8857fc4473cb90008e4": "UN-usual Sort", "543ddf69386034670d000c7d": "Angle Between Clock Hands", "54341ff882b0fdec9c000011": "Max Accessor Function", "5904d222e1bfd3354e000026": "Remove duplication ", "537400e773076324ab000262": "Group Anagrams", "53ea3ad17b5dfe1946000278": "Sierpinski's Gasket", "542ea700734f7daff80007fc": "Processes", "54285676c9cd5ead8f000c46": "Stacked Deck (create a cheater's deck of cards)", "5428381e6f30af88b4000b09": "\"TRaduttore\".tr(  [  \"u\",  \"tt\" ] ,  \"it\"  )", "54224ce3dda526a97d00127d": "Array Calculator", "5416d02d932c1df3a3000492": "Simple AKS Primality Test", "5416ce834c2460b4d300042d": "Gray Code ", "53ffbba24e9e1408ee0008fd": "Knapsack Part 1 - The Greedy Solution", "53e248c9af0d91a45b000e71": "mkdir -p", "53988ee02c2414dbad000baa": "Pretty date", "537ba77315ddd92659000fec": "Goldbach's Conjecture", "5379fdfad08fab63c6000a63": "Simple CSS selector comparison", "5416f2504c2460a75000062d": "Cycle detection: Brent's The Tortoise and The Hare", "5416f1b54c24607e4c00069f": "Cycle Detection: Floyd's The  Tortoise and the The Hare", "5904be220881cb68be00007d": "Plenty of Fish in the Pond", "584cfd7e2609c8ab4d0000e3": "Airport Arrivals/Departures - #2", "562b099becfe844f3800000a": "Ratio of Bouncy Numbers", "566b490c8b164e03f8000002": "80's Kids #6: Rock 'Em, Sock 'Em Robots", "562e6df5cf2d3908ad00019e": "Don't Drink the Water", "541103f0a0e736c8e40011d5": "Disgruntled Employee", "53e20276af0d91c206000972": "Steven's Password Decryption", "540954232a3259755d000039": "Friday the 13ths", "59006675bb1fb31ae400012b": "Pie Chart", "540dd371d333dc2730000605": "Welcome to the Clamping ! ", "5402724fd39b43c075000116": " xD-Arrays  for dimmies", "53c2502d1dfa43f6420001e6": "Lazy evaluation", "5365bb5d5d0266cd010009be": "Making Change", "52dca71390c32d8fb900002b": "Adding ordinal indicator suffixes to numbers", "578e07d590f2bb8d3300001d": "WordSquare", "53d8aea2e584dd9e67000ae6": "Solving Quadratics", "55aa92a66f9adfb2da00009a": "Reversi row rudiments", "53dab6cece5f44b8ee00035d": "String  like [Char]", "52d4862dae18a44bf500016b": "Lagrange Interpolation", "5581e52ac76ffdea700000c1": "Rule 30", "52cd0d600707d0abcd0003eb": "Exercise in Summing", "5398beaf53f51088a9000fa7": "Implementing the Array Object", "538ae2eb7a4ba8c99b000439": "Evil Autocorrect Prank", "536e9a7973130a06eb000e9f": "Pokemon Damage Calculator", "531cb1c520522ecb120005c4": "Human Friendly Random Numbers", "53138a5dbb244a40680000a3": "Sorted list", "530e259c7bc88a4ab9000754": "A tetrahedron of cannonballs", "52f3bb2095d6bfeac2002196": "Valid string", "534747b67323ae5364000112": "NSA Phone Tapping", "53629117f81a7f9b9e000d1e": "Make a Palindrome", "536950ffc8a5ca9982001371": "Frog jumping", "53697be005f803751e0015aa": "The Vowel Code", "535bfa2ccdbf509be8000113": "First n Prime Numbers", "534eb5ad704a49dcfa000ba6": "Hanoi record", "5355a811a93a501adf000ab7": "Custom FizzBuzz Array", "52ecde1244751a799b00018a": "Sqrt approximation", "5307f5c8588fe6026b000057": "Approximate derivative", "5303b2d6af7e3b414300056d": "Clone-a-Regex", "5302f383be2a91e4d70002c6": "Zero fill... for the Queen!", "52fba2a9adcd10b34300094c": "Matrix Transpose", "52ece9de44751a64dc0001d9": "Bit calculator", "52cc64baae8d3d803e0007a3": "Natural compare", "52dffa05467ee54b93000712": "Sort sentence pseudo-alphabetically", "51646de80fd67f442c000013": "Strip Url Params", "52e84c460d83dd96e50000dd": "Counting DNA Nucleotides", "52de553ebb55d1fca3000371": "Find the missing term in an Arithmetic Progression", "52dda52d4a88b5708f000024": "Ordinal Numbers", "52dd673c80db65531e000488": "The Most Sacred of Days", "52b2cf1386b31630870005d4": "Readability is King", "52aaf51822e82a808100066b": "replaceAll(input, find, replace)", "52ae2db783f47875d0000064": "#Hashtag", "52b305bec65ea40fe90007a7": "Arrh, grabscrab!", "52b4d1be990d6a2dac0002ab": "Longest sequence with zero sum", "526b1dd476952c04cf0000ab": "Vending Machines", "529fdef7488f509b81000061": "Elementary Arithmetic - Carries Count", "52a7099f8a4d9604bb000472": "7-segment converter", "529962509ce9545c76000afa": "Connect Four: Who Won?", "528aa29bd8a0399fc5000cae": "The \"CROTCH KICK OR BLOCK\" kata", "5274d9d3ebc3030802000165": "Two Joggers", "5267e5827526ea15d8000708": "Pete, the baker (part 2)", "526bd612696e23c43a00032e": "Halloween Sweets", "526989a41034285187000de4": "Count IP Addresses", "525d8c20915a399b5600087b": "Word Finder", "5264c6495fda8eca2e000042": "ISRC - Significant Figures", "52ebe4608567ade7d700044a": "Poker cards encoder/decoder", "525d87d2a1b088366a000f7c": "Hardy's taxi (generalized)", "528a0762f51e7a4f1800072a": "SKRZAT!!!", "5432fd1c913a65b28f000342": "Multiplication Tables", "5884b6550785f7c58f000047": "Organise duplicate numbers in list", "529e2e1f16cb0fcccb000a6b": "Almost Even", "529b54d9aba78c924d00088e": "String insert values", "529b418d533b76924600085d": "Convert PascalCase string into snake_case", "52945ce49bb38560fe0001d9": "Pascal's Triangle #2", "529875459ce954d6a800026c": "Descriptive selections of data", "529872bdd0f550a06b00026e": "Largest product in a series", "5285bf61f8fc1b181700024c": "Normalizing Out of Range Array Indexes", "52840d2b27e9c932ff0016ae": "search in multidimensional array", "5262fa26875ed24a3e000029": "Javascript filter - 2", "5276c18121e20900c0000235": "Number Zoo Patrol", "5274e122fc75c0943d000148": "Grouped by commas", "526e8de0512511429e000006": "Trim a String", "5264f5685fda8ed370000265": "Metric Units - 1", "54746b7ab2bc2868a0000acf": "Mod4 Regex", "5245a9138ca049e9a10007b8": "Adjacent repeated words in a string", "5260074c9a0022f83e0009da": "Rational Arithmetic", "525c65e51bf619685c000059": "Pete, the baker", "525a4cab1650d76b8000084d": "Array.isArray", "525f47c79f2f25a4db000025": "Valid Phone Number", "525a3d6b85a9a47fcf00055a": "Calculate Hypotenuse of Right-angled Triangle", "525821ce8e7b0d240b002615": "Arabian String", "5254bd1357d59fbbe90001ec": "Sequences and Series", "5247d2de69828f0d6c00032d": "Not Quine", "5244b0588978473f9500002b": "Object Search and Replace", "52449b062fb80683ec000024": "The Hashtag Generator", "5241060ff2471a5d7600025a": "Custom Setters and Getters", "523d2e964680d1f749000135": "Interleaving Arrays", "52249faee9abb9cefa0001ee": "uniq (UNIX style)", "52217066578afbcc260002d0": "Sum of (Two) Squares", "52190daefe9c702a460003dd": "Return substring instance count - 2", "521660e064dc2ccdd900008d": "Calculate age in years", "522498c9906b0cfcb40001fc": "Fibonacci Generator", "51fc3beb41ecc97ee20000c3": "Lazy Repeater", "51fc12de24a9d8cb0e000001": "ISBN-10 Validation", "51e704f2d8dbace389000279": "Arrays Similar", "51f42b1de8f176db5a0002ae": "Sort arrays - 3", "51f082ba7297b8f07f000001": "Find within array", "51f1342c76b586046800002a": "Round by 0.5 steps", "51edd51599a189fe7f000015": "Mean Square Error", "57fa9bc99610ce206f000330": "Clay Pigeon Shooting", "51e000d070fe4414000003f0": "Time-like string format", "513e7e1aee7d36073e00000d": "Custom each() Array method", "51e0007c1f9378fa810002a9": "Make the Deadfish Swim", "51dda84f91f5b5608b0004cc": "Fizz / Buzz", "51e04f6b544cf3f6550000c1": "Beeramid", "513e08acc600c94f01000001": "RGB To Hex Conversion", "5158bfce931c51b69b000001": "Extract the IDs from the data set", "58b665c891e710a3ec00003f": "Challenge Fun #17: Merge Arrays", "58899b0c97630e0b70000089": "Simple Fun #56: Beautiful Text", "56fa9cd6da8ca623f9001233": "Elemental Words", "531489f2bb244a5b9f00077e": "Undo/Redo", "5902fbd2378a92a990000083": "Simple Fun #225: Closest Neighbor", "5902bc48378a926538000044": "Simple Fun #221: Furthest Distance Of Same Letter", "57deba2e8a8b8db0a4000ad6": "Helpers For a 3DGame I: Biggest Triangle in a Sphere", "5540e75396737c4cea000092": "Needles in a haystack", "5536aba6e4609cc6a600003d": "Pig Sursurunga", "5689cd3df0315aaa23000004": "Magic The Gathering #3: Spell Stack", "5686004a2c7fade6b500002d": "Regexp basics - parsing mana cost", "567b22d9ba0e6b8c2400001e": "Magic The Gathering #2: Mana", "567af2c8b46252f78400004d": "Magic The Gathering #1: Creatures", "568eeb1ce6f9e820c800000b": "80's Kids #10: Captain Planet", "58de42bab4b74c214d0000e2": "A Simple Music Decoder", "5679de444454213427000050": "80's Kids #9: Down in Fraggle Rock", "5845921ca87f76501a000101": "Find number in an array # 6", "590001c24c5d02625b00005e": "Simple Fun #213: Is Function?", "525f0459fb9570f9ff00005d": "Javascript filter - 3", "5476f4ca03810c0fc0000098": "Calculate the function f(x) for a simple linear sequence (Easy)", "58ab002d68ee07c57b000118": "Represent array of numbers as ranges", "5840cf83258e10d8c600005e": "Find number in an array # 3", "53a9ee602f150d5d6b000307": "Max Collatz Sequence Length ", "525b4164eb636fb2f90002a0": "Numerology", "5870db16056584eab0000006": "Let's Play Darts!", "56121f3312baa28c8500005b": "I love big nums and I cannot lie", "55de9c184bb732a87f000055": "I need more speed!", "59014fbb526ff1af0400004b": "Simple Fun #218: Replace Words", "55b080eabb080cd6f8000035": "What will be the odd one out?", "58f290d0b48966547f00014c": "Spelling Bee II", "55e00266d494ce5155000032": "Get your steppin' on son", "55dd54631827120dd800002b": "Objectify all the strings", "55a5c82cd8e9baa49000004c": "Count the divisible numbers", "5594c4599934000e1e00002e": "Find the Nth longest string in an Array", "5563b04ab3fd7e500d000151": "Recursive Averages", "582c2dffd82a1ff03000000a": "[BF] Hello World!", "5631ac5139795b281d00007d": "Urban Dictionary", "562846dd1f77ab7c00000033": "Word Patterns", "583cce836e3994e457000068": "Numify", "59000d6c13b00151720000d5": "Simple Fun #215: Properly Closed Bracket Word", "55fb6537544ae06ccc0000dc": "Summarize ranges", "56035d75426e197c3e0000a2": "Filter out for good!", "5613475e4778aab4d600004f": "Group Repeating Fractions", "55cc20eb943f1d8b11000045": "X marks the spot!", "55d5434f269c0c3f1b000058": "Triple trouble", "55e529bf6c6497394a0000b5": "Alternating Loops", "58c8b9b026d93acc23000140": "One Line Task: Esperanza Pies", "58502a571345ffd6de00000a": "Grandpa's pants", "5827d31b86f3b0d9390001d4": "Elections: Weighted Average", "5898a7208b431434e500013b": "Manage the Robot Factory: Day 1", "57b6f5aadb5b3d0ae3000611": "Length of missing array", "57a98e8172292d977b000079": "LOTTO 6 aus 49 - 6 of 49", "58ac1abdff4e78738f000805": "What The Biggest Search Keys?", "562e274ceca15ca6e70000d3": "Parabolic Arc Length", "559b8e46fa060b2c6a0000bf": "Easy Diagonal", "57d165ad95497ea150000020": "Pairs of Bears", "590011f0d720bdc6ae000078": "One Line Task: Largest Rectangle", "53c235e4d5cd9c397200021d": "Deep comparison of objects", "5797d1a9c38ec2de1f00017b": "String Pyramid", "5900750cb7c6172207000054": "Frank's Sticky Calculator ", "5660c1e9fae768c3b50000a6": "Ermahgerd", "58daa7617332e59593000006": "Most digits", "5865dd726b56998ec4000185": "All Star Code Challenge #23", "55de8eabd9bef5205e0000ba": "Emirps", "560b8d7106ede725dd0000e2": "Surrounding Primes for a value", "565abd876ed46506d600000d": "Simpson's Rule - Approximate Integration", "5520714decb43308ea000083": "Nth Root of a Number", "58feb7ac627d2fdadf000111": "Simple Fun #208: Find Sub Array With Same Element", "58fd4bbe017b2ed4e700001b": "Simple Fun #201: Cards And Pero", "58fec262184b6dc30800000d": "Simple Fun #210: Maximize Points", "58f6024e1e26ec376900004f": "Find Factors Down to Limit", "58fd9f6213b00172ce0000c9": "Simple Fun #205: Split Exp", "58fd52b59a9f65c398000096": "Simple Fun #202: Min And Max", "58fd96a59a9f65c2e900008d": "Simple Fun #204: Smallest Integer", "58fd91af13b0012e8e000010": "Simple Fun #203: Strange Coach", "5872bb7faa04282110000124": "Help Kiyo \u304d\u3088 solve her problems LCM Fun!", "5411c4205f3a7fd3f90009ea": "Bracket Duplicates", "56e1161fef93568228000aad": "Thinking & Testing : Operator hidden in a string", "57acc8c3e298a7ae4e0007e3": "Integer with the longest Collatz sequence", "5286b2e162056fd0cb000c20": "Collatz", "55eee789637477c94200008e": "Sequence generator", "583c5469977933319f000403": "The maximum and minimum difference -- Simple version", "583c592928a0c0449d000099": "The maximum and minimum difference -- Challenge version", "563301d00656afb8a600009d": "Sorting the Rabbit Hole", "570128f870ce0e81b80016db": "Factory Functions #2 - Inheritance and Object Composition", "5897cdc26551af891c000124": "Hofstadter Q", "56c31c6ec44a3ab033000eaf": "Statistics - Fundamentals", "58898b50b832f8046a0000ec": "Simple Fun #53: Combs", "58ad0e0a154165a1c80000ea": "Simple Fun #155: Pac-Man", "58aa5d32c9eb04d90b000107": "Simple Fun #142: Mobius function", "5869848f2d52095be20001d1": "Cat Kata, Part 1", "5894986e2ddc8f6805000036": "Simple ROT13.5 cypher", "5886d65e427c27afeb0000c1": "Simple Fun #23: Square Digits Sequence", "588847702ffea657ba00001b": "Simple Fun #46: Cipher26", "58a6ac309b5762b7aa000030": "Simple Fun #140: Circle Slash", "58f58dc3663082a4ba000033": "ASCII Games: Dance Dance Evolution I", "58f8b35fda19c0c79400020f": "Find all non-consecutive numbers", "583601518d3b9b8d3b0000c9": "Text align right", "58a6b5f28c08b1e9c40001e7": "Challenge Fun #12: Visible Points", "55437532b73f053bac000096": "A Memory game array", "589414918afa367b4800015c": "Simple Fun #72: Absolute Values Sum Minimization", "58f85bb1985886b1b5000b6f": "One Line Task: Count Down I", "58f85908bc60c645d5000095": "One Line Task: Count Down II", "57a4c85de298a795210002da": "Countdown -  Longest Word", "53072ed3f36d6211250002ad": "Recursive countdown", "525caa5c1bf619d28c000335": "Tic-Tac-Toe Checker", "56ffd817140fcc0c3900099b": "Shortest code: Virus in Apple", "5700af83d1acef83fd000048": "Coding 3min: Virus in Apple", "5562ab5d6dca8009f7000050": "riemann sums I (left side rule)", "582c01ad3fd1cc5736000348": "Complete the matrix pattern", "52f5f8757c461de6310001e8": "addition function problem", "551e8c8e24b7a4eddd000441": "Complex numbers", "5827e2efc983ca6f230000e0": "Complete the table pattern", "55ed10a402a0c6e3c3000021": "What is the point? [THIS KATA HAS BEEN RETIRED. ATTEMPT AT OWN PERIL]", "58884a65f06a3d3bef000049": "Simple Fun #47: Stolen Lunch", "58f6000bc0ec6451960000fd": "Selective Array Reversing", "58f6f87a55d759439b000073": "Negation of a Value", "58e55e434fdbae09f500003e": "Recursive Function", "5717293a672b20c4b30008d0": "Fastest Code : Half it III", "5716f027672b2063bb000517": "Coding 3min : Half it III", "5697a0d35f754d1592000018": "Are they square 2?", "57b2cef5d2a31c3965000a43": "T.T.T.40: m to n % 9", "570e1271e5c9a0cf2f000d11": "Kontti Language", "574be65a974b95eaf40008da": "T.T.T.#2: Equal to 24", "527176c487961e5900000106": "Concatenating functions", "5268a3e110342833900001bc": "Simple Linear Regression Cost Function (Machine Learning)", "58b3bb9347117f4aa7000096": "Simple Fun #169: Press Button", "555185132c0d4cca3d000197": "I Spy", "51675d17e0c1bed195000001": "Largest 5 digit number in a series", "5779624bae28070489000146": "Logistic Map", "52fefe6cb0091856db00030e": "Mongodb ObjectID", "55e0a2af50adf50699000126": "Pure odd digits primes", "589d6bc33b368ea992000035": "Simple Fun #120: Range Collapse Representation", "58e2835b5e2ad23be1000044": "One Line Task: Integer Average", "58bf72b02d1c7c18d9000127": "Simple Fun #187: Does Fred Need A Houseboat?", "5825792ada030e9601000782": "zipWith", "58f5c63f1e26ecda7e000029": "Mexican Wave", "54de3257f565801d96001200": "Ease the StockBroker", "57a18f23e298a740e5001051": "T.T.T.16: Warning of Array.map()", "58f573a0f6110e46a4000001": "ASCII Games: Flood Fill (Player)", "54149054c1f3a6675b0009c2": "Type Checking", "54221c16dda52609b1000ffb": "Vowel Alternations", "58f4cc4e43251b1be6000082": "ASCII Games: Warning: Ice!", "52fcc820f7214727bc0004b7": "Check and Mate?", "52336a4436e0b095d8000093": "MergeSort \"merge\" function", "546a3fea8a3502302a000cd2": "The Shell Game", "56fbb2b8fca8b97e4d000a31": "DNA Sequence Tester", "58ecc0a8342ee5e920000115": "Triangle of Multiples (Easy One)", "5390ae7acd51b62a040009fc": "Take It or Leave It Interview Strategy", "520446778469526ec0000001": "Nesting Structure Comparison", "527154e03594b9e3d2000533": "Karnaugh's detonating timer (a k-map primer)", "52ffcf5eaff455b3c200074b": "Mirror,  Mirror", "540ddb07716ab397e1000797": "Float to Binary Conversion", "527d0fbbbb2890fbb900081e": "Simple image processing (part I): edges, feature growing and shrinking", "5427db696f30afd74b0006a3": "Bowling score calculator", "585cf93f6ad5e0d9bf000010": "Bowling Pins", "5268988a1034287628000156": "Binary Tree Serpentine Traversal", "568338ea371e86728c000002": "Regexp basics - parsing time", "58957c5041c979cf9e00002f": "Simple Fun #89: Boxes Packing", "589809f0fcc4b92ea200033a": "Simple Fun #97: Video Part", "58c212c6f130b7c4660000a5": "Simple Fun #192: Three Details", "58acf6c20b3b251d6d00002d": "Simple Fun #151: Rocks", "58a65945fd7051d5e1000041": "Simple Fun #133: Six Column Encryption", "58a64b48586e9828df000109": "Simple Fun #130: Robot Walk", "58bcd7f2f6d3b11fce000025": "Simple Fun #183: Direction In Grid", "56e6705b715e72fef0000647": "\u25a0\u25a1 Pattern \u25a1\u25a0 : Zoom", "58a6568827f9546931000027": "Simple Fun #132: Number Of Carries", "58af9f7320a9ecedb30000f1": "Simple Fun #161: Replace Dashes As One", "58ad2e9c0e3c08126000003f": "Simple Fun #158: Not So Random", "55af0d33f9b829d0a800008d": "Decode Diagonal", "58bee820e9f98b215200007c": "Selective memory", "578b44a47c77f5a1bd000011": "Find the most frequently occurring elements in arrays", "57c15d314677bb2bd4000017": "Doors in the school", "5558bb17f7ba7532de0000aa": "Department scheduler [simple]", "58e3ffb01f878507e00005b0": "Empty that array!", "55633765da97b266e3000067": "Elo rating - one game, one pair", "58f1e4a2445a4ccef600006d": "\u8c61\u68cb (Xiangqi/Chinese Chess) Board Validator", "55c0ee3b9951adceaa00005f": "Extract Values and Units", "5883b79101b769456e000003": "Split all even numbers to odd ones in different ways", "58161c5ac7e37d17fc00002f": "Find a Bunch of Common Elements of Two Lists in a Certain Range", "5629db57620258aa9d000014": "Strings Mix", "58429d526312ce1d940000ee": "Balance the arrays", "58f0f2e404247ee939000016": "Computing the Normal Distribution Table", "587c0138110b20624e000253": "Esolang: MiniBitMove", "5314ce58288b818ddc00006a": "Decorator Pattern", "53b138b3b987275b46000115": "Compare Versions", "58f0f4cc13505e82db000004": "Too Fast, Too Fourier", "589b30ddcf7d024850000089": "Jumble words", "586e4c61aa0428f04e000069": "Get decimal part of the given number", "58ae6ae22c3aaafc58000079": "Permute a Palindrome", "544975fc18f47481ba00107b": "Circularly Sorted Array", "55caf9ff29c318407c00001f": "Javascript Magic Function", "548db0bd1df5bbf29b0000b7": "validDate Regex", "58ef87dc4db9b24c6c000092": "Sectional Array Sort", "56c9f47b0844d85f81000fc2": "Take a picture !", "58e46873c45e9af88d00006a": "Program a Calculator #1 - Points in 3D Space", "5536a85b6ed4ee5a78000035": "Help your granny!", "51f41fe7e8f176e70d0002b9": "Sort Arrays (Ignoring Case)", "55031bba8cba40ada90011c4": "Hidden \"Cubic\" numbers", "5782dd86202c0e43410001f6": "Number , number ... wait LETTER !", "5517fcb0236c8826940003c9": "Irreducible Sum of Rationals", "5616868c81a0f281e500005c": "Prize Draw", "55f4a44eb72a0fa91600001e": "\"Stringing\"+\"Me\"+\"Along\"", "56a32dd6e4f4748cc3000006": "Rainfall", "58e6996019af2cff71000081": "Langton's ant", "55be10de92aad5ef28000023": "Color Choice", "55f347cfb44b879e1e00000d": "Highest number with two prime factors", "5844e0890d3bedc5c5000e54": "File Path Operations", "5297bf69649be865e6000922": "Simple Sentences", "53c93982689f84e321000d62": "Prime number decompositions", "5420fc9bb5b2c7fd57000004": "Highest Rank Number in an Array", "54ce9497975ca65e1a0008c6": "Temperature converter", "57ee2a1b7b45efcf700001bf": "Cat and Mouse - Harder Version", "58a2a561f749ed763c00000b": "The Rhinestone Cowboy  ~ Count the dollars in his boots!", "58f0ba42e89aa6158400000e": "Folding your way to the moon", "58539230879867a8cd00011c": "Where is my parent!?(cry)", "57a22f50bb99445c5e000171": "Tree-D Printer", "570dff30e6e9284ba3000a8f": "Shortest Code : Special factor", "537e2f99be93a055e5000012": "Throttle a Function", "56968ce7753513604b000055": "Calculate Pyramid Height", "52c0279f3b64f6f52700029a": "Relational expressions", "53fe2171d5679bff300007d9": "The Non-Discriminate Factorial", "55afe435d2ce100356000032": "Javascript from the Inside #2: Filter", "5893f03c779ce5faab0000f6": "Simple Fun #66: Obtain Max Number", "53d3173cf4eb7605c10001a8": "By the Power Set of Castle Grayskull", "559e10e2e162b69f750000b4": "What dominates your array?", "56f8a648ba792a778a0000b9": "Shortest code: Bug in Apple", "57109bf197b4b3853a000274": "Shortest Code : Remove screws I", "5710a50d336aed828100055a": "Coding 3min : Remove screws I", "585af8f645376cda59000200": "Thinkful - String Drills: Poem formatter", "5862eeeae20244d5eb000005": "Thinkful - Number Drills: R\u00f8mer temperature", "585a36b445376cbc22000072": "Thinkful - String Drills: Areacode extractor", "585a1f0945376c112a00019a": "Thinkful - String Drills: Repeater level 2", "53d32bea2f2a21f666000256": "Largest Elements", "57faefc42b531482d5000123": "Exclamation marks series #3: Remove all exclamation marks from sentence except at the end", "54381f0b6f032f933c000108": "Counting power sets", "554910d77a3582bbe300009c": "Who won the election?", "57ad85bb7cb1f3ae7c000039": "Numbers with this digit inside", "53d628de83db278fb1000710": "Re-open class", "56786a687e9a88d1cf00005d": "Character Counter", "5650ab06d11d675371000003": "Split In Parts", "54557d61126a00423b000a45": "shorter concat [reverse longer]", "54554846126a002d5b000854": "A Gift Well Spent", "563f879ecbb8fcab31000041": "First-Class Function Factory", "5819a6fdc929bae4f5000a33": "Identify Case", "568ade64cfd7a55d9300003e": "Tube strike options calculator", "581de9a5b7bad5d369000150": "SCHEDULE YOUR DA(RRA)Y", "581f4ac139dc423f04000b99": "Transpose two strings in an array", "54592a5052756d5c5d0009c3": "Head, Tail, Init and Last", "541da001259d9ca85d000688": "Arithmetic List!", "51c89385ee245d7ddf000001": "Substituting Variables Into Strings: Padded Numbers", "57a83e447cb1f32de80000d5": "Get length of the list recursively", "5121303128ef4b495f000001": "Refactored Greeting", "57ee24e17b45eff6d6000164": "Cat and Mouse - Easy Version", "56684677dc75e3de2500002b": "Comfortable words", "57fcaed83206fb15fd00027a": "Replace every nth", "584466950d3bedb9b300001f": "How many times does it contain?", "567501aec64b81e252000003": "Easy wallpaper", "5497a3c181dd7291ce000700": "Find sum of top-left to bottom-right diagonals", "564fa92d1639fbefae00009d": "Find factors of a number", "586909e4c66d18dd1800009b": "Currying functions: multiply all elements in an array", "53da6a7e112bd15cbc000012": "Sorting Dictionaries", "57cf50a7eca2603de0000090": "Move 10", "58644e8ddf95f81a38001d8d": "Make a square box!", "55d5da66a0e378b8bc0000c6": "Search JSON for any key value pair", "58d5e6c114286c8594000027": "Array Manipulation", "569b5cec755dd3534d00000f": "Looking for a benefactor", "5519e930cd82ff8a9a000216": "Count the Ones", "52105fab0bd0ce9dd00000fe": "Custom sort function", "5299413901337c637e000004": "Return the Missing Element", "51f41b98e8f176e70d0002a8": "Sort arrays - 1", "53951fff369894e4f10007a9": "Use map() to double the values in an array", "544d114f84e41094a9000439": "Power of 4", "54402d52cf3625b882000141": "Super Secret Password Generator", "588a3c3ef0fbc9c8e1000095": "max diff - easy", "517b25a48557c200b800000c": "Elapsed Seconds", "536c00e21da4dc0a0700128b": "Find Your Villain Name", "56044de2aa75e28875000017": "CompoundArray", "534d0a229345375d520006a0": "Power of two", "526c7363236867513f0005ca": "Leap Years", "5720a81309e1f9b232001c5b": "RegExp Fun #1 - When I miss few days of gym", "540f8a19a7d43d24ac001018": "Arithmetic Sequence!", "575690ee34a34efb37001796": "Split string by multiple delimiters", "55b051fac50a3292a9000025": "Filter the number", "585b1fafe08bae9988000314": "Digits explosion", "5296455e4fe0cdf2e000059f": "Basic Calculator", "56833b76371e86f8b6000015": "Regexp basics - parsing prices", "567c9f56d83baeed8300000f": "Regexp Basics - is it a hexadecimal number?", "514a6336889283a3d2000001": "JavaScript Array Filter", "513e1e47c600c93cef000001": "JavaScript class-like objects", "51c7d8268a35b6b8b40002f2": "Building Strings From a Hash", "570e8d5693214b0095001b08": "Shortest Code : Find the murderer", "570f3fc5b29c702c5500043e": "Coding 3min : Find the murderer", "57d60363a65454701d000e11": "I guess this is a 7kyu kata #6: Fruit Ninja I", "56eff1e64794404a720002d2": "Thinking & Testing : How many \"word\"?", "56d931ecc443d475d5000003": "Thinking & Testing : True or False", "56d93f249c844788bc000002": "Thinking & Testing : Something capitalized", "56d9292cc11bcc3629000533": "Thinking & Testing : Incomplete string", "56d9b46113f38864b8000c5a": "Thinking & Testing : Math of Primary School", "570bbf7b6731d44b36001fde": "Shortest Code : Jumping Dutch act", "58afb7cea9c97a83a50000e3": "Simple Fun #163: Fantastic Person", "58c21e99c80e0eac25000235": "One Line Task: Brick Combos", "570e6d8576f0cde131000129": "Shortest Code : Guess the Hat", "570ef7a834e61306da00035b": "Coding 3min : Guess the Hat", "56fa24b10ba33be7d4000315": "Shortest code: Give me the equation", "56fe9b65cc08cafbc5000de3": "Coding 3min: Give me the equation", "570f45fab29c705d330004e3": "Shortest Code : Planting Trees", "5710443187a36a9cee0005a1": "Coding 3min : Planting Trees", "5713b0253b510cd97f001148": "Coding 3min : toLoverCase()", "5716e15d2668e209b7000784": "Coding 3min : Half it I", "570ca6a520c69f39dd0016d4": "Coding 3min : Reading a Book", "570c560c15944a98e9000fd2": "Shortest Code : Reading a Book", "5705b59f5eef1f04f1000f84": "Shortest Code : Are they symmetrical?", "5705cc3161944b10fd0004ba": "Coding 3min : Are they symmetrical?", "570db6dade4dc8966600051c": "Shortest Code : Eat watermelon", "570df12ce6e9282a7d000947": "Coding 3min : Eat watermelon", "57542b169a4524d7d9000b68": "Play PingPong : Precise control", "57fb017d9610ce369a0006ac": "Exclamation marks series #9: Remove or add a exclamation mark at the end of words of the sentence", "57fafd0ed80daac48800019f": "Exclamation marks series #8: Move all exclamation marks to the end of the sentence", "57ea0ee4491a151fc5000acf": "So Easy: Charge time calculation", "57fafb6d2b5314c839000195": "Exclamation marks series #7: Remove words from  the sentence if it contains one exclamation mark ", "57f8842367c96a89dc00018e": "Cat and Mouse - 2D Version", "57fb4b289610ce39f70000de": "Exclamation marks series #18: a simple slot machine that only contains exclamation marks and question marks", "57de36c721bc491a54000178": "myjinxin's Fairy tales #002 : Ali Baba and the Forty Thieves I", "57a4395ce298a72d71000306": "T.T.T.20: Make a matrix", "57aa91aebb9944621800017c": "T.T.T.26: How many students have finished all the homework", "5768b775b8ed4a360f000b20": "T.T.T. #7: Profit or loss", "56a4a3d4043c316002000042": "regex  validation of 24 hours time.", "52b74e0936d582d9210005ff": "esreveR gnirtS", "57ee99a16c8df7b02d00045f": "Flatten and sort an array", "58305403aeb69a460b00019a": "String Reversing, Changing case, etc.", "56445cc2e5747d513c000033": "UVB-76 Message Validator", "56ce2f90aa4ac7a4770019fa": "Help Mr. E", "5681cf0be812b41721000034": "Remove the noise from the string", "563319974612f4fa3f0000e0": "White or Black?", "56f3ed90de254a2ca7000e20": "Find the discounted prices", "57ebaa8f7b45ef590c00000c": "Numbers to Letters", "552564a82142d701f5001228": "Discover The Original Price", "54eecc187f9142cc4600119e": "HTML Generator", "5885b5d2b632089dc30000cc": "#~For Kids~#  d/m/Y  -> Day of the week.", "58342f14fa17ad4285000307": "How long will it take the train to reach its final destination?", "5639bdcef2f9b06ce800005b": "Return String of First Characters", "583ebb9328a0c034490001ba": "Identical Elements", "57ced2c1c6fdc22123000316": "Numbers  to Objects", "5863f97fb3a675d9a700003f": "All Star Code Challenge #1", "564f458b4d75e24fc9000041": "Finding Remainder Without Using '%' Operator", "56ce75f63ae564179200211c": "Array of all primes up to number N", "56aed5db9d5cb55de000001c": "How many twos?", "552ab0a4db0236ff1a00017a": "SillyCASE", "5300901726d12b80e8000498": "Fizz Buzz", "55466644b5d240d1d70000ba": "Candy problem", "57d86d3d3c3f961278000005": "99 Problems, #1: last in list", "55a1528cca4a6d4c5a0000e3": "Default + Rest + Spread", "5642bf07a586135a6f000004": "Green Glass Door", "58249d08b81f70a2fc0001a4": "Return the closest number multiple of 10", "57b6f850a6fdc76523001162": "Hit Count", "557a2c136b19113912000010": "reverseIt", "56e56756404bb1c950000992": "Sum of differences between products and LCMs", "57fd696e26b06857eb0011e7": "Hungarian Vowel Harmony (easy)", "56971747aa359bdbf800004d": "Tricky Doubles", "55147ff29cd40b43c600058b": "Character Concatenation", "587a88a208236efe8500008b": "Sum of a Sequence [Hard-Core Version]", "5856c5f7f37aeceaa100008e": "Christmas baubles on the tree", "54fb963d3fe32351f2000102": "Collatz Conjecture Length", "55a12bb8f0fac1ba340000aa": "Find the anonymous function", "582609930626631a9600003e": "Median fun fun", "545cff101288c1d2da0006fb": "Showing X to Y of Z Products.", "564e7fc20f0b53eb02000106": "Count consonants", "5868812b15f0057e05000001": "Tail Swap", "5533c2a50c4fea6832000101": "Dictionary from two lists", "552e45cc30b0dbd01100001a": "Russian postal code checker", "58029cc9af749f80e3001e34": "New \u00a35 notes collectors!", "567ed73340895395c100002e": "Regexp Basics - is it a eight bit signed number?", "586efc2dcf7be0f217000619": "String reverse slicing 101", "57d1f36705c186d018000813": "Hells Kitchen", "55c2a1ee7fe3ccfee5000058": "Find the Combination", "55563df50dda59adf900004d": "EAN Validation", "57ed30dde7728215300005fa": "Bumps in the Road", "5815f7e789063238b30001aa": "Wealth equality, finally!", "56b8b0ae1d36bb86b2000eaa": "Time Converter: hours, minutes, seconds and milliseconds", "56ed5f13c4e5d6c5b3000745": "Paperboy", "5822b65bb81f702016000026": "Unix command line `ls -l`  extract the file type. ", "571d2e9eeed4a150d30011e7": "Competitive eating scoreboard", "56b7526481290c2ff1000c75": "Triple Shiftian Numbers", "5566b0dd450172dfc4000005": "Finding length of the sequence", "5806c2f897dba05dd900004c": "N-Dimensional Vector Magnitude", "57f6051c3ff02f3b7300008b": "The Office V - Find a Chair ", "579ba41ce298a73aaa000255": "Name That Number!", "57ecf6efc7fe13eb070000e1": "The Office I - Outed", "558ee8415872565824000007": "Is n divisible by (...)?", "55b86beb1417eab500000051": "Find the longest  gap!", "584c702256c98fc0a0000043": "Fizz Buzz - Without ifs", "57f604a21bd4fe771b00009c": "The Office IV - Find a Meeting Room", "570cbe88f616a8f4f50011ac": "Bob's Short Forms", "56fbdda707cff41b68000de2": "Fun with ES6 Classes #3 - Cuboids, Cubes and Getters", "56f935002e6c0d55fa000d92": "Fun with ES6 Classes #2 - Animals and Inheritance", "56d02e6cc6c8b49c510005bb": "Find missing numbers", "56fac4cfda8ca6ec0f001746": "After(?)  Midnight", "5669a5113c8ebf16ed00004c": "Common Substrings", "56069d0c4af7f633910000d3": "Filter Coffee", "55fc061cc4f485a39900001f": "Strange principal", "565b112d09c1adfdd500019c": "Substring fun", "547aadd5b84a1fd66800041e": "More than one way to call a function, or skin a cat. ", "52f29bab392fb83e0d000656": "splicing", "56b5ebaa26fd54188b000018": "The Most Amicable of Numbers", "582f52208278c6be55000067": "Round to nearest 0 or 5", "57efab9acba9daa4d1000b30": "Slaphead", "57e8fba2f11c647abc000944": "Holiday III - Fire on the boat", "57bf599f102a39bb1e000ae5": "Fibonacci's FizzBuzz", "57a23c2acf1fa514d0001034": "Who Took The Car Key?", "5722aeda785220c84900109b": "Anchorize me! ", "554754ac9d8ac3be120000b2": "Where is Vasya?", "583ade15666df5a64e000058": "Evens and Odds", "563b1f55a5f2079dc100008a": "Number Pairs", "5753b987aeb792508d0010e2": "Every nth array element. (Basic)", "5168b125faced29f66000005": "Return substring instance count", "58308360aeb69a460b0002b2": "Train to remove duplicates from an array with filter()", "56d31aaefd3a52902a000d66": "The Ladies of ENIAC", "567de8823fa5eee02100002a": "Regexp Basics - is it all whitespace?", "57ed56657b45ef922300002b": "The Office III - Broken Photocopier", "557226cd3554219bdf00019b": "Fast Fibonacci", "55d6a0e4ededb894be000005": "The old switcheroo 2", "55d410c492e6ed767000004f": "The old switcheroo", "563fb342f47611dae800003c": "Trimming a string", "5609fd5b44e602b2ff00003a": "Operations With Sets", "55de6173a8fbe814ee000061": "Filter unused digits", "56314d3c326bbcf386000007": "Tax Calculator", "57eb936de1051801d500008a": "Array Array Array", "55b8c0276a7930249e00003c": "International Morse Code Encryption", "56414fdc6488ee99db00002c": "Absent vowel", "52dbae61ca039685460001ae": "Search for letters", "55c9fb1b407024afe6000055": "Find an employees role in the company", "56808724e7784d220c00003f": "RuplesJS #3: String EachChar", "55e3f27d5dee52d8dd0000a9": "Difference between biggest 2 numbers", "57d4e99bec16701a67000033": "H\u00eb\u00e4v\u00ff M\u00ebt\u00e4l \u00dcml\u00e4\u00fcts", "57ce0c634001a5f3c7000006": "Date Format Validation", "54c27ef1fb7da0118600046a": "Born to be chained", "5512ec4bbe2074421d00028c": "Functional streams", "546d245dddbcbd291c00106e": "Algebraic Data Types", "52744341faf5480173000bc7": "Streams - endless arrays", "52657e805fda8ea5590007e5": "Simple digit code breaker", "5714803d2817ffce17000a35": "Coding 3min : A*B=C", "5714594d2817ff681c000783": "Fastest Code : A*B=C", "56c2578be8b139bd5c001bd8": "Job Matching #2", "58488e89cc8feac6cb000941": "Remove HTML tags using regexp", "580a4001d6df740d61000301": "Complete Series", "5637ead70013386e30000027": "Multiplication - Generators #2", "5419cf8939c5ef0d50000ef2": "Same Birthday Probability", "55ab9eee6badbdaf72000075": "Figurate Numbers #1 - Pentagonal Number", "55b1e5c4cbe09e46b3000034": "Figurate Numbers #2 - Pronic Number", "57eba158e8ca2c8aba0002a0": "Sort by Last Char", "557efeb04effce569d000022": "makeAcronym", "55f3facb78a9fd5b26000036": "Always perfect", "57d2ba8095497e484e00002e": "Borrower Speak", "5603a4dd3d96ef798f000068": "Share prices", "5865a28fa5f191d35f0000f8": "Thinkful - Logic Drills: Umbrella decider", "56a921fa8c5167d8e7000053": "Password validator", "56b97b776ffcea598a0006f2": "Bubblesort Once", "589519d1f0902e01af000054": "Perimeter sequence", "559e5b717dd758a3eb00005a": "Dropcaps", "559f89598c0d6c9b31000125": "Every archer has its arrows", "570fd7ad34e6130455001835": "Zebulan's Nightmare", "559d7951ce5e0da654000073": "Alternate Square Sum", "57eead3b5f79f6d977001fb7": "DigitAll", "5660aa3d5e011dfd6e000063": "80's Kids #2: Help ALF Find His Spaceship", "560a4962c0cc5c2a16000068": "Numbers Which Sum of Powers of Its Digits Is The Same Number", "582afcadac2d9baa0900054c": "Pokerhand, straight or not?", "540c013634e6bac0350000a5": "Unique Pairs", "5862e7c63f8628a126000e18": "Thinkful - Number Drills: Congo warehouses", "5892595f190ca40ad0000095": "Mispelled word", "580a41b6d6df740d6100030c": "Alan Partridge III - London", "583af10620dda4da270000c5": "Merge two arrays", "568f9bd9cbe89334c900000c": "Unique numbers", "57a72cb872292dc43100000c": "Airport itinerary", "57f7b8271e3d9283300000b4": "Even or Odd - Which is Greater?", "564e1d90c41a8423230000bc": "Knight vs King", "583df40bf30065fa9900010c": "The mean of two means", "5846174c5955406d02000b59": "The Four Seasons", "585a1a227cb58d8d740001c3": "Thinkful - String Drills: Repeater", "5583d268479559400d000064": "Binary to Text (ASCII) Conversion", "56baeae7022c16dd7400086e": "Phone Directory", "535474308bb336c9980006f2": "Greet Me", "58902f676f4873338700011f": "Lucky Bus Ticket", "56548dad6dae7b8756000037": "Clock in Mirror", "58712dfa5c538b6fc7000569": "Simple beads count", "542c0f198e077084c0000c2e": "Count the divisors of a number", "558cb3df5f511f40d500001d": "Replicate `new`", "55aac03755b0264947000138": "Creating Elements with React", "56a75b91688b49ad94000015": "Excessively Abundant Numbers", "562d8d4c434582007300004e": "Email Address Obfuscator", "582aafca2d44a4a4560000e7": "Keep the Order", "55486cb94c9d3251560000ff": "Width-Height Ratio", "56abc5e63c91630882000057": "Next Featured Number Higher than a Given Value", "55c9a8cda33889d69e00008b": "Supernatural", "56b5dd1702a30326ce000b02": "Basics 04: Rotate Matrix", "5662292ee7e2da24e900012f": "80's Kids #3: Punky Brewster's Socks", "57b2020eb69bfcbf64000375": "Weird words ", "58545549b45c01ccab00058c": "Calculate Meal Total", "563a8656d52a79f06c00001f": "Is valid identifier?", "57a30f5153ba334ce100009b": "ROT13", "576d209bed916d2ea30000f7": "Vault experience (1): Enough water for how many days?", "56f5594a575d7d3c0e000ea0": "Conference Traveller", "581b30af1ef8ee6aea0015b9": "Find how many times did a team from a given country win the Champions League?", "5592fc599a7f40adac0000a8": "Diagonals sum", "56853c44b295170b73000007": "Are they square?", "561046a9f629a8aac000001d": "Array comparator", "5884ce61f36b6d738b000053": "Playing with Sets : Union", "561bbcb0fbbfb0f5010000ee": "Radio DJ helper function", "5832db03d5bafb7d96000107": "Lottery machine", "584bf3b969ebc573ed00000f": "Maxed Out", "5838a66eaed8c259df000003": "Palindromes Here and There", "56dbed3a13c2f61ae3000bcd": "Noonerize Me", "57a73e697cb1f31dd70000d2": "Chinese Zodiac", "55f8ba3be8d585b81e000080": "Mobile operator detector", "581270cb4927602fc800005a": "Extending JavaScript Objects: Reverse String", "57a06005cf1fa5fbd5000216": "Words to sentence", "559f8d487fa8511c43000118": "Is this working?", "5805ed25c2799821cb000005": "Birthday I - Cake", "56b8903933dbe5831e000c76": "Spoonerize Me", "57a04da9e298a7ee43000111": "Reverse list", "56242b89689c35449b000059": "draw me a chessboard", "564ab935de55a747d7000040": "Not all but sometimes all", "56a6ce697c05fb4667000029": "Next Palindromic Number.", "5747a9bbe2fab9a0c400012f": "DNA GC-content", "57066ad6cb72934c8400149e": "Chuck Norris V - Body Count", "5884f4727987a2a561000147": "Playing with Sets : Symmetric difference", "57e90bcc97a0592126000064": "Holiday V - SeaSick Snorkelling", "57d27a0a26427672b900046f": "Duck Shoot - Easy Version", "564e48ebaaad20181e000024": "Cambridge Word Scramble", "5822d89270ca28c85c0000f3": "String Scramble", "5667525f0f157f7a0a000004": "80's Kids #5: You Can't Do That on Television", "55b4f9906ac454650900007d": "String chunks", "5838719c6754d618240000ff": "Validate Passwords", "57b9fc5b8f5813384a000aa3": "Fruit string calculator", "58e4377c46e371aee7001262": "Geometry Basics: Triangle Area  in 2D", "560fbc2d636966b21e00009e": "Map function  issue", "5208fc3cb613bc725f000142": "Limit string length - 1", "5734c38da41454b7f700106e": "Only one", "58162692c2a518f03a000189": "Upstream/Downstream", "57a60bad72292d3e93000a5a": "Make acronym", "57faa6ff9610ce181b000028": "Clean up after your dog", "57a05e0172292dd8510001f7": "Sentence to words", "588ac50727eb94c87700001f": "ONE ONe One one", "560d6ebe7a8c737c52000084": "Invisible cubes", "57029e77005264a3b9000eb5": "Nothing special", "57ed40e3bd793e9c92000fcb": "Chicken Sexing", "57c3eb9fd6cf0ffd68000222": "Simple Physics Problem", "56326c13e63f90538d00004e": "String basics", "5655c60db4c2ce0c2e000026": "Function composition", "5276c0f3f4bfbd5aae0001ad": "Grab CSV Columns", "56d344c7fd3a52566700124b": "Test Your Knowledge Of Function Scope", "54b7c8d2cd7f51a839000ebf": "Easy mathematical callback", "543e308b23ccbda148001526": "Playing with types", "57061b6fcb7293901a000ac7": "Chuck Norris III - Cage Match", "584dc1b7766c2bb158000226": "Help Suzuki complete his chores!", "578fe7e2149935740f000525": "Second largest in Array", "5865cff66b5699883f0001aa": "All Star Code Challenge #22", "576a29ab726f4bba4b000bb1": "What is my name score? #1", "5808c8eff0ed4210de000008": "Alan Partridge I - Partridge Watch", "582c42e0f000e54a7d000086": "Dan's great power generator", "580559b17ab3396c58000abb": "How many points did the teams from Los Angeles score?", "5720eb05e8d6c5b24a0014c5": "#1 Matrices : Making  an Alternating Sum", "56311e4fdd811616810000ce": "Method For Counting Total Occurence Of Specific Digits", "57452748976d65946d000599": "Decipher the Message", "5760c1c7f2717b91e20001a4": "Find the motif in DNA sequence.", "587b6a5e8726476f9b0000e7": "Rotational energy levels", "56f6b23c9400f5387d000d48": "Countdown to Christmas", "54599705cbae2aa60b0011a4": "Enumerable Magic #5- True for Just One?", "58067088c27998b119000451": "Reverse Factorials", "56bdf9d50d0b6433df001074": "Sum The Array", "56c22cdbe0c0f7cae2001789": "Write shortest function to calculate Average number of Array", "584d2c19766c2b2f6a00004f": "Boolean logic from scratch", "54fdfe14762e2edf4a000a33": "Grid blast!", "5747fcfce2fab91f43000697": "Sort by Example", "57ef016a7b45ef647a00002d": "Homogenous arrays", "5864e2c473bd9c67b70002ba": "All Star Code Challenge #13 : Pig Latin Translator", "5872d6eba44cfcd500000153": "Strings to numbers", "586427d883f7e6b5670001dc": "All Star Code Challenge #7", "57fb79784e2d0639c9000066": "Sorting the Odd way!", "565d76490397dcf0e700001e": "Remove method in Arrays", "566fd169d39cf89e1e000044": "Sports league table - help your local team!", "57eeb8cc5f79f6465a0015c1": "KISS - Keep It Simple Stupid", "58b972cae826b960a300003e": "Jenny the youngest detective", "5777fe3f355edbf0a5000d11": "'x' marks the spot.", "57212c55b6fa235edc0002a2": "Dinner Plans", "56bcae6366a2ab99f10011ec": "Digit Sum", "5722cc50785220ac8b00129b": "Pictures #1 - Rebuilding the Tower of Babel", "56d55dcdc87df58c81000605": "Credit Card Checker", "553f01db29490a69ff000049": "Simple Sequence Validator", "5813189b50326e3657000213": "Extending JavaScript Objects: Contains Method", "56ba65c6a15703ac7e002075": "Find the smallest  power higher than a given a value", "5681bc8d17af37f50e000015": "Array of Primes", "585c284d06512958820001a6": "Emily's Eccentric Encoding", "581534b8d5fae4428e00001e": "Extending JavaScript Objects: Simple Math Methods", "551204b7509063d9ba000b45": "Product of the main diagonal of a square matrix.", "57293671c98f77e84b000065": "What is type of variable?", "5751fef5dcc1079ac5001cff": "Please help Bob ", "5751aa92f2dac7695d000fb0": "Mythical Heads and Tails", "57b56af6b69bfcffb80000d7": "Get initials from person name", "571965ccdf7fdb10a00000ea": "Sum and Length", "586bca7fa44cfc833e00005c": "Number to digit tiers", "56f7493f5d7c12d1690000b6": "Calculate mean and concatenate string", "57ea5b0b75ae11d1e800006c": "Sort array by string length", "559cc2d2b802a5c94700000c": "How many consecutive numbers are needed?", "57b5907920b104772c00002a": "Cats in hats", "5894134c8afa3618c9000146": "Chess Fun #1: Chess Board Cell Color", "58e24788e24ddee28e000053": "Simple assembler interpreter", "5887099cc815166a960000c6": "Simple Fun #32:  Create Anagram", "589ac16a0cccbff11d000115": "Simple Fun #109: Segment Cover", "587309155cfd6b9fb60000a0": "Unwanted dollars", "5866ec8b2e8d9cec7e0000bb": "All Star Code Challenge #29", "58a651ff27f95429f80000d0": "Simple Fun #131: Learn Charitable Game", "56d5166ec87df55dbe000063": "Sum of Array Averages", "58e3e62f20617b6d7700120a": "Geometry Basics: Triangle Perimeter  in 2D", "51e8241aed85d42c810002aa": "Arbitrary word wrapping", "589ebcb9926baae92e000001": "ASCII letters from Number", "58aa7f18821a769a7d000190": "Simple Fun #145: Table Game", "5434283682b0fdb0420000e6": "Caffeine Script", "58aaa3ca821a767300000017": "Simple Fun #150: Robot Transfer", "58a664bb586e986c940001d5": "Simple Fun #135: Missing Alphabets", "55f3da49e83ca1ddae0000ad": "Tank Truck", "58e3031ce265671f6a000542": "Geometry Basics: Distance between circles in 2D", "577e277c9fb2a5511c00001d": "Vowel Shifting", "5535572c1de94ba2db0000f6": "Make them bark!", "58275b63083e128edb00098d": "Lucky Sevens", "515de9ae9dcfc28eb6000001": "Split Strings", "58ad317d1541651a740000c5": "Simple Fun #159: Middle Permutation", "5898b4b71d298e51b600014b": "Srot the inner ctonnet in dsnnieedcg oredr", "58e16de3a312d34d000000bd": "Ranking System", "589d2bf7dfdef0817e0001aa": "Simple Fun #115: Factor Sum", "524c6a2e55025e3fba00020f": "Javascript Namespacing", "5286a298f8fc1b7667000c1c": "Word, char and line count", "514b6c44a337752e67000077": "Name Your Space", "550cc572b9e7b563be00054f": "Scheduling (Shortest Job First or SJF)", "55b3425df71c1201a800009c": "Statistics for an Athletic Association", "5318f00b31b30925fd0001f8": "Formatting a number as price", "52d629bb5feccfd4c100022d": "A Taste of Curry", "5768a693a3205e1cc100071f": "Initialize my name", "56dfd5dfd28ffd52c6000bb7": "Thinking & Testing : I hate big and small", "521ef596c106a935c0000519": "(Ready for) Prime Time", "542332c8c2cf7ccbbb000005": "Common Bit Twiddles", "529cd9c409a361b676000021": "Count Decimal Places", "53381a646068efc50100072c": "Function.prototype.clone", "55b6a3a3c776ce185c000021": "Transposing a song", "56e3cd1d93c3d940e50006a4": "How Green Is My Valley?", "542f0c36d002f8cd8a0005e5": "Waiting room", "56b18992240660a97c00000a": "Permutation Average", "55f91a98db47502cfc00001b": "Where's Wally", "581351c40d8f13bc450008b8": "Extending JavaScript Objects: Get First & Last Array Element", "559fed8454b12433ff0000a2": "sum2total", "58a369fa5b3daf464200006c": "How many e-mails we sent today?", "54f2f335cb9d99e8530008d7": "The Span Function", "54f9c37106098647f400080a": "The dropWhile Function", "53a8a476947277a3020001cc": "Array Appender", "57475353facb0e7431000651": "noobCode 04: HOT SINGLES...compare two arrays, return the unpaired items !", "566091b73e119a073100003a": "80's Kids #1: How Many Licks Does it Take?", "56d46b8fda159582e100001b": "How far will I go?", "56eb0be52caf798c630013c0": "Unlucky Days", "5803753aab6c2099e600000e": "Age in days", "55f8b5b09ec923860200000f": "Squeaky Window", "57d28215264276ea010002cf": "Codewars Leaderboard Climber", "58df8b4d010a9456140000c7": "Numerical Palindrome #4", "557b75579b03996942000061": "Feed Kahumolings!", "58e0cb3634a3027180000040": "Sort an array by value and index", "55f2f64faa2ffb24f6000005": "Big number problem", "566044325f8fddc1c000002c": "Return a string's even characters.", "563924c7fbc768197d000030": "So basic", "55f2c3dde50947271200006a": "Add a property to an object", "53a20af2e0afd3e2cd000333": "Say \"Hello World\" JS Style", "55e7650c8d894146be000095": "Error Throwing - Error Handling #2", "52988f3f7edba9839c00037d": "The reject() function", "529f2d1c403a58f660000656": "Basic JS - Building a calculator", "586ed14c35396d912100049a": "Swap two numbers", "564a6486c2070faee6000011": "Is Undefined?", "57b365f81fae8a0571000142": "Measuring Average Speed", "5636840bd87777688b00006c": "Basics - Generators #1", "5892c13cd9f2a384d6000100": "Format With", "57658f3dedc6f7a751000e7b": "Robotic Tattoo Removal", "558fa34727c2d274c10000ae": "Scrabble Score", "52705ed65de62b733f000064": "Return a sorted list of objects", "54b81566cd7f51408300022d": "Partial Word Searching", "52250aca906b0c28f80003a1": "uniq -c (UNIX style)", "58ddffda929dfc2cae0000a5": "Send in the Clones", "567bed99ee3451292c000025": "Regexp Basics - is it a vowel?", "54129112fb7c188740000162": "Prefill an Array", "538948d4daea7dc4d200023f": "Delta Bits", "52fea6fd158f0576b8000089": "ASCII hex converter", "52de672aa5bde77f360003bf": "The good old olden early years", "5388a9d60b24c52f4c000b5f": "Power .bind()", "51f9d3a6e5a42591ae0001eb": "Object extend", "556021360863a1708900007b": "Turkish National Identity Number", "52fb87703c1351ebd200081f": "What century is it?", "53e895e28f9e66a56900011a": "Character frequency", "57dc0ffed8f92982af0000f6": "AD2070: Help Lorimar troubleshoot his robots-Search and Disable", "57f8ff867a28db569e000c4a": "Kebabize", "545cdb4f61778e52810003a2": "Levenshtein Distance", "557dd2a061f099504a000088": "LinkedList -> Array", "54466996990c921f90000d61": "Monotone travel", "53fc954904a45eda6b00097f": "Custom Array Filters", "55aa7acc42216b3dd6000022": "The Owls Are Not What They Seem", "5866c6cf442e3f16f9000089": "All Star Code Challenge #24", "5787628de55533d8ce000b84": "Correct the date-string", "588dd9c3dc49de0bd400016d": "2D / 1D array coordinates mapping", "5645b24e802c6326f7000049": "Down Arrow With Numbers", "55a14cd026f2a4b196000092": "Super Class Extensions", "58c8af49fd407dea5f000042": "Simple Fun #200: Luxurious House", "58693bbfd7da144164000d05": "Scooby Doo Puzzle", "58afa8185eb02ea2a7000094": "Simple Fun #162: Pair Wise", "58a3a735cebc0630830000c0": "Simple Fun #122: String Constructing", "58afc931c6ffb8906100002d": "Simple Fun #164: Judge Votes ", "58afce23b0e8046a960000eb": "Simple Fun #165: Withdraw ", "58b38f24c723bf6b660000d8": "Simple Fun #167: Spreadsheet", "58b3c2bd917a5caec0000017": "Simple Fun #170: Sum Groups", "58c20c8d61aefc518f0000fd": "Simple Fun #191: Sum Of Regular Numbers", "5894318275f2c75695000146": "Simple Fun #79: Delete a Digit", "5893eb36779ce5faab0000da": "Simple Fun #65: Matrix Elements Sum", "58b3d20a47117f7e5b00007a": "One Line Task: One, OneOne, Two, TwoTwo, Three, ThreeThree...", "57f8ee485cae443c4d000127": "Spacify", "582c81d982a0a65424000201": "Is every value in the array an array?", "544a54fd18b8e06d240005c0": "Smallest value of an array", "58952e29f0902eae8b0000cb": "Simple Fun #83: MineSweeper", "58de77a2c19f096a5a00013f": "Find Added ", "58dea43ff98a7e2124000169": "Divide integers as strings", "58dceee2c9613aacb40000b9": "Geometry Basics: Distance between points in 3D", "550527b108b86f700000073f": "PI approximation ", "5436f26c4e3d6c40e5000282": "Basic Sequence Practice", "54a0689443ab7271a90000c6": "Harshad or Niven numbers", "575135cabdd337cff50009cc": "T.T.T.#3: Three lifts", "5777c546886a0e215200008f": "T.T.T.13: A game named \"Five,Ten,Fifteen,Twenty\"", "55d7e5aa7b619a86ed000070": "Ordering  the words!", "525d50d2037b7acd6e000534": "Array Helpers", "53583765d5493bfdf5001b35": "Using closures to share class state", "58dea7b5abe9c7e38b0000aa": "Add integers as strings II (with subtractions)", "552cd8624a414ec2b2000086": "Deutschstunde", "56644a421b7c94c622000056": "Most Likely", "555a7dc335d4c407af00006e": "Tea for two", "564717d6e94d5d6b21000066": "Format of a ticket number", "5829994cd04efd4373000468": "Naming Files", "56aea73c2283945da300004b": "Create 10x10 array and randomly fill each cell with \"A\", \"B\", \"C\", or \"D\"", "585ba6dff59b3cef3f000132": "Reducing by rules to get the result", "57073869924f34185100036d": "RaNDoM CAsE", "535bea76cdbf50281a00004c": "8 towers", "579fa665bb9944f9340005d2": "Rotate to the max", "54eea36b7f914221eb000e2f": "Alphabetize a list by the nth character ", "55a5a70c81e8541d990000bd": "Validate Hexadecimal", "58638bd2210be9a9690001f7": "Array.prototype.size()", "56fcc1ee45040039ab0016da": "Fun with ES6 Classes #4 - Cubes and Setters", "57d81d428462e10e63000205": "Big Fibonacci Numbers", "57066708cb7293901a0013a1": "Chuck Norris IV - Bearded Fist", "5864eb8039c5ab9cd400005c": "All Star Code Challenge #14 - Find the median", "58049aa58f5e65b6da0000ef": "The iccanobiF Sequence", "589d36bbb6c071f7c20000f7": "Simple Fun #116: Prime String", "589aca25fef1a81a10000057": "Simple Fun #110: Array Operations", "580a1a4af195dbc9ed00006c": "Equalize the array!", "57cec34272f983e17800001e": "PopShift", "564d0490e96393fc5c000029": "Calculator: Coin Combination", "57a23e3753ba332b8e0008da": "Password System", "53b2f6934a240823f4000abc": "uniquePush - No Dupes!", "57f7796697d62fc93d0001b8": "Double Trouble", "57d52a7f76da830e43000188": "Sine,cosine and others", "57d448c6ba30875437000138": "Find the sum of the roots of a quadratic equation", "55f74a7433feba03680000c5": "Create the base - Dungeon crawler #1", "57d001b405c186ccb6000304": "Ironman Triathlon", "56fd46bcc5957c83ea001023": "Factory Functions #1 - Creating profile for people", "53921994d8f00b93df000bea": "Weight of its Contents", "54566695309908a6590005f1": "Cross Product of Vectors", "57ee31c5e77282c24d000024": "Paul's Misery", "56a628758f8d06b59800000f": "Self-Descriptive Numbers", "574a7d0dca4a8a0fbe000100": "Reverse complement (DNA )", "57164342794d30e78d000a20": "Coding 3min : Series circuit", "5889a8b335de69cc620000c8": "Simple Fun #60: Swap Diagonals", "576967bbb8ed4a7bca0015c1": "T.T.T. #8: Reverse all", "57d237f25dc38ede6e00026b": "I guess this is a 7kyu kata #4: Find  0 and 1", "57c500840fe14391e200082b": "T.T.T.54: Playing Rock Paper Scissors with Doraemon", "5769e0db6a3efea1b1000010": "T.T.T. #9: Peaks and valleys", "58523d715e8c052521000084": "Christmas mission: Programmer's Christmas #2", "58520e8edeb17c711c00019b": "Christmas mission: Programmer's Christmas #1", "5819f2bdf3101966de0000a3": "Talk to an array", "58a3f57ecebc06bfcb00009c": "Simple Fun #129: Repeat Sequence Length", "5714396153ac217d5500049f": "Coding 3min : Hacker and change", "5279f6fe5ab7f447890006a7": "Pick peaks", "5716ec6a794d30bd5f001a7e": "Coding 3min : Half it II", "5303229f1f5c12ef39000061": "Randomize Objects", "566859a83557837d9700001a": "Divisible Ints", "588809279ab1e0e17700002e": "Simple Fun #36:  Most Frequent Digit Sum", "58942f9175f2c78f4b000108": "Simple Fun #78: Build Palindrome", "589436311a8808bf560000f9": "Simple Fun #81: Digits Product", "538dc8eb8ca4a3d1c400088f": "isInt32(int, byteLength)", "58999425006ee3f97c00011f": "Driving School Series #1 ", "52c31f8e6605bcc646000082": "Two Sum", "580f1a22df91279f09000273": "Random Integers", "56f245a7e40b70f0e3000130": "Find The Minimum Number Divisible by Integers of an Array I", "5682e1082cc7862db5000039": "Regexp basics - parsing integers", "5314b3c6bb244a48ab00076c": "Luck check", "54d84dc118438a0eed000a42": "Integer to Musical Pitch Classes", "52ac7cad98d1981a840004fc": "Anything to integer", "58865bfb41e04464240000b0": "World Bits War", "58856a06760b85c4e6000055": "Bits Battle", "54d3bb4dfc75996c1c000c6d": "Midpoint Sum", "57f7e7617a28db2a2200021a": "Multiply list by integer (with restrictions)", "580751a40b5a777a200000a1": "Vowel one", "57161cb0b436cf0911000819": "Find the integer Partition of k-Length With Maximum or Minimum Value For Its Product Value", "5619dbc22e69620e5a000010": "When Sigma1 Function Has Equals Values For an Integer and Its Reversed One", "535e88e608035176670014b8": "Name That Integer", "5298961d9ce954d77b0003a6": "The range() function", "54d3eae3525c153b21000e3b": "String Integer Greater-than", "568f058bb74d73512500003f": "Big integers sum", "5302b069ad5217ce2d0000f1": "Random Sequence Generator", "538865ef0b24c5ce6a00070d": "intToBits(int, length)", "54e9554c92ad5650fe00022b": "Converting integer to currency format", "559e3224324a2b6e66000046": "Functions of Integers on Cartesian Plane", "58de2be7b4b74ca1c8000205": "Infinite Diceworks: MeanMaxing your rolls (Quantum Mechanically)", "55d2aee99f30dbbf8b000001": "Scoring Tests", "5417423f9e2e6c2f040002ae": "Digitize", "57efcb78e77282f4790003d8": "How many times should I go?", "57741d8f10a0a66915000001": "Integer Difference", "55b54be931e9ce28bc0000d6": "Sums of consecutive integers", "57eaec5608fed543d6000021": "Divide and Conquer", "55606aeebf1f0305f900006f": "Convert Integer to Binary", "5776600afc8cd670130000df": "T.T.T.12: Split integer", "5841f680c5c9b092950001ae": "Series of integers from m to n", "588e2a1ad1140d31cb00008c": "Pairs of integers from m to n", "588e27b7d1140d31cb000060": "Pairs of integers from 0 to n", "5899e054aa1498da6b0000cc": "Reverse and Invert", "563700da1ac8be8f1e0000dc": "Rearrange Number to Get its Maximum", "52fee0a131b8158492000120": "Argument Mapper", "58dd98fe8d29b0f30d0002bd": "Check your arguments", "56ed20a2c4e5d69155000301": "Scaling Squared Strings", "586988b82e8d9cdc520003ac": "Spy games -  rebuild your decoder", "55da6c52a94744b379000036": "Sum up the random string", "585a033e3a36cdc50a00011c": "Frequency sequence", "51fd6bc82bc150b28e0000ce": "No oddities here", "54e8c3e89e2ae6f4900005a1": "Add property to every object in array ", "525d9b1a037b7a9da7000905": "Javascript filter - 1", "57f75cc397d62fc93d000059": "Char Code Calculation", "57f759bb664021a30300007d": "Switcheroo", "53d2697b7152a5e13d000b82": "Making Copies", "570523c146edc287a50014b1": "Especially Joyful Numbers", "533c46b140aafec05b000d31": "Advanced Pig Latin", "558878ab7591c911a4000007": "Single Word Pig Latin", "53c94a82689f84c2dd00007d": "Integer to English", "52724507b149fa120600031d": "Write out numbers", "553a2461098c64ae53000041": "Wordify an integer", "574e4175ff5b0a554a00000b": "Convert Improper Fraction to Mixed Numeral", "53c2c3e78d298dddda000460": "Implementing Array.prototype.groupBy method", "58334362c5637ad0bb0001c2": "Filter valid romans", "536c738e49aa8b663b000301": "Unlimited Sum", "5632e12703e2037fa7000061": "Base64 Numeric Translator", "55efecb8680f47654c000095": "Hero's root", "54e2213f13d73eb9de0006d2": "Pair Zeros", "55c098aa8468f3b9030000f1": "Move Zeros", "563c39f92f7bed9572000011": "The Tale of Two Zeros", "557cffec8c3e8e55cc00010f": "Count number of zeros from 1 to N", "56c2acc8c44a3ad6e400050a": "Monkey's MATH 01:  How many \"ZERO\"s?", "58ad09d6154165a1c80000d1": "Simple Fun #154: Zero And One", "5600e00e42bcb7b9dc00014e": "Calculate the Harmonic Conjugated Point of a Triplet  of Aligned Points", "542c1a6b25808b0e2600017c": "Wind component calculation", "5307ff5b588fe6d7000000a5": "Once", "5351b35ebaeb67f9110012d2": "Can you keep a secret?", "5458d4d2cbae2a9438000389": "Lazily executing a function", "555a77eb65dd419534000016": "Sometimes", "57ab606e53ba3339da0000a2": "sum function", "554c8a93e466e794fe000001": "[Geometry A-1]  Locate point - to the right, to the left or on the vector?", "58417e9ab9c25c774500001f": "Missing Angle", "555f43d8140a6df1dd00012b": "Cartesian coordinates from degree angle", "53b7bc844db8fde50800020a": "Points On A Line", "56a313a0538696bcab000004": "A Crazy Robot? Who's is behind the scenes to make that?", "5307ce667da4f26b1600080d": "Arc Length", "56a13035eb55c8436a000041": "Volume of a cup", "556cebcf7c58da564a000045": "Number of Rectangles in a Grid", "554dc2b88fbafd2e95000125": "[Geometry A-2]: Length of a vector", "53222010db0eea35ad000001": "Slope of a Line", "55f1786c296de4952f000014": "Length of the line segment", "5899aa695401a83a5c0000c4": "Circle area inside square", "5841f4fb673ea2a2ae000111": "Series of integers from 0 to n", "535a69fb36973f2aad000953": "SMS Shortener", "54a91a4883a7de5d7800009c": "String incrementer", "52e1476c8147a7547a000811": "Regex Password Validation", "542106e2dda52658bf00001a": "Node.js Async I/O", "58bfa1ea43fadb41840000b4": "Simple Fun #190: Folding Paper", "58bcd27b7288983803000002": "Simple Fun #182: Happy \"g\"", "58c218efd8d3cad11c0000ef": "Simple Fun #194: Binary String", "58b8dccecf49e57a5a00000e": "Simple Fun #180: Repeat Adjacent", "5855777bb45c01bada0002ac": "Resistor Color Codes, Part 2", "57cf3dad05c186ba22000348": "Resistor Color Codes", "541a077539c5ef3fd8001133": "Typer.js", "52a112d9488f506ae7000b95": "Is Integer Array?", "52c7c425f80c299ac60003df": "Escape HTML Markup", "541a354c39c5efa5fa001372": "IP Address to Number", "51689e27fe9a00b126000004": "Format words into a sentence", "584ebd7a044a1520f20000d5": "Range function", "5558cc216a7a231ac9000022": "Find Duplicates ", "52c32ef251f31ae8f50000ae": "Differential Averaging", "52378b3ee72f21e1ea000045": "True Min", "530017aac7c0f49926000084": "Pluck", "558dd9a1b3f79dc88e000001": "Find The Duplicated Number in a Consecutive Unsorted List", "56ba8a9b022c16017d0001f3": "Sequence generator", "54d22119beeaaaf663000024": "254 shades of grey", "52c82f219e8eaab84700025f": "Array.prototype.splice(from, count, insertItems...)", "558298453b0435384e000101": "Product of two squares", "52ea928a1ef5cfec800003ee": "IPv4 to int32", "580878d5d27b84b64c000b51": "Sum of Triangular Numbers", "58d5b39b1c0402c5f7002e0d": "Bear the Freelancer", "58bcfe1e23fee9fd95000007": "Simple Fun #185: Revamp", "588475d575431d0a0e000023": "Simple Fun #19: Count Black Cells", "58dbb9b82f449e134a000119": "One Line Task: Making Pizza", "57d5e850bfcdc545870000b7": "Dead Ants", "54589f3b52756d34d6000158": "All, None & Any", "58c5577d61aefcf3ff000081": "Rail Fence Cipher:  Encoding and Decoding ", "58b38256e51f1c2af0000081": "Simple Fun #166: Best Match", "587731fda577b3d1b0001196": "CamelCase Method", "58dba4d8b9f4178483000181": "Comic Book Hero - The Flash - Saving Lives", "54dc6f5a224c26032800005c": "Help the bookseller !", "54df2067ecaa226eca000229": "Gau\u00df needs help! (Sums  of a lot of numbers).", "55a3cb91d1c9ecaa2900001b": "Katastrophe!", "5431c3be70d4b064750003c4": "Live and Let Dice ...roll", "58db8dc3ac225602610000f2": "Infinite Diceworks: MeanMaxing your rolls", "574ac54ca3ebd6b322000bb3": "Fix the program to return Hello World message object", "563cc8c1a3895d7d30000049": "Reimplement Multiplication Part 1", "5723b111101f5f905f0000a5": "Parallel resistors", "58dba2e499abd416c9000166": "Total Resistance in  a Parallel Circuit", "52b7ed099cdc285c300001cd": "Sum of Intervals", "57feb00f08d102352400026e": "Airport Arrivals/Departures - #1", "5641275f07335295f10000d0": "Split The Bill", "5516ab668915478845000780": "Do you speak retsec?", "58db956196bc137740000bdd": "Hello... Everyone!", "58db95e7091c114391000040": "Calculate Compound Annual Growth Rate of an investment", "58d298e5cbc278e6d8000005": "How much will the apples cost?", "5864152183f7e6e834000160": "All Star Code Challenge #5", "58da7ae9b340a2440500009c": "Point in a unit circle", "55cb0597e12e896ab6000099": "Arithmetic sequence -  sum of n elements", "52dd72494367608ac1000416": "Prime Numbers", "573acc8cffc3d13f61000533": "Rigged Dice", "589e2af835999cbe2f000229": "Magic Dice: Who wins?", "58223370aef9fc03fd000071": "Dashatize it", "54809175ab03a2cecb000ae4": "Dice Rolling", "58dabca7ce77a12dbd00000f": "Highest power of 2 that evenly divides a number", "5590961e6620c0825000008f": "Case Swapping", "574bd867d277832448000adf": "Master of Files ", "5641c3f809bf31f008000042": "Formatting decimal places #1", "5356ad2cbb858025d800111d": "Name Array Capping", "57faf32df815ebd49e000117": "Exclamation marks series #5: Remove all exclamation marks from the end of words", "56c19316e8b139dff60006da": "Capitalize first letter of a string", "58bd04d923fee9fd95000035": "One Line Task: Paint The Walls Of Office", "559f3e20f4f29869cf0000ea": "Sort with Arrow Functions", "580a4734d6df748060000045": "Sorted? yes? no? how?", "588a7d45019c42be61000009": "Interweaving strings and removing digits", "56536e45bd4717003a000056": "Convert number to  sequence of bits", "55d38b959f9c33f3fb00007d": "The Coins of Ter | Round to the Next N", "55d1d6d5955ec6365400006d": "Round up to the next multiple of 5", "5701e43f86306a615c001868": "Credit card issuer checking", "56f54d45af5b1fec4b000cce": "Valid HK Phone Number", "5729c30961cecadc4f001878": "Sorted Union", "56a24b4d9f3671584d000039": "Are there doubles?", "56951add53eccacf44000030": "Doggy Daycare", "56dd927e4c9055f8470013a5": "Thinking & Testing : Sport Star", "56d949281b5fdc7666000004": "Thinking & Testing : Uniq or not Uniq", "56de38c1c54a9248dd0006e4": "Thinking & Testing : Falsetto Rap Concert", "567fe8b50c201947bc000056": "Regexp Basics - is it IPv4 address?", "559760bae64c31556c00006b": "Number climber", "58b635903e78b34958000056": "Simple Fun #172: Count Number", "546f922b54af40e1e90001da": "Replace With Alphabet Position", "52829c5fe08baf7edc00122b": "Number Of Occurrences", "5886dea04703f1712d000051": "Simple Fun #26: Weak Numbers", "571c128782661cdcca000932": "Dice roll - D&D #1", "57df83328a8b8d004600039a": "myjinxin's Fairy tales #005 : The little match girl ", "56d9c274c550b4a5c2000d92": "Thinking & Testing : Math of Middle school", "56ee0448588cbb60740013b9": "Thinking & Testing : Retention and discard", "56eccc08b9d9274c300019b9": "Thinking & Testing : Report about something", "56eee006ff32e1b5b0000c32": "Thinking & Testing : Retention and discard II", "589d1e88e8afb7a85e00004e": "Simple Fun #113: Number Increasing", "5894017082b9fb62c50000df": "Simple Fun #69: Are Equally Strong?", "5886cab0a95e17e61600009d": "Simple Fun #21: Number Of Clans", "55e86e212fce2aae75000060": "Integers: Recreation Two", "58a66c208b88b2de660000c3": "Simple Fun #136: Missing Values", "5639302a802494696d000077": "Working with Dictionaries", "5886c6b2f3b6ae33dd0000be": "Simple Fun #20: First Reverse Try", "5886d35d4703f125a6000008": "Simple Fun #22: Is Smooth?", "5886f3713a111b620f0000dc": "Simple Fun #28: Html End Tag By Start Tag", "58870402c81516bbdb000088": "Simple Fun #30:  Strings  Construction", "58881b859ab1e053240000cc": "Simple Fun #41:  Elections Winners", "58485a43d750d23bad0000e6": "Fizz Buzz Cuckoo Clock", "586ec0b8d098206cce001141": "Thinkful - List and Loop Drills: Inverse Slicer", "58ad230ce0201e17080001c5": "Simple Fun #156: Rotate Paper By 180 Degrees", "58b6c403a38abaaf6c00006b": "Simple Fun #175: Same Encryption", "58ad29bc4b852b14a4000050": "Simple Fun #157: Counting Triangles", "5884731139a9b4b7a8000002": "Simple Fun #18: Candles", "58846d50f54f021d90000012": "Simple Fun #17: Rounders", "58846b46f4456a8919000025": "Simple Fun #16: Apple Boxes", "588463cae61257e44600006d": "Simple Fun #13: Magical Well", "5884615cbd573356ab000050": "Simple Fun #12: Count Sum of Two Representions", "58845a92bd573378f4000035": "Simple Fun #11: Swap Adjacent Bits", "5886dbc685d5788715000071": "Simple Fun #25: Comfortable Numbers", "5877e7d568909e5ff90017e6": "How many numbers III?", "58c8a41bedb423240a000007": "Simple Fun #198: Cake Slice", "57efa1a2108d3f73f60000e9": "Shaving the Beard", "56896f078dcf3e886c000067": "Generate HTML links", "582cb3a637c5583f2200005d": "Disagreeable ascii", "57e8f757085f7c7d6300009a": "Holiday II - Plane Seating", "56a24b309f3671608b00003a": "Dad is Commatose", "56b12e3ad2387de332000041": "Greatest Difference", "56ae72854d005c7447000023": "Simple template", "5676f07029da352ba2000065": "Largest prime number containing n digit", "56a28c30d7eb6acef700004d": "Perfect Number Verifier", "54fb853b2c8785dd5e000957": "Chain me", "556196a6091a7e7f58000018": "Largest pair sum in array", "5750699bcac40b3ed80001ca": "Match My Husband", "57d147bcc98a521016000320": "Pillow on the Fridge", "58844a13aa037ff143000072": "Simple Fun #7: Will You?", "589b1c15081bcbfe6700017a": "Driving School Series #2", "56b22765e1007b79f2000079": "Narcissistic Numbers ", "57bec3bc5640aa5f3f00003e": "Currency Matrix Generator", "5782a87d9fb2a5e623000158": "Time Degrees", "577c349edf78c178a1000108": "Xmas Tree", "573b216f5328ffcd710013b3": "Jacob's Weight Loss Program", "564d398e2ecf66cec00000a9": "Which triangle is that?", "5866f10311ceec6ac10001e8": "All Star Code Challenge #31", "56fe9dbb69510b2ff8000fb3": "SpeedCode #1 - Getters and Setters in Object Literals", "5866e6992e8d9cdbcd00040a": "All Star Code Challenge #28", "584c7b1e2cb5e1a727000047": "Hello World - Without Strings", "56ec6016a9dfe3346e001242": "Geometric Mean II", "56ebcea1b9d927f9bf000544": "Geometric Mean  I", "57b2e428d24156b312000114": "Find the volume of a Cone.", "588805ca44c7e8c3a100013c": "Simple Fun #35:  Different Squares", "5886da134703f125a6000033": "Simple Fun #24: Pages Numbering with Ink", "58981e716551af31b100063f": "Simple Fun #101: Regular Months", "58880c6e79a0a3e459000004": "Simple Fun #37:  House Numbers Sum", "588810c99fb63e49e1000606": "Simple Fun #38:  House Of Cats", "588820169ab1e053240000e0": "Simple Fun #42: Are Similar?", "58c8a6daa7f31a623200016a": "Simple Fun #199: Pass The Bill", "58884e352ffea6d2f8000082": "Simple Fun #48: Higher Version", "588854201361435f5e0000bd": "Simple Fun #50: Array Conversion", "588856a82ffea640c80000cc": "Simple Fun #51: Array Previous Less", "5888445107a0d57711000032": "Simple Fun #45: New Numeral System", "5893e0c41a88085c330000a0": "Simple Fun #63: Shape Area", "58a6742c14b042a042000038": "Simple Fun #137: S2N", "58b8db810f40ea7788000126": "Simple Fun #179: Fraction", "5884658d02accbd0a7000039": "Simple Fun #14: Line Up", "58842a2b4e8efb92b7000080": "Simple Fun #5: Knapsack Light", "58844f1a76933b1cd0000023": "Simple Fun #8: Kill K-th Bit", "588431bb76933b84520000d3": "Simple Fun #6: Is Infinite Process?", "588425ee4e8efb583d000088": "Simple Fun #4: Phone Call", "56047bb6bcd785ce75000069": "Digital Synesthesia", "57af26297f75b57d1f000225": "Truncate a string!", "544047f0cf362503e000036e": "Find heavy ball - level: novice", "5515395b9cd40b2c3e00116c": "Linear Regression of Y on X", "55c3026406402936bc000026": "Insert Dashes 2", "576a527ea25aae70b7000c77": "Statistics in Kata 2: AND case - Ball bags", "57102bbfd860a3369300089c": "AD2070: Help Lorimar troubleshoot his robots-  ultrasonic distance analysis", "57555810be106b613c000115": "Regex Ninja: Unique Digits", "525b71926080a49789000185": "Normally Distributed Random Number Generator", "575eac1f484486d4600000b2": "Statistics in Kata 1: OR case - Unfair dice", "5708ccb0fe2d01677c000565": "Mean, Variance and Standard Deviation of a  Probability Distribution for Discrete Variables.", "5266fba01283974e720000fa": "Calculate Variance", "58d9b332ac20339ecd00015c": "Recursive Ninja: Warlords edition", "583ed487ee36e2a8d20000e8": "Recursive Ninja", "5522ebbd20cc1cf7980014e7": "Vasya and Book", "584acbee7d22f84dc80000e2": "Convert Improper Fraction to Mixed Number", "5313b713bb244a0eb20001fe": "Number-like counter", "55aeee88ecebc5c9230000a0": "Iterator Basics", "5819ba1e73b986d4160004f7": "Authenticate a list of usernames", "57ab1f7cbb9944a7860002a6": "Noye's Fludde", "5572392fee5b0180480001ae": "Keypad horror", "5805f0663f1f9c49be00011f": "Birthday II - Presents", "56523ec6fc8ac62677000005": "Create sequence containing all allowed characters", "588e68aed4cff457d300002e": "Turn the Mars rover to take pictures", "57b4dd38d2a31c75f7000299": "Make the small words big!", "53f211b159c3fcec3d000efa": "Left$   and   Right$", "56562b12044fa538b0000010": "Image Files Only", "564e21ba7cd824845b000097": "Knight vs Bishop", "57e1857d333d8e0f76002169": "Loose Change!", "55e7d9d63bdc3caa2500007d": "Satisfying numbers", "547336f44481cf5ecc000dde": "Next birth-day of the week finder", "55efee33bd91ae75ac00003c": "htmlify my text", "563d54a7329a7af8f4000059": "Put a Letter in a Column", "57d06663eca260fe630001cc": "Olympic Rings", "580ed88494291dd28c000019": "Sorting Poker", "528d9adf0e03778b9e00067e": "Find the Mine!", "58b8cc7e8e7121740700002d": "Simple Fun #177: Rank Of Element", "589a8d9b729e7abd9a0000ed": "Simple Fun #105: Rectangles", "58989a079c70093f3e00008d": "Cartesian neighbors", "588422ba4e8efb583d00007d": "Simple Fun #3: Late Ride", "55f416b2019f552cb0000086": "Color of the moment", "568f9d15bb0d0bf2a8000009": "Can you test it for me?", "558aa460dcfb4a94c40001d7": "Fuel economy converter (mpg  <-> L/100 km)", "55da49c166949c319200003e": "Basic method", "57729a09914da60e17000329": "What time is it?", "57f12b4d5f2f22651c00256d": "Array Info", "58899594b832f80348000122": "Simple Fun #55: Cyclic String", "5868b2de442e3fb2bb000119": "Closest and Smallest", "58ce88427e6c3f41c2000087": "Am I safe to drive?", "55a9c0994cb7e284d500005e": "Implementing a Queue", "5716955a794d3013d00013f9": "The unknown but known variables: Addition", "58c21c4ff130b7cab400009e": " Simple Fun #195: Guess Hat Color", "56347fcfd086de8f11000014": "Euler's method for a first-order ODE", "55d5f550f0f026f7de00000b": "Let them bounce", "5772ded6914da62b4b0000f8": "Palindrome Pairs", "5579906f2f0c0d0766000127": "Holiday Array Repair", "57366eaae7f8d2df290003e8": "UniDecoder", "57cd273ee35eb97735000004": "Isn't that a letter too?", "567de72e8b3621b3c300000b": "Regexp Basics - is it a letter?", "563c8540d50eb20bab00009a": "Make techno.", "578597a122542a7d24000018": "Happy numbers to the n power", "57470efebf81fea166001627": "noobCode 03: CHECK THESE LETTERS... see if letters in \"String 2\" are present in \"String 1\"", "544e2c60908f2da03600022a": "Convert between radians and degrees", "52a0849a852a854d050005f4": "Operator overload ?", "579387dc7cb7a1e592000112": "Pokemon Go", "55ea5304685da2fb40000018": "heggeleggleggo", "559f35bde66a7250f60000c9": "Sum with Arrows", "56fe9a0c11086cd842000008": "Coding 3min: Father and Son", "532b4057484b0e58e8000766": "Use reduce() to calculate the sum of the values in an array", "572a428aca1f70dbab001318": "Smart Toaster", "57f59da8d3978bb31f000152": "Make Me Slow", "581ee0db1bbdd04e010002fd": "Floating-point Approximation (II)", "55807d36933247feff00002f": "Vasya and Plates", "565ce4ab24ef4aee6a000074": "String Matcher", "56426b4e971f01fd2f00005b": "Find the Square Root", "534d80775371ece88d0010b5": "isAN(value)", "57e17750621bca9e6f00006f": "Colored Hexes!", "5797bbb34be9127074000132": "Tetration", "5241de3d8d333fefe30006a1": "(Don't) Make Me Repeat Myself", "5645fda2956e462b5100005e": "Array arithmetic", "52f3a8e1f85fadcdf7001e31": "Factorial division", "54cb61619b30e88e44001048": "Run your String", "541db50c259d9c55c00007b9": "Node.js Intro", "57add740e298a7a6d500000d": "T.T.T.32: Count with your fingers", "561fe8dbd50efaa2e9000075": "Sparse array this is?", "58d8f800a1111a80f400021a": "Statistics 101: Coin Sampling", "569218bc919ccba77000000b": "Target Date", "5889a6b653ad4a22710000d0": "Simple Fun #59: Reverse On Diagonals", "5889ae4f7af7f99a9a000019": "Simple Fun #62: Draw Rectangle", "57057a035eef1f7e790009ef": "Chuck Norris II - One Punch", "5630d1747935943168000013": "Tally it up", "56bac4c34537cf1e270005a1": "Sorting Arrays ... wait, what?!", "56c6a67ed3702be0fc0017d8": "I need a lookup quick!", "5762592d784ead628a0000dd": "T.T.T.#5: Only you", "570e5d0b93214b1a950015b1": "Coding 3min : Special factor", "578e8fb075ffd1891e000a6a": "Milliseconds", "551115c5ce486ce707000487": "Hamming(7,4) code - Message encoding", "5624e574ec6034c3a20000e6": "Hamming Distance - Part 1: Binary codes", "5410c0e6a0e736cf5b000e69": "Hamming Distance", "58a6af7e8c08b1e9c40001c1": "Simple Fun #141: Hamming Distance", "581963edc929ba19e7000148": "The furthest distance of index", "568ff914fc7a40a18500005c": "Distance from the average", "58d4634b14286c0302000593": "Lychrel numbers", "5893f43b779ce54da4000124": "Simple Fun #67: Array Change", "5893fa478a8a23ef82000031": "Simple Fun #68: Palindrome Rearranging", "589433358420bf25950000b6": "Chess Fun #3: Chess Knight", "58956f5ff780edf4a70000a2": "Simple Fun #86: is Information Consistent?", "589a9792ea93aae1bf00001c": "Simple Fun #106: Is Thue Morse?", "589a9aadc4e27877cb000027": "Simple Fun #107: Company Bot Strategy", "58aa9662c55ffbdceb000101": "Simple Fun #149: Next Day Of Week", "589d237fdfdef0239a00002e": "Simple Fun #114: \"abacaba\"", "58a3c1f12f949e21b300005c": "Simple Fun #124: Lamps", "58aa8698ae929e1c830001c7": "Simple Fun #147: Find The Missing Tree", "58b63cb2b7d86adb650000b7": "Simple Fun #173: A Hero Go To The School", "58bccdf56f25ff6b6d00002f": "Simple Fun #181: Rounding", "58bcdc65f6d3b11fce000045": "Simple Fun #184: LCM from m to n", "58bf97cde4a5edfd4f00008d": "Simple Fun #189: Plant Doubling", "58841cb52a077503c4000015": "Simple Fun #2: Circle of Numbers", "57b68bc7b69bfc8209000307": "Average Scores", "58409435258e102ae900030f": "Parity bit - Error detecting code", "51f2b4448cadf20ed0000386": "Remove anchor from URL", "5389864ec72ce03383000484": "Autocomplete! Yay!", "58d64595a1111ab7df000049": "Detect my Konami code!", "54ca3e777120b56cb6000710": "Unary function chainer", "586538146b56991861000293": "If you can read this...", "57c6c2e1f8392d982a0000f2": "Histogram - V1", "58360d112fb0ba255300008b": "Now that's a crib!", "5834a44e44ff289b5a000075": "MTV Cribs", "5620281f0eeee479cd000020": "The Union Jack", "558db3ca718883bd17000031": "Complete The Pattern #15", "5592e5d3ede9542ff0000057": "Complete The Pattern #13", "559379505c859be5a9000034": "Complete The Pattern #14", "558ac25e552b51dbc60000c3": "Complete The Pattern #12", "5839c48f0cf94640a20001d3": "Land perimeter", "5575ff8c4d9c98bc96000042": "Complete The Pattern #8 - Number Pyramid", "525dfedb5b62f6954d000006": "Throwing Darts", "5650f1a6075b3284120000c0": "Checkered Board", "526233aefd4764272800036f": "Matrix Addition", "53dc08fa8a0c93229400023b": "Checkerboard Generation", "5714eb80e1bf814e53000c06": "How much hex is the fish", "580f6cbcfbf2bec47c000511": "Find Grid Position", "58694d1c2e8d9c6d9b000296": "Get all array elements except those with specified indexes", "55ae997d1c40a199e6000018": "Complete The Pattern #16", "5589ad588ee1db3f5e00005a": "Complete The Pattern #11 - Plus", "5579e6a5256bac65e4000060": "Complete The Pattern #9 - Diamond", "5340298112fa30e786000688": "Difference of 2", "55191f78cd82ff246f000784": "Wheel of Fortune", "563cb92e0996a4ac0b000042": "Numbers' Plus Pattern", "56582133c932d8239900002e": "Find Count of Most Frequent Item in an Array", "5581a7651185fe13190000ee": "Complete The Pattern #10 - Parallelogram", "5574940eae1cf7d520000076": "Complete The Pattern #6 - Odd Ladder", "5507309481b8bd3b7e001638": "Simple Maths Test", "565b3542af398bfb50000003": "Count strings in objects", "566b51166f88d7560c00001a": "Shuffle an Array", "557592fcdfc2220bed000042": "Complete The Pattern #7 - Cyclical Permutation", "55749101ae1cf7673800003e": "Complete The Pattern #5 - Even Ladder", "577d5ce442a8d81e790002b2": "Celebrity Baby Names", "55a5085c1a3d379fbb000062": "Slamming Lockers", "55a98fbbe9760cf5af00003f": "Pluck data from Wikipedia lists", "52a723508a4d96c6c90005ba": "99 Bottles of Beer", "5783d8f3202c0e486c001d23": "Convert an array of strings to array of numbers", "5861487fdb20cff3ab000030": "Esolang Interpreters #4 - Boolfuck Interpreter", "55e6f5e58f7817808e00002e": "A Rule of Divisibility by 7", "57d0329442e44e65e8000bb5": "Simple Encryption #3 - Turn The Bits Around", "57fb142297e0860073000064": "Exclamation marks series #13: Count the number of exclamation marks and question marks, return the product", "54fdadc8762e2e51e400032c": "String to integer conversion", "56f4ff45af5b1f8cd100067d": "Sort - one, three, two", "52d4678038644497e900007c": "Advanced Events", "52d3b68215be7c2d5300022f": "Simple Events", "52210226578afb73bd0000f1": "Game - Electrons around the cores", "52ae6b6623b443d9090002c8": "Guess The Gifts!", "525f00ec798bc53e8e00004c": "Secret knock", "52ad1db4b2651f744d000394": "How Many Reindeers?", "52afd1fe8f7c52a0e1000304": "Santa's Master Plan", "525988ee6021e918e6000dce": "None shall pass", "53c2a84a1dfa43a7e40005ba": "Lock and Key", "52af9d951f5a1298b2000170": "Christmas Day", "52a64cf14009fd59c6000994": "Holiday Shopping Priority Queue", "52755006cc238fcae70000ed": "Christmas tree", "53a3240ced8465f048000302": "Single-Use Tickets: Don't Let Anyone Sneak In!", "52b23340c65ea422b1000045": "Will the present fit?", "52a6b34e43c2484ac10000cd": "Naughty or Nice?", "52ab60b122e82a6375000bad": "Sort Santa's Reindeer", "52aeb2f3ad0e952f560005d3": "Sort the Gift Code", "52af7bf41f5a1291a6000025": "Milk and Cookies for Santa", "52b50a20fa0e77b304000103": "SantaClausable Interface", "52af0d380fcae83a560008af": "Only One Gift Per Child", "585eaef9851516fcae00004d": "Naughty or Nice?", "523c7fbb0d47a759580000e2": "Simple Time Bomb", "5784c89be5553370e000061b": "Product of Largest Pair", "57de78848a8b8df8f10005b1": "How much coffee do you need?", "57d532d2164a67cded0001c7": "Histogram - H1", "557341907fbf439911000022": "Complete The Pattern #3 (Horizontal Image of #2)", "5631213916d70a0979000066": "Number-Star ladder", "564f3d49a06556d27c000077": "Upturn Numeral Triangle", "55736129f78b30311300010f": "Complete The Pattern #4", "57ebdf944cde58f973000405": "Reverse Letters in Sentence ", "583989556754d6f4c700018e": "Show multiples of 2 numbers within a range", "58670300f04e7449290000e5": "Thinkful - List Drills: Longest word", "58ce8725c835848ad6000007": "Drying Potatoes", "51f9d3db4095e07f130001ee": "Compose functions (T Combinator)", "5298a7b37edba9043200047b": "Pipelining and composing functions", "525a5b2185a9a4f5670006c1": "How new Works", "52d56d9c6b02b2fa9a0006d9": "Write JavaScript's 'call' function using apply.", "53c7da8baf72924af8000405": "new with apply", "52e5e86b2ff32887280002e4": "Cylon Evolution", "558ccca75f511f2b0d0000f7": "Javascript from the Inside  #1 : Map", "557e508a47c7e9adf9000062": "JS Prototypes Module #1 - Object Prototypes", "55e8beb4e8fc5b7697000036": "Terminal Game #2", "56e20642ddeb0f4fac000344": "Array Mappings", "56aaf25213edd3a88a000002": "Zip it!", "5758a91bbd1fdd2033000947": "Argue the toss", "55c211cce1ef691d9b000061": "Javascript Mathematician", "56143efa9d32b3aa65000016": "Some Circles", "541b5694204d12573700101c": "Combinator Flip", "5258b272e6925db09900386a": "For the sake of argument", "529f32794a6db5d32a00071f": "Basic JS - Calculating averages", "52a4e42ce950ed50da000748": "Array intersect all", "5836ebe4f7e1c56e1a000033": "Interlace an arbitrary Number of Strings", "569260e1096a6545fb00004c": "PatternCraft  - Command", "5682e545fb263ecf7b000069": "PatternCraft - Decorator", "5682e72eb7354b2f39000021": "PatternCraft - State", "5682e809386707366d000024": "PatternCraft - Strategy", "577ad961ae2807182f000c29": "Count the Characters", "5682e646d5eddc1e21000017": "PatternCraft - Visitor", "56919e637b2b971492000036": "PatternCraft  - Adapter", "534fcca5edb124cfe6000f60": "Singleton Pattern", "57d7805cec167081a50014ac": "Spaghetti Code - #1 Easy", "5849169a6512c5964000016e": "Greatest Common Factor of an Array", "573e6831e3201f6a9b000971": "Training JS #41: Regular Expression--\"\\\"", "573fb9223f9793e485000453": "Training JS #42: Regular Expression--( ?: ), ( ?= ) and ( ?! )", "573975d3ac3eec695b0013e0": "Training JS #38: Regular Expression--\"^\",\"$\", \".\" and test()", "56fcc393c5957c666900024d": "Coding with Squared Strings", "585d8c8a28bc7403ea0000c3": "Find the unique string", "5700c9acc1555755be00027e": "All Inclusive?", "5862e0db4f7ab47bed0000e5": "Find The Unique", "570564e838428f2eca001d73": "Chuck Norris I - Push Ups", "57c7231c484cf9e6ac000090": "Adding values of arrays in a shifted way", "57d93978950d8486a3000def": "These aren't the numbers you're looking for! (Find a number by approximation)", "57ea70aa5500adfe8a000110": "Fold an array", "58184387d14fc32f2b0012b2": "Floating-point Approximation (I)", "58acfe4ae0201e1708000075": "Simple Fun #152: Invite More Women?", "5706be574f2c297a7b00060d": "Chuck Norris VI - Shopping with Chuck", "5853213063adbd1b9b0000be": "Street Fighter 2 - Character Selection", "573d11c48b97c0ad970002d4": "Training JS #40: Regular Expression--\"|\", \"[]\" and \"()\"", "573bca07dffc1aa693000139": "Training JS #39: Regular Expression--\"?\", \"*\", \"+\" and \"{}\"", "5735e39313c205fe39001173": "Training JS #37: Unlock new weapon---RegExp Object", "5735956413c2054a680009ec": "Training JS #36: methods of Math---kata author's lover:random()", "57353de879ccaeb9f8000564": "Training JS #35: methods of Math---log() and its family", "5733f948d780e27df6000e33": "Training JS #34: methods of Math---pow() sqrt() and cbrt()", "5733d6c2d780e20173000baa": "Training JS #33: methods of Math---max() min() and abs()", "5732d3c9791aafb0e4001236": "Training JS #32: methods of Math---round() ceil() and floor()", "572af273a3af3836660014a1": "Training JS #23: methods of arrayObject---push(), pop(), shift() and unshift()", "57308546bd9f0987c2000d07": "Training JS #28: methods of arrayObject---every() and some()", "573156709a231dcec9000ee8": "Training JS #30: methods of arrayObject---reduce() and reduceRight()", "5732b0351eb838d03300101d": "Training JS #31: methods of arrayObject---isArray() indexOf() and toString()", "5731861d05d14d6f50000626": "Training JS #29: methods of arrayObject---concat() and join()", "573023c81add650b84000429": "Training JS #27: methods of arrayObject---filter()", "572fdeb4380bb703fc00002c": "Training JS #26: methods of arrayObject---map()", "572df796914b5ba27c000c90": "Training JS #25: methods of arrayObject---reverse() and sort()", "572cb264362806af46000793": "Training JS #24: methods of arrayObject---splice() and slice()", "57284d23e81185ae6200162a": "Training JS #20: Methods of String object--charAt() charCodeAt() and fromCharCode()", "572ab0cfa3af384df7000ff8": "Training Time", "5729b103dd8bac11a900119e": "Training JS #21: Methods of String object--trim() and the string template", "5728203b7fc662a4c4000ef3": "Training JS #19: Methods of String object--toUpperCase() toLowerCase() and replace()", "57280481e8118511f7000ffa": "Training JS #18: Methods of String object--concat() split() and its good friend join()", "57277a31e5e51450a4000010": "Training JS #17: Methods of String object--indexOf(), lastIndexOf() and search()", "57274562c8dcebe77e001012": "Training JS #16: Methods of String object--slice(), substring() and substr()", "57256064856584bc47000611": "Training JS #15: Methods of Number object--toFixed(), toExponential() and toPrecision()", "57238ceaef9008adc7000603": "Training JS #14: Methods of Number object--toString() and toLocaleString()", "5722fd3ab7162a3a4500031f": "Training JS #13: Number object and  its properties", "5722b3f0bd5583cf44001000": "Training JS #12: loop statement --for..in and for..of", "5721c189cdd71194c1000b9b": "Training JS #11: loop statement --break,continue", "5721a78c283129e416000999": "Training JS #10: loop statement --for", "57216d4bcdd71175d6000560": "Training JS #9: loop statement --while and do..while", "572059afc2f4612825000d8a": "Training JS #8: Conditional statement--switch", "57202aefe8d6c514300001fd": "Training JS #7: if..else and ternary operator", "571f832f07363d295d001ba8": "Training JS #6:  Basic data types--Boolean  and conditional statements if..else", "571f1eb77e8954a812000837": "Training JS #5:  Basic data types--Object", "571effabb625ed9b0600107a": "Training JS #4:  Basic data types--Array", "571edea4b625edcb51000d8e": "Training JS #3:  Basic data types--String", "571edd157e8954bab500032d": "Training JS #2:  Basic data types--Number", "55a4f9afeffe4231090000d6": "Is integer safe to use?", "56dd9b84fe5754786f0014f7": "Implement Array.prototype.filter()", "57bfea4cb19505912900012c": "Points of Reflection", "5713bc89c82eff33c60009f7": "Freudian translator ", "5709bdd2f088096786000008": "noobCode 01: SUPERSIZE ME.... or rather, this integer! ", "577a6e90d48e51c55e000217": "Collatz Conjecture (3n+1)", "582e4c3406e37fcc770001ad": "ES6 string addition", "52adc142b2651f25a8000643": "Sleigh Authentication", "53844152aa6fc137d8000589": "A function within a function", "57faf7275c991027af000679": "Exclamation marks series #6: Remove n exclamation marks in the sentence from left to right", "58356a94f8358058f30004b5": "Drone Fly-By", "581331293788bc1702001fa6": "Framed Reflection", "58108b147d48fc36ba0000aa": "True Addition", "511f0fe64ae8683297000001": "Basic Training: Add item to an Array", "560ecf0cb040de130e00007d": "Grasshopper - Order of operations", "56fcfad9c7e1fa2472000034": "Evil or Odious", "57f22b0f1b5432ff09001cab": "Well of Ideas - Harder Version", "57f90a8d5cae44a9dc000091": "JS is Weird: Return a", "5803956ddb07c5c74200144e": "Age Range Compatibility Equation", "542ebbdb494db239f8000046": "What's up next?", "57238766214e4b04b8000011": "Simple Change Machine ", "580a094553bd9ec5d800007d": "Alan Partridge II - Apple Turnover", "582dafb611d576b745000b74": "For UFC Fans (Total Beginners): Conor McGregor vs George Saint Pierre", "560c31275c39c481c4000022": "Grasshopper - Shopping list", "570cc83df616a85944001315": "Count words", "5692a582cc22387ccf000017": "Configure package json for a node application", "560dab9f8b50f89fd6000070": "Grasshopper - Make change", "559ac78160f0be07c200005a": "Name Shuffler", "57080f21d531cd94950007eb": "Not so black box", "5720a1cb65a504fdff0003e2": "Find the Difference in Age between Oldest and Youngest Family Members", "571b6a4a7beb0a8ade0007a8": "Blood-Alcohol Content", "570597e258b58f6edc00230d": "Remove First and Last Character Part Two", "5703c093022cd1aae90012c9": "Be Concise IV - Index of an element in an array", "56d8ae9237123036d3001b54": "Grasshopper - Object syntax debug", "56f7f8215d7c12c0e7000b19": "Fun with ES6 Classes #1 - People, people, people", "56be025f9347a066c7000e4f": "Improving Math.round(x)", "557af9418895e44de7000053": "repeatIt", "57f6ecdfcca6e045d2001207": "Simple Comparison? ", "547c71fdc5b2b38db1000098": "\"this\" is a problem ", "55a14aa4817efe41c20000bc": "Classy Extentions", "58b1ae711fcffa34090000ea": "Killer Garage Door", "54dba07f03e88a4cec000caf": "Barking mad", "541629460b198da04e000bb9": "Last", "5302d846be2a9189af0001e4": "Welcome to the City", "5810085c533d69f4980001cf": "simple calculator ", "570669d8cb7293a2d1001473": "Chuck Norris VII - True or False? (Beginner)", "559f860f8c0d6c7784000119": "Are there any arrows left?", "58941fec8afa3618c9000184": "Simple Fun #74: Growing Plant", "589422431a88082ea600002a": "Simple Fun #75: Digit Degree", "589573e3f0902e8919000109": "Simple Fun #87: Shuffled Array", "58aa68605aab54a26c0001a6": "Simple Fun #144: Distinct Digit Year", "58a6841442fd72aeb4000080": "Simple Fun #138: Similarity", "571e9af407363dbf5700067c": "Filling an array (part 2)", "585355fb0877c420a2000009": "Christmas mission: Programmer's Christmas #3", "57f3996fa05a235d49000574": "Abundant Numbers", "58068479c27998b11900056e": "Sorting on planet Twisted-3-7", "5865a75da5f19147370000c7": "All Star Code Challenge #20", "51ba717bb08c1cd60f00002f": "Range Extraction", "55f89832ac9a66518f000118": "Simplifying multilinear polynomials", "52503c77e5b972f21600000e": "Largest Difference in Increasing Indexes", "58c47a95e4eb57a5b9000094": "What's Your Poison?", "543da2dd23ccbd1fb600048e": "Sign in/Sign out but sign it", "558c04ecda7fb8f48b000075": "Same Array?", "58d014421c694f71630000bc": "I Promise Not To Optimize", "5857d5cff37aeca1b100011c": "Snakes on a Plane - #2 Hard", "52e77537ba20f9d51f000486": "Combining Records", "5811aef3acdf4dab5e000251": "Mixbonacci", "5523b97ac8f5025c45000900": "The Enigma Machine - Part 1: The Plugboard", "5418a1dd6d8216e18a0012b2": "Validate Credit Card Number", "5287e858c6b5a9678200083c": "Does my number look big in this?", "526dad7f8c0eb5c4640000a4": "Vector class", "54d4c8b08776e4ad92000835": "What's a Perfect Power  anyway?", "56b5afb4ed1f6d5fb0000991": "Reverse or rotate?", "52b757663a95b11b3d00062d": "WeIrD StRiNg CaSe", "53907ac3cd51b69f790006c5": "Triangle type", "53f40dff5f9d31b813000774": "Recover a secret string from random triplets", "539a0e4d85e3425cb0000a88": "A Chain adding function", "58b2c5de4cf8b90723000051": "Guess Who?", "56f253dd75e340ff670002ac": "Composing squared strings", "54db15b003e88a6a480000b9": "Moduli number system", "56e7d40129035aed6c000632": "Easy Line", "5870fa11aa0428da750000da": "RoboScript #2 - Implement the RS1 Specification", "58708934a44cfccca60000c4": "RoboScript #1 - Implement Syntax Highlighting", "563f0c54a22b9345bf000053": "A disguised sequence (I)", "5834315e06f227a6ac000099": "Find twins", "56fb9da2fca8b9d7de00083f": "Find the Most Probable Sum Value or Values, in Rolling N-dice of n Sides", "56f852635d7c12fb610013d7": "Tracking Hits for Different Sum Values  for Different Kinds of Dice", "56f78a42f749ba513b00037f": "Probabilities for Sums in Rolling  Cubic Dice", "55703a2a52dd10501c000131": "Find the hobbits!", "57e45ce6a20449368f000092": "Dumb News: The Truth About CW Leaderboard !", "57157a7c2ad76331360002d0": "You're not my type", "57052ac958b58fbede001616": "#01 - Music theory - Minor/Major chords", "5866f0c8442e3fec050001ec": "All Star Code Challenge #30", "5872d59caa042821100001f8": "Transformation iteration", "5885424265fc9c38100017ef": "Playing with Sets : Sup/Sub", "588502f87987a27f690001f7": "Playing with Sets : Equal or Not ?", "5884e9ccf72916207900010f": "Playing with Sets : Complement", "5884d46015a70f6cd7000035": "Playing with Sets : Intersection", "58263b5fe7fb3848f500006f": "Snakes on a Plane - #1 Easy", "56d877bd97c0e584b2000053": "5x5 Tap Code", "57d7536d950d8474f6000a06": "The Wrong-Way Cow", "520d9c27e9940532eb00018e": "Duplicate Arguments", "55b95c76e08bd5eef100001e": "Counting in the  Amazon", "58a0697ef636cac09c000014": "Youtube URL", "58b42c98f4cdd62f45000c6e": "Running functions", "56efab15740d301ab40002ee": "Reducing by steps", "586c3070b98de0a57000012e": "Split camelcase", "54808e45ab03a2c8330009fb": "Secret Message", "52654ea8e218b83553000666": "Binary string", "56cafdabc8cfcc3ad4000a2b": "Binary scORe", "546ba103f0cf8f7982000df4": "Binary Calculator", "58cbfe2516341cce1e000001": "Jungerstein's Math Training Room: 1. How many zeros are at the end of n!! ? ", "5813257b0d8f13b683000171": "Swedish Personal Number", "56d904db9963e9cf5000037d": "Thinking & Testing: A and B?", "56fe17fcc25bf3e19a000292": "Disguised sequences (II)", "565c0fa6e3a7d39dee000125": "Braking well", "5282b48bb70058e4c4000fa7": "Convert A Hex String To RGB", "56e9e4f516bcaa8d4f001763": "Sum of numbers from 0 to N", "54521e9ec8e60bc4de000d6c": "Maximum  subarray sum", "5250a89b1625e5decd000413": "Flatten", "56cac350145912e68b0006f0": "up AND down", "581a52d305fe7756720002eb": "Is that a real phone number?  (British version)", "5898a751b2edc082f60005f4": "Tombola - validation", "55902c5eaa8069a5b4000083": "Dollars and Cents", "538835ae443aae6e03000547": "Functional Addition", "58cda88814e65627c5000045": "Write Number in Expanded Form - Part 2", "5842df8ccbd22792a4000245": "Write Number in Expanded Form", "5227129b316b56d50d0003b7": "Two levels arrays", "5263c5d011f4233c9d000561": "The Look and Say sequence", "515decfd9dcfc23bb6000006": "IP Validation", "5876e24130b45aaa0c00001d": "Esolang: Ticker", "531963f82dde6fc8c800048a": "Mystery function #1", "5894045b8a8a230d0c000077": "Simple Fun #70: Avoid Obstacles", "588fa08b1223c3ee42000062": "Create a password hashing function.", "57f891255cae44b2e10000c5": "Working With Coloured Numbers", "582c5382f000e535100001a7": "Parse a linked list from a string", "56f7996c5d7c121fd6000511": "Helper Functions and Recursion - Factorials, Permutations and Combinations", "56f29b3b75e340627a0009d5": "Recurrence by Recursion", "56c04261c3fcf33f2d000534": "Magnet particules in boxes", "58528e9e22555d8d33000163": "Minutes to Midnight", "5837fd7d44ff282acd000157": "Count the days!", "5857e8bb9948644aa1000246": "Can Santa save Christmas?", "563c823393305ec84e000048": "The Arpeggiator", "52f51502053125863c0009d7": "Optimal Taxi Fare", "58cf55c8c496ce2406000088": "The anti-optimizer", "58c2158ec7df54a39d00015c": "Simple Fun #193: Moment Of Time In Space", "583f158ea20cfcbeb400000a": "Make a function that does arithmetic!", "53368a47e38700bd8300030d": "Format a string of names like 'Bart, Lisa & Maggie'.", "56060ba7b02b967eb1000013": "Raise Me to The Third Power, Search My Divisors... .....Could You Believe that?", "5603a9585480c94bd5000073": "Sum and Rest the  Number with its Reversed and See What Happens", "57d0d4dcc98a52779400000b": "I guess this is a 7kyu kata #1: Search result", "5612ab201830eb000f0000c0": "Find the First Number in Having a Certain Number of Divisors I", "523f5d21c841566fde000009": "Array.diff", "56dc83840a10fee472000ca1": "Check if a number is a part of an arbitrary fibonacci sequence", "5512e5662b34d88e44000060": "Broken sequence", "536a9f94021a76ef0f00052f": "Recursive reverse string", "57bf7fae3b3164dcac000352": "Prime Sextuplets", "580777ee2e14accd9f000165": "The Skiponacci Sequence", "571654c3347e6533fa00186b": "Coding 3min : Parallel circuit", "5701bdd564730378ac000b88": "SpeedCode #4 \u00d7 Factory Functions #3 - Artefacts", "572269697297444c570008b9": "noobCode 02: TRICKY QUESTIONS ( primitives and operator precedence)", "56ff6a70e1a63ccdfa0001b1": "SpeedCode #2 - Array Madness", "588817db5fb13af14a000020": "Simple Fun #40:  Timed Reading", "540afbe2dc9f615d5e000425": "Validate Sudoku with size `NxN`", "5873b2010565844b9100026d": "Begin your day with a challenge, but an easy one.", "5886e082a836a691340000c3": "Simple Fun #27: Rectangle Rotation", "53db96041f1a7d32dc0004d2": "Did I Finish my Sudoku?", "551f37452ff852b7bd000139": "Binary Addition", "55b4d87a3766d9873a0000d4": "How Much?", "54d81488b981293527000c8f": "Sum of Pairs", "55908aad6620c066bc00002a": "Exes and Ohs", "56d67c7eecb553574900016c": "Midpoint inception", "560cd60f215a80dc00000049": "Expressive Objects", "588468f3b3d02cf67b0005cd": "Simple Fun #15: Addition without Carrying", "54e6533c92449cc251001667": "Unique In Order", "52bd8335d9aca8fb16000341": "How low can you go?", "5886faac54a7111c21000072": "Simple Fun #29:  Is MAC48 Address?", "581e1d083a4820eb4f00004f": "MOD 256 without the MOD operator", "5863f1c8b359c4dd4e000001": "Bulk up!", "58b6d8ba1697a5655d00009b": "Spanish Pirates off the Treasure Coast", "58953a5a41c97914d7000070": "Simple Fun #85: Polygon Perimeter", "57873ab5e55533a2890000c7": "Correct the time-string", "56fa93d36883c783ec0001d1": "\"console.log\" and the Lexical \"this\"", "58475cce273e5560f40000fa": "Square Roots: Approximation", "573182c405d14db0da00064e": "Consecutive k-Primes", "58a672d6426bf38be4000057": "Find the in-between point", "5829c2c8ef8d4474300000fa": "Triple Sorting - Sort & Stringify a list by 3 attributes", "582b0d73c190130d550000c6": "Square and Cubic Factors", "5850e85c6e997bddd300005d": "Square Roots: Simplify/Desimplify", "58733d9b0e9cf3a824000050": "Sum #1", "571ec274b1c8d4a61c0000c8": "Training JS #1: create your first JS function and print \"Hello World!\"", "55955a48a4e9c1a77500005a": "Say hello!", "52fff3f4aff4559096000917": "Default configuration", "58a848258a6909dd35000003": "Mastermind", "554f76dca89983cc400000bb": "Diophantine Equation", "561e9c843a2ef5a40c0000a4": "Gap in Primes", "5613d06cee1e7da6d5000055": "Steps in Primes", "58be35e9e36224a33f000023": "Tom's Allergies", "58ca7afc92ce34dfa50001fa": "Geohashing", "588453ea56daa4af920000ca": "Simple Fun #9: Array Packing", "526156943dfe7ce06200063e": "My smallest code interpreter (aka Brainf**k)", "577b9960df78c19bca00007e": "Find the nth Digit of a Number", "52a8f768a8ddc5070c000ca2": "Hash Hacker", "52608f5345d4a19bed000b31": "Chinese Numeral Encoder", "57f3c59fab9a91db28000027": "An 'orrible expression on 'is face", "57faf12b21c84b5ba30001b0": "Exclamation marks series #4: Remove all exclamation marks from sentence but ensure a exclamation mark at the end of string", "55c4eb777e07c13528000021": "Factorial tail", "55911ef14065454c75000062": "Multiplying numbers as strings", "553e8b195b853c6db4000048": "All unique", "54d558c72a5e542c0600060f": "Defuse the bombs!", "568dc014440f03b13900001d": "L1: Bartender, drinks!", "57642a90dee2da8dd3000161": "Arguments to Binary addition", "56bcaedfcf6b7f2125001118": "Safen User Input Part I - htmlspecialchars", "559f80b87fa8512e3e0000f5": "Are arrow functions odd?", "55d1d06def244b18c100007c": "Shop Inventory Manager", "517b2bcf8557c200b8000015": "Ninja vs Samurai: Attack + Block", "55d3b1f2c1b2f0d3470000a9": "Algorithmic predicament- Bug Fixing #9", "526dbd6c8c0eb53254000110": "Not very secure", "52dd912cf5073adca8000556": "A Banking Trouble", "561abc8d324728b06e000102": "Get the lost toString back", "547f1a8d4a437abdf800055c": "\"this\" is an other problem", "567ed5db4089538eea000010": "Nuclear Missile Manager", "52cd53948d673a6e66000576": "Breaking search bad", "54834b3559e638b39d0009a2": "\"this\" is an other solution", "5255892719453db6d2000a23": "Part 1: Evil Programming Government Restrictions", "52f3eeb274c7e693a600288e": "Inserting multiple strings into another string", "52a224d9e6d7a078200007b2": "The Desperate Rocket Scientist", "54cefc8c975ca613d4000d7f": "Greed", "5505552bd181b990d9000caf": "Deletion in an array", "5844a422cbd2279a0c000281": "Debug the functions EASY", "53d4eec01f1a9b3020000786": "Anonymous Returns.", "5434d8487abffa2f64000db6": "Who let the dogs out?", "52437f32636a67edb00002f7": "Honey to the Bee", "55d2603d506a40e162000056": "Reducing Problems - Bug Fixing #8", "52e9aa89b5acdd26d3000127": "Multiply characters", "514a677421607afc99000002": "getNames()", "56368f37d464c0a43c00007f": "Debug Basic Calculator", "53a257d83cacabb1fd0007d3": "Dangerous Dates", "55c7f90ac8025ebee1000062": "Failed Sort - Bug Fixing #4", "580e67ae22e42d797000015e": "Oh dear God! Is it bugged?", "55cd4ce59382498cbd000080": "Class conundrum - Bug Fixing #7", "558710234f02dcc4a8000005": "Fix my method", "57158fb92ad763bb180004e7": "Fix your code before the garden dies! ", "54fdaa4a50f167b5c000005f": "Unexpected parsing", "562e98755e9214cd2500003d": "A bugs trilogy: Episode 1 - \"Let Math.Random(); decide your future\"", "5708f682c69b48047b000e07": "Multiply the number", "56bc0fc65bdaeb46d800084a": "Math Object Madness", "56b71b1dbd06e6d88100092a": "Understanding closures - the basics", "526ec46d6f5e255e150002d1": "Closures and Scopes", "565d6d1696e154b51b000076": "JavaScript seems to be broken", "55e762cb8d89416b4300007c": "We need these data immediately!", "54f5c1b000ecc46de6000e4c": "Something 's fishy...", "5504b15fd181b977c30001d5": "Hoisting", "535d118ccdbf501816001101": "[JS] Parse integers in array", "5267faf57526ea542e0007fb": "Math Issues", "56aed32a154d33a1f3000018": "Fix the Bugs (Syntax) - My First Kata", "56f695399400f5d9ef000af5": "Is this my tail?", "526471539d52735c620000c6": "Broken Counter", "571d42206414b103dc0006a1": "Filling an array (part 1)", "52a47dd7e950edabfa000391": "Max Headroom and JavaScript style", "514aa0dc21607ae236000017": "Shifty Closures", "57e1e61ba396b3727c000251": "String cleaning", "5626b561280a42ecc50000d1": "Take a Number And Sum  Its Digits Raised To The Consecutive Powers And ....\u00a1Eureka!!", "57f609022f4d534f05000024": "Find the stray number", "560f8d41cf6e1fe5c900002e": "Find variable which breaks strict comparison!", "57a386117cb1f31890000039": "Parse float", "57ab2d6072292dbf7c000039": "Polish alphabet", "563c13853b07a8f17c000022": "Is the date today", "54fe05c4762e2e3047000add": "OOP: Object Oriented Piracy ", "56b0ff16d4aa33e5bb00008e": "Remove the time", "578a8a01e9fd1549e50001f1": "Is your period late?", "55a144eff5124e546400005a": "Classy Classes", "55e4c52ad58df7509c00007e": "Invalid Login - Bug Fixing #11", "56019d3b2c39ccde76000086": "Grasshopper - Terminal Game Turn Function", "514a3996d22ce03198000003": "Mr. Freeze", "56d6c333c9ae3fc32800070f": "Days in the year", "5612a42e746aa62de100001a": "Decibel Scale", "57078c56924f34f763000b3f": "Circular Objects #1 - Running around in circles", "53f9ee9f64b19d4b1d0001ed": "Hello Happy Codevarrior!", "56e6a330715e7221d9000a3b": "Do something \"n.times\" (Simplifying \"for\" loops)", "55a13556ca4a6d0ab4000003": "Lexical this", "56ff9b53140fcca90b000530": "SpeedCode #3 \u00d7 Fun with ES6 Classes #5 - Dogs and Classes", "56fe107569510b1b1b0002a5": "Shortest Code: Trypophobia", "56fe9ffbc25bf33fff000f7c": "Coding 3min: Trypophobia", "5263c6999e0f40dee200059d": "The observed PIN", "581c06b95cfa838603000435": "Scraping: Codewars Top 500 Users", "56e195d02bb22479e50016af": "Pernicious Numbers", "54fdbad0762e2e8a54000452": "Count word occurrences", "525481903700c1a1ff0000e1": "Function Cache", "5838e2978bbc04b7cd000008": "Ten Green Bottles", "577e9095d648a15b800000d4": "Evaluate a postfix expression", "52cda638f87aa2b141000935": "No 'Math' expression evaluator", "563c9f8073ccb1464d0000ae": "Special Scores For Words", "555a03f259e2d1788c000077": "RNA to Protein Sequence Translation", "527a6e602a7db3456e000a2b": "Extract Nested Object Reference", "5298ad7cd0f550269500051b": "Ziiiiip!", "57fa537f8b0760c7da000407": "Diamonds and Toads", "5708ef48fe2d018413000776": "Translate DNA  in 6 frames", "5388ff350b24c5e33000114c": "Baseball", "54e4aa695c8a4c4cee0004d4": "The once rollable dice", "574b1916a3ebd6e4fa0012e7": "They say that only the name is long enough to attract attention. They also said that only a simple Kata will have someone to solve it. This is a sadly story #1: Are they opposite?", "570bcd9715944a2c8e000009": "Coding 3min : Jumping Dutch act", "588711735ea0b4649e000001": "Simple Fun #34:  Numbers Grouping", "5888145122fe8620950000f0": "Simple Fun #39:  Switch Lights", "585aa2473d357ba593000213": "Is there a floating number here?", "561e1e2e6b2e78407d000011": "The Sum and The Rest of Certain Pairs of Numbers have to be Perfect Squares", "5662b14e0a1fb8320a00005c": "Naughty or Nice", "562dbaf65d4ab6685c0000ed": "Lorraine Wants to Win the TV Contest", "515dfd2f1db09667a0000003": "Get key/value pairs as arrays", "56bd9e4b0d0b64eaf5000819": "Combine objects", "56d6b7e43e8186c228000637": "Colour Association", "57cbb9e240e3024aae000b26": "2 DNAs sequences, coding for same protein? ", "53573877d5493b4d6e00050c": "Find the Capitals", "525fbff0594da0665c0003a3": "Conway's Game of Life", "52996b5c99fdcb5f20000004": "Instant Runoff Voting", "5384df88aa6fc164bb000e7d": "Don't Eat the Last Cake!", "53417de006654f4171000587": "Simple card game", "534ffb35edb1241eda0015fe": "Blackjack Scorer", "530045e3c7c0f4d3420001af": "Conway's Look and Say - Generalized", "52b013920b1d45c8b4000355": "Dreidel dreidel", "5502c9e7b3216ec63c0001aa": "Categorize New Member", "54d472e98776e4eb5b000215": "Musical Pitch Classes", "56bb01de0e8b29de50000b19": "What's wrong with these identifiers?", "53db4acb1f1a7dd68700040a": "Monads: The list monad", "546e416c8e3b6bf82f0002f2": "Binding within the List Monad", "5456812629ccbf311b000078": "Cycle a list of values", "56a1c63f3bc6827e13000006": "How many are smaller than me II?", "56a1c074f87bc2201200002e": "How many are smaller than me?", "52cf02cd825aef67070008fa": "Help the general decode secret enemy messages.", "5782b5ad202c0ef42f0012cb": "Simple Encryption #2 - Index-Difference", "52d1bd3694d26f8d6e0000d3": "Vigen\u00e8re Cipher Helper", "57f14afa5f2f226d7d0000f4": "Simple Encryption #4 - Qwerty", "526d42b6526963598d0004db": "Caesar Cipher Helper", "52223df9e8f98c7aa7000062": "ROT13", "52763db7cffbc6fe8c0007f8": "Tongues", "54729e48e1d2a369e00000d3": "Rotation Cipher Cracker", "542a823c909c97da4500055e": "Polybius square cipher - encode", "52eb114b2d55f0e69800078d": "Simple Substitution Cipher Helper", "581e014b55f2c52bb00000f8": "Decipher this! ", "56fb3cde26cc99c2fd000009": "ROT13 variant cipher", "576fac714bc84c312c0000b7": "Cryptography #1 - Viva Cesare", "535c1c80cdbf5011e600030f": "Keyword Cipher Helper", "57b2fc418491f9f092000029": "Number encrypting: decypher", "57aa3927e298a757820000a8": "Number encrypting: cypher", "54207f9677730acd490000d1": "Password Hashes", "565b9d6f8139573819000056": "Decoding a message", "573d498eb90ccf20a000002a": "The Barksdale Code", "5862fb364f7ab46270000078": "Basic Encryption", "5556136b7ebc7c786000005e": "Simple safecracking", "57241cafef90082e270012d8": "Keyword Cipher", "56ff1667cc08cacf4b00171b": "Help Suzuki count his vegetables....", "56fc55cd1f5a93d68a001d4e": "How many stairs will Suzuki climb in 20 years?", "5701800886306a876a001031": "Suzuki needs help lining up his students!", "571c1e847beb0a8f8900153d": "Help Suzuki rake his garden!", "57d4ecb8164a67b97c00003c": "Help Suzuki purchase his Tofu!", "5421c6a2dda52688f6000af8": "Function Composition", "583952fbc23341c7180002fd": "Coding Meetup #14 - Higher-Order Functions Series - Order the food", "583d972b8bbc0402cf000121": "Coding Meetup #16 - Higher-Order Functions Series - Ask for missing details", "583a8bde28019d615a000035": "Coding Meetup #15 - Higher-Order Functions Series - Find the odd names", "582dace555a1f4d859000058": "Coding Meetup #12 - Higher-Order Functions Series - Find GitHub admins", "582ba36cc1901399a70005fc": "Coding Meetup #11 - Higher-Order Functions Series - Find the average age", "582a53ed261c2af9d200018c": "Coding Meetup #10 - Higher-Order Functions Series - Create usernames", "5829ca646d02cd1a65000284": "Coding Meetup #9 - Higher-Order Functions Series - Is the meetup age-diverse?", "58291fea7ff3f640980000f9": "Coding Meetup #8 - Higher-Order Functions Series - Will all continents be represented?", "582887f7d04efdaae3000090": "Coding Meetup #7 - Higher-Order Functions Series - Find the most senior developer", "58287977ef8d4451f90001a0": "Coding Meetup #6 - Higher-Order Functions Series - Can they code in the same language?", "5828713ed04efde70e000346": "Coding Meetup #5 - Higher-Order Functions Series - Prepare the count of languages", "58279e13c983ca4a2a00002a": "Coding Meetup #2 - Higher-Order Functions Series - Greet developers", "5827bc50f524dd029d0005f2": "Coding Meetup #4 - Higher-Order Functions Series - Find the first Python developer", "5827acd5f524dd029d0005a4": "Coding Meetup #3 - Higher-Order Functions Series - Is Ruby coming?", "582746fa14b3892727000c4f": "Coding Meetup #1 - Higher-Order Functions Series - Count the number of JavaScript developers coming from Europe", "5411e3e95f3a7f6a7a0000e3": "Array#reduce", "540de1f0716ab384b4000828": "Unpacking Arguments", "53b2ff49b82af296ce001139": "Array.prototype.reverse()", "5413759479ba273f8100003d": "esreveR", "525a037c82bf42b9f800029b": "Partition On", "52195c9bb576caf14200007f": "Adding useful functional functionality to JavaScript arrays  ", "582041237df353e01d000084": "Fun with lists: filter", "58319f37aeb69a89a00000c7": "Fun with lists: reduce", "581e50555f59405743001813": "Fun with lists: anyMatch + allMatch", "5819081d056d4bdd410004f8": "Fun with lists: countIf", "581c867a33b9fe732e000076": "Fun with lists: lastIndexOf", "581c6b075cfa83852700021f": "Fun with lists: indexOf", "58259d9062cfb45e1a00006b": "Fun with lists: map", "525f277c7103571f47000147": "Finding an appointment", "52af1f150fcae8d33d0009bc": "Ho Ho Ho with Functions!", "52567c56cb6ac86b56000516": "Sentences with Functions", "5264603df227072e6500006d": "The Fruit Juice", "529a92d9aba78c356b000353": "Algebraic Lists", "527b3cd0492b6b15250060af": "Push a hash/an object into array", "53d045892578b1be8b0001c4": "Tail recursion with trampoline", "53223653a191940f2b000877": "Determining if a graph has a solution", "586640f739c5ab4f4c00022f": "Fun with trees: lists edition", "58381907f8ac48ae070000de": "Coding Meetup #13 - Higher-Order Functions Series - Is the meetup language-diverse?", "5244ab738978478c1800002e": "GPS Navigation", "5268acac0d3f019add000203": "Design a Simple Automaton (Finite State Machine)", "52ed326b8df6540e06000029": "Simple elevator", "52d43d5515be7cbc92000611": "Tree leaves at same level", "52ed80dfe7bf9ae61d000056": "Deep Freeze", "588a00ad70720f2cd9000005": "Simple Web Framework #1: Create  a basic router", "52859abdf8fc1b12e0000141": "Flatten a Nested Map", "53ad7224454985e4e8000eaa": "Dragon's Curve", "53ad69892a27079b34000bd9": "Ackermann Function ", "53a1eac7e0afd3ad3300008b": "Mutual Recursion", "56dbf59b0a10feb08c000227": "Moves in squared strings (IV)", "56dbeec613c2f63be4000be6": "Moves in squared strings (III)", "56f8fe6a2e6c0dc83b0008a7": "Be Concise III - Sum Squares", "56f4f7cfaf5b1f8cd100060e": "Be Concise II - I Need Squares", "56f3f6a82010832b02000f38": "Be Concise I - The Ternary Operator", "56dbe7f113c2f63570000b86": "Moves in squared strings (II)", "53ea07c9247bc3fcaa00084d": "Look and say numbers", "549cb9c0c36a02ce2e000156": "RPG dice roller", "527bbf9f8699010bf40006ee": "Functional Lists", "5259510fc76e59579e0009d4": "Did you mean ...?", "52af840e0b1d45d45f000078": "Definitely Naughty or Probably Nice?", "524ada2bdc2121b521000353": "The Captain's Distance Request", "525f3eda17c7cd9f9e000b39": "Calculating with Functions", "5269452810342858ec000951": "Coordinates Validator", "5509609d1dbf20a324000714": "Decimal to any Rational or Irrational Base Converter", "5239078120eeabe18f0000da": "Image Processing", "5296bc77afba8baa690002d7": "Sudoku Solver", "511ed4593ba69cba1a000002": "Wrapped Function", "578f8fa7deaed95f82000200": "JS 101 - 2.1", "5888514674b58e929a000036": "Simple Fun #49: Decipher", "52672d961283975bd70002b0": "The Prediction", "56caf4a1145912a5c4000b76": "Kata Impossible I - The Impossible Lottery", "574c51aa3e4ea6de22001363": "Sir , showMe  yourID ", "55e5fa3501fd9c3f4d000050": "Linked Lists - Merge Sort", "55e5253dcd20f821c400008e": "Linked Lists - Shuffle Merge", "56a194c4bd5032751e000029": "Is a Prime?", "57037ed25a7263ac35000c80": "Generate user links", "54f6e7a62e2c167e29000112": "Don't rely on luck HARDCORE", "5268af3872b786f006000228": "Don't rely on luck.", "515bb423de843ea99400000a": "PaginationHelper", "55e1d2ba1a3229674d000037": "Linked Lists - Front Back Split", "55e725b930957a038a000042": "Linked Lists - Recursive Reverse", "55e72695870aae78c4000026": "Linked Lists - Iterative Reverse", "55d9f257d60c5fd98d00001b": "Linked Lists - Remove Duplicates", "55d0c7ee7c0d30a12b000045": "Linked Lists - Insert Sort", "55da347204760ba494000038": "Linked Lists - Move Node", "55dd5386575839a74f0000a9": "Linked Lists - Alternating Split", "55d17ddd6d7868493e000074": "Linked Lists - Append", "581e476d5f59408553000a4b": "Fun with lists: length", "52f6be83172a8ba0be000342": "Reverse linked list", "5810d8ce2956d78698000032": "Find the K-th last element of a singly linked list", "58b8c94b7df3f116eb00005b": "Simple Fun #176: Reverse Letter", "52532cc8e9ea83b89b000008": "Hard Time Bomb", "557053e47a652a6060000064": "Age from DOB", "55cc33e97259667a08000044": "Linked Lists - Sorted Insert", "55e67e44bf97fa66900000a0": "Linked Lists - Sorted Intersect", "55e5d31bf7ca1e44980000a7": "Linked Lists - Sorted Merge", "589ace5eeef39faf49000061": "Simple Fun #111: Reverse Brackets", "55e7280b40e1c4a06d0000aa": "Best travel", "586c0909c1923fdb89002031": "Connect 4", "57f92db48b0760410a0001e7": "JS is Weird: Return fuelstar", "58663693b359c4a6560001d6": "Maze Runner", "534e01fbbb17187c7e0000c6": "Make a spiral", "58ade2233c9736b01d0000b3": "Password generator", "52f4261c95d6bff39a003096": "Maximum Contiguous Sum", "589dcba5e708ec509f000164": "Thinking & Testing: Sing a Song", "58af4ed8673e88a719000116": "Character limits: How long is your piece of string?", "57a62154cf1fa5b25200031e": "Alternate case", "57ae18c6e298a7a6d5000c7a": "Replace all items", "57a84137cf1fa5f9f80000d6": "Get list sum recursively", "58b57ae2724e3c63df000006": "Parse HTML/CSS Colors", "536602df5d0266e7b0000d31": "Morse Encoding", "55a5b91f5c7546e8420001d5": "Easiest Kata on Codewars", "58ac59d21c9e1d7dc5000150": "Cut array into smaller parts", "551614eb77dd9ee37100003e": "Batman Quotes", "530265044b7e23379d00076a": "Point in Polygon", "52423db9add6f6fc39000354": "Conway's Game of Life  - Unlimited Edition", "58a12162784e0cfe4700000d": "One Line Task: GCD Function", "57e2dd0bec7d247e5600013a": "Unflatten a list (Easy)", "566d5e2e57d8fae53c00000c": "Bingo Card", "52d2e2be94d26fc622000735": "Vigen\u00e8re Autokey Cipher Helper", "5270f22f862516c686000161": "Base64 Encoding", "526c7b931666d07889000a3c": "Befunge Interpreter", "586a1af1c66d18ad81000134": "Driving Licence", "586e6d4cb98de09e3800014f": "Vending Machine", "587136ba2eefcb92a9000027": "Snakes and Ladders", "53897d3187c26d42ac00040d": "Find whether there is a route between two nodes in a graph", "5594463eaf1701909c0000d4": "Sum ALL the arrays!", "57547f9182655569ab0008c4": "Recursive Replication", "576400f2f716ca816d001614": "Reduce My Fraction", "56d6b921c9ae3fd926000601": "Strings, strings, strings (Easy)", "574ad936a3ebd6b322000d19": "Binary Swap", "57882daf90b2f375280000ad": "Sum squares of numbers in list that may contain more lists", "5786f020e55533ebb7000153": "Deep List Reverse", "54ab259e15613ce0c8001bab": "self_converge", "5800580f8f7ddaea13000025": "Sum The Tree", "57e8c68c97a05990b10000c3": "Broken Collatz", "57f032307b45ef9c8f0001dd": "The real size of a multi-dimensional array", "57d5fed61a6282bf6f002a5f": "Magic Index", "57bd0abcb9799763f1001bdc": "Mad Max: Recursion Road", "582c297e56373f0426000098": "Convert a linked list to a string", "58817056e7a31c2ceb000052": "Esolang: InfiniTick", "587edac2bdf76ea23500011a": "Esolang: Tick", "589d33e4e0bbce5d6300061c": "The Modulo-3 Sequence", "588417e576933b0ec9000045": "Simple Fun #1: Seats in Theater", "56dbe0e313c2f63be4000b25": "Moves in squared strings (I)", "5806445c3f1f9c2f72000031": "Mean vs. Median", "576bb3c4b1abc497ec000065": "Compare Strings by Sum of Chars", "5502ddd734137e90af000f62": "Convert Time to String", "562f91ff6a8b77dfe900006e": "Going to the cinema", "57a93f93bb9944516d0000c1": "Interactive Dictionary", "523fba59cb9aaaef4f000135": "bit \"Wise\" #2: SHIFT-iness", "523878615b438c1c450003ba": "bit \"Wise\" #1: XOR-cism", "5277dc3ff4bfbd9a36000c1c": "ASCII85 Encoding & Decoding", "5252f11b401ddbf7090006c4": "Star Catalog Matching", "54d496788776e49e6b00052f": "Sum by Factors", "5889ab4928c08c08da00009b": "Simple Fun #61: Crossing Sum", "5896616336c4bad1c50000d7": "Area of an annulus", "52f2f5ecc807c0ab1a00001a": "Atbash Cipher Helper", "5361372e700d2a9627000cf1": "Kama Sutra Cipher Helper", "52f2f1ea12b5cbc66900300a": "Affine Cipher Helper", "57f7f71a7b992e699400013f": "Sort the columns of a csv-file", "57d9808b950d84e1a2000437": "Back to KinderGarten (eeeeeeasy)", "5551dc71101b2cf599000023": "Pizza pieces", "52abd4c941fcec78ce00002e": "How the Grinch Almost Ended Christmas", "551e949bbf4e52c106000aed": "Programmed mapper", "56a5491471b6f0d40a000001": "Clue - Esoteric programming #4", "56e67d6166d442121800074c": "\u25a0\u25a1 Pattern \u25a1\u25a0 : Wave", "56941f177c0a52aef50000a2": "Brainscrambler - Esoteric programming #3", "55df8bb5b435f0628a0000c8": "ABC - Esoteric programming #2", "55653db7b0075fe1f000000a": "5command - Esoteric programming #1", "55cc4912df1006e49c0000f4": "Hide from the Sun", "52aae14aa7fd03d57400058f": "Remove Zeros", "56f399b59821793533000683": "Sort deck of cards", "57fe864854685b1c420002e0": "Sorting Arrays", "5694d22eb15d78fe8d00003a": "Group in 10s", "57049a1946edc26dbc00074a": "Shortest Code: Symmetric Sort", "5705aeb041e5befba20010ba": "Coding 3min : Symmetric Sort", "52cb0b50c61b330f18000763": "Multi Level Sorting", "5326ef17b7320ee2e00001df": "Escape the Mines !", "55cacc3039607536c6000081": "Linked Lists - Insert Nth Node", "55befc42bfe4d13ab1000007": "Linked Lists - Get Nth Node", "55beec7dd347078289000021": "Linked Lists - Length & Count", "55be95786abade3c71000079": "Linked Lists - Push & BuildOneTwoThree", "583ea278c68d96a5fd000abd": "Coding Meetup #17 - Higher-Order Functions Series - Sort by programming language", "56fd862db0c52efd9e0018f9": "ACME factory needs your help", "57dd3a06eb0537b899000a64": "The 12 Days of Christmas", "589577f0d1b93ae32a000001": "Simple Fun #88: Sort By Height", "589631d24a7323d18d00016f": "Piano Kata, Part 2", "589273272fab865136000108": "Piano Kata, Part 1", "5868a68ba44cfc763e00008d": "Esolang Interpreters #3 - Custom Paintf**k Interpreter", "58678d29dbca9a68d80000d7": "Esolang Interpreters #2 - Custom Smallfuck Interpreter", "586dd26a69b6fd46dd0000c0": "Esolang Interpreters #1 - Introduction to Esolangs and My First Interpreter (MiniStringFuck)", "52094b0673c32d3fc5000065": "Imperfect Network #2 (out-of-order messages)", "513fa1d75e4297ba38000003": "flatten()", "52092a7cea29118405000027": "Imperfect Network #1 (duplicate messages)", "5268956c10342831a8000135": "Binary Tree Traversal", "55d459414bd7798fc5000081": "Invert binary tree", "52aebd2423b44356b8000578": "Valid Binary Christmas Tree", "55847fcd3e7dadc9f800005f": "Binary Tree Compare", "55b350026cc02ac1a7000032": "Convert integer to Whitespace format", "5668e3800636a6cd6a000018": "Ghostbusters (whitespace removal)", "5254620499cfe504bf0001c9": "Robby, the robot", "56b4af8ac6167012ec00006f": "Number Shortening Filter", "5511b2f550906349a70004e1": "Last digit of a large number", "55ab4f980f2d576c070000f4": "Playing on a chessboard", "583d10c03f02f41462000137": "The maximum sum value of ranges -- Simple version", "5896fc74b3ce5ae5fb00001d": "Computational Geometry 101: Perimeter and Area of an arbitrary shape (2D)", "5748838ce2fab90b86001b1a": "Area of a Square", "57d0089e05c186ccb600035e": "Check if  a triangle is an equable triangle!", "580a0347430590220e000091": "Find the area of the rectangle!", "537baa6f8f4b300b5900106c": "Area of a Circle", "5474be18b2bc28ff92000fbd": "Area of a Shape", "57da5365a82a1998440000a9": "You are a Cube!", "57aa218e72292d98d500240f": "Heron's formula", "5887a6fe0cfe64850800161c": "Largest Square Inside A Circle", "514a024011ea4fb54200004b": "Extract the domain name from a URL", "55aa075506463dac6600010d": "Integers: Recreation One", "54a2e93b22d236498400134b": "Multi-tap Keypad Text Entry on an Old Mobile Phone", "525f039017c7cd0e1a000a26": "Palindrome chain length", "544aed4c4a30184e960010f4": "Find the divisors! ", "5202ef17a402dd033c000009": "Title Case", "5541f58a944b85ce6d00006a": "Product of consecutive Fib numbers", "57fb09ef2b5314a8a90001ed": "Exclamation marks series #11: Replace all vowel to exclamation mark in the sentence", "57faece99610ced690000165": "Exclamation marks series #2: Remove all exclamation marks from the end of sentence", "526f35b9c103314662000007": "Binary Genetic Algorithms", "567b21565ffbdb30e3000010": "Genetic Algorithm Series - #5 Roulette wheel selection", "567b468357ed7411be00004a": "Genetic Algorithm Series - #4 Get population and fitnesses", "567d71b93f8a50f461000019": "Genetic Algorithm Series - #3 Crossover", "567b39b27d0a4606a5000057": "Genetic Algorithm Series - #2 Mutation", "567d609f1c16d7369c000008": "Genetic Algorithm Series - #1 Generate", "57f36495c0bb25ecf50000e7": "Sum of all the multiples of 3 or 5", "56b58d11e3a3a7cade000792": "Sexy Primes <3", "55e6125ad777b540d9000042": "Invalid Input - Error Handling #1", "589478160c0f8a40870000bc": "Area of an arrow", "5653935c09106259c000001a": "Random Number Generator", "5572f7c346eb58ae9c000047": "Complete The  Pattern #1 ", "56484848ba95170a8000004d": "Speed Control", "55733d3ef7c43f8b0700007c": "Complete The Pattern #2", "5506b230a11c0aeab3000c1f": "Deodorant Evaporator", "56214b6864fe8813f1000019": "Grasshopper - Bug Squashing", "55c90cad4b0fe31a7200001f": "String Templates - Bug Fixing #5", "55dc4520094bbaf50e0000cb": "Wilson primes", "56c22c5ae8b139416c00175d": "Job Matching #1", "545991b4cbae2a5fda000158": "Enumerable Magic - Does My List Include This?", "54598e89cbae2ac001001135": "Enumerable Magic #2 - True for Any?", "54598d1fcbae2ae05200112c": "Enumerable Magic #1 - True for All?", "545993ee52756d98ca0010e1": "Enumerable Magic #4 - True for None?", "56530b444e831334c0000020": "Determine offspring sex based on genes XX and XY chromosomes", "5601c5f6ba804403c7000004": "Localize The Barycenter of a Triangle", "565f5825379664a26b00007c": "Surface  Area and Volume of a Box", "57a5c31ce298a7e6b7000334": "Bin to Decimal", "56a25ba95df27b7743000016": "validate code with simple regex", "574c5075d27783851800169e": "Heads and Legs", "57096af70dad013aa200007b": "Logical calculator", "56a3f08aa9a6cc9b75000023": "Simple validation of a username with regex", "557b5e0bddf29d861400005d": "Miles per gallon to kilometers per liter", "55a75e2d0803fea18f00009d": "Find the Slope", "5763bb0af716cad8fb000580": "Count the number of cubes with paint on", "56c5847f27be2c3db20009c3": "Never visit a . . . !?", "5786f8404c4709148f0006bf": "Pole Vault Starting Marks", "559f3123e66a7204f000009f": "Take an Arrow to the knee, Functionally", "57cff961eca260b71900008f": "Is there a vowel in there?", "57613fb1033d766171000d60": "UEFA EURO 2016", "57b58827d2a31c57720012e8": "Fuel Calculator: Total Cost", "55eea63119278d571d00006a": "Smallest unused ID", "57a5015d72292ddeb8000b31": "Palindrome Strings", "56e2f59fb2ed128081001328": "Printing Array elements with Comma delimiters", "55f73f66d160f1f1db000059": "Grasshopper - Combine strings", "57a37f3cbb99449513000cd8": "Get number from string", "567bf4f7ee34510f69000032": "Regexp Basics - is it a digit?", "56a946cd7bd95ccab2000055": "Regex count lowercase letters", "57a77726bb9944d000000b06": "Price of Mangoes", "578b4f9b7c77f535fc00002f": "Constructing a car #1 - Engine and Fuel Tank", "586669a8442e3fc307000048": "Sortable Shapes", "53f1015fa9fe02cbda00111a": "Color Ghost", "55805ab490c73741b7000064": "makeBackronym", "55a14f75ceda999ced000048": "Template Strings", "55d32bff0cc60b2e7f000173": "Calculate Integral", "55c1d76ccc8f89fb2900009b": "Playing with cubes III", "568018a64f35f0c613000054": "Finish Guess the Number Game", "563a362e21001b1d16000049": "Reveal Spy Identity", "55c0ac142326fdf18d0000af": "Playing with cubes II", "55c0a79e20be94c91400014b": "Playing with cubes I", "56200d610758762fb0000002": "Grasshopper - Basic Function Fixer", "57cfdf34902f6ba3d300001e": "Sort and Star", "569e09850a8e371ab200000b": "Pre-FizzBuzz Workout #1", "55412f7a350768e824000154": "Let's do the laundry!", "566d5cf8001db71d7b000022": "Bingo Number Caller", "56a8f83d96d99a315a0000a0": "Happy Little Trees", "56407edf50bcc8f01d000023": "CollectionAssert Test", "578fdcfc75ffd1112c0001a1": "The Lazy Startup Office", "5702e2f380b8c86df3000003": "TDD Area Calculations", "582b079bbbbc74bed7000095": "Vectors #1", "57c1ab3949324c321600013f": "ToLeetSpeak", "5641a03210e973055a00000d": "Formatting decimal places #0", "56f3a1e899b386da78000732": "Parts of a list", "57d2807295497e652b000139": "Averages of numbers", "539ee3b6757843632d00026b": "Find the capitals", "55e2adece53b4cdcb900006c": "Tortoise racing", "5270d0d18625160ada0000e4": "Greed is Good", "5663f5305102699bad000056": "Maximum Length Difference", "573992c724fc289553000e95": "Find the smallest", "566fc12495810954b1000030": "Count the Digit", "55eeddff3f64c954c2000059": "Sum consecutives", "56a4872cbb65f3a610000026": "Rotate for a Max", "54d418bd099d650fa000032d": "Vampire Numbers", "5375f921003bf62192000746": "Word a10n (abbreviation)", "57814d79a56c88e3e0000786": "Simple Encryption #1 - Alternating Split", "520b9d2ad5c005041100000f": "Simple Pig Latin", "525e5a1cb735154b320002c8": "Triangular Treasure", "54b80308488cb6cd31000161": "Checking Groups", "54bf1c2cd5b56cc47f0007a1": "Counting Duplicates", "5648b12ce68d9daa6b000099": "Number of People in the Bus", "51b6249c4612257ac0000005": "Roman Numerals Decoder", "5226eb40316b56c8d500030f": "Pascal's Triangle", "54eb33e5bc1a25440d000891": "Square into Squares. Protect trees!", "588f3e0dfa74475a2600002a": "1's, 0's and wildcards", "583203e6eb35d7980400002a": "Count the smiley faces!", "57ed4cef7b45ef8774000014": "The Office II - Boredom Score", "586f6741c66d18c22800010a": "Sum of a sequence", "559ce00b70041bc7b600013d": "Financing Plan on Planet XY140Z-n", "52c4dd683bfd3b434c000292": "Catching Car Mileage Numbers", "539de388a540db7fec000642": "The Coupon Code", "5513795bd3fafb56c200049e": "Count by X", "555eded1ad94b00403000071": "Sum of the first nth term of Series", "57fa92b25c9910e7bc0001df": "Fac Recursion (Pest control  - find the bugs and fix them)", "55c933c115a8c426ac000082": "Switch/Case - Bug Fixing #6", "55c606e6babfc5b2c500007c": "Failed Filter - Bug Fixing #3", "55c423ecf847fbcba100002b": "Regex Failure - Bug Fixing #2", "5512a0b0509063e57d0003f5": "A + B", "57193694938fcdfe3a001dd7": "IPv4 Validator", "517b0f33cd023d848d000001": "Ninja vs Samurai: Strike", "566dc566f6ea9a14b500007b": "Filtering even numbers (Bug Fixes)", "563cf89eb4747c5fb100001b": "Remove the minimum", "558fc85d8fd1938afb000014": "Sum of two lowest positive integers", "56a5d994ac971f1ac500003e": "Consecutive strings", "5772382d509c65de7e000982": "Fibo akin", "57e5a6a67fbcc9ba900021cd": "Fun with trees: array to tree", "57591ef494aba64d14000526": "John and Ann sign up for Codewars", "57dd79bff6df9b103b00010f": "Fun with trees: is perfect", "57e5279b7cf1aea5cf000359": "Fun with trees: max sum", "58373ba351e3b615de0001c3": "The Book of Mormon", "569512b7707bc1b88200002f": "Recursion #2 - Fibonacci", "5694cb0ec554589633000036": "Recursion #1 - Factorial", "5264d2b162488dc400000001": "Stop gninnipS My sdroW!", "541af676b589989aed0009e7": "Counting Change Combinations", "5324945e2ece5e1f32000370": "Sum Strings as Numbers", "556e0fccc392c527f20000c5": "Fibonacci, Tribonacci and friends", "556deca17c58da83c00002db": "Tribonacci Sequence", "555615a77ebc7c2c8a0000b8": "Vasya - Clerk", "55035eb47451fb61c0000288": "Ookkk, Ok, O?  Ook, Ok, Ooo!", "54e320dcebe1e583250008fd": "Decimal to Factorial and Back", "586a514cc66d18807f0000a6": "Implement brute force protection", "552c028c030765286c00007d": "IQ Test", "550f22f4d758534c1100025a": "Directions Reduction", "564057bc348c7200bd0000ff": "A Rule of Divisibility by 13", "55a29405bc7d2efaff00007c": "Going to zero or to infinity?", "566543703c72200f0b0000c9": "Disease Spread", "56b27f35c616d3b889000043": "RunTime Compiler", "56bc5f83e8936f3d200009ac": "Basics 07: Calculate Sin(x) - too easy?", "54784a99b5339e1eaf000807": "Calculate the function f(x) for a simple linear sequence (Medium)", "57f6ad55cca6e045d2000627": "To square(root) or not to square(root)", "57a55c8b72292d057b000594": "Reversing Words in a String", "588e0f11b7b4a5b373000041": "Temperature analysis I", "559a28007caad2ac4e000083": "Perimeter of squares in a rectangle", "5508249a98b3234f420000fb": "First Variation on Caesar Cipher", "54c9fcad28ec4c6e680011aa": "Merged String Checker", "557f6437bf8dcdd135000010": "Large Factorials", "526a569ca578d7e6e300034e": "Base Conversion", "525f4206b73515bffb000b21": "Adding Big Numbers", "556b85b433fb5e899200003f": "Simple fraction to mixed number converter", "52bc74d4ac05d0945d00054e": "First non-repeating character", "55466989aeecab5aac00003e": "Rectangle into Squares", "576757b1df89ecf5bd00073b": "Build Tower", "5503013e34137eeeaa001648": "Give me a Diamond", "559536379512a64472000053": "Playing with passphrases", "52761ee4cffbc69732000738": "Good vs Evil", "54d7660d2daf68c619000d95": "Common Denominators", "57b06f90e298a7b53d000a86": "The Supermarket Queue", "56269eb78ad2e4ced1000013": "Find the next perfect square!", "56606694ec01347ce800001b": "Is this a triangle?", "566be96bb3174e155300001b": "Ball Upwards", "58635f1b2489549be50003f1": "Thinkful - Number Drills: Quadratic formula", "56445c4755d0e45b8c00010a": "Banker's Plan", "55b42574ff091733d900002f": "Friend or Foe?", "50654ddff44f800200000004": "Multiply"}