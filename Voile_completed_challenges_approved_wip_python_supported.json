{
  "5716ec6a794d30bd5f001a7e": "Coding 3min : Half it II",
  "5303229f1f5c12ef39000061": "Randomize Objects",
  "566859a83557837d9700001a": "Divisible Ints",
  "588809279ab1e0e17700002e": "Simple Fun #36:  Most Frequent Digit Sum",
  "58942f9175f2c78f4b000108": "Simple Fun #78: Build Palindrome",
  "589436311a8808bf560000f9": "Simple Fun #81: Digits Product",
  "538dc8eb8ca4a3d1c400088f": "isInt32(int, byteLength)",
  "58999425006ee3f97c00011f": "Driving School Series #1 ",
  "52c31f8e6605bcc646000082": "Two Sum",
  "580f1a22df91279f09000273": "Random Integers",
  "56f245a7e40b70f0e3000130": "Find The Minimum Number Divisible by Integers of an Array I",
  "5682e1082cc7862db5000039": "Regexp basics - parsing integers",
  "5314b3c6bb244a48ab00076c": "Luck check",
  "54d84dc118438a0eed000a42": "Integer to Musical Pitch Classes",
  "52ac7cad98d1981a840004fc": "Anything to integer",
  "58865bfb41e04464240000b0": "World Bits War",
  "58856a06760b85c4e6000055": "Bits Battle",
  "54d3bb4dfc75996c1c000c6d": "Midpoint Sum",
  "57f7e7617a28db2a2200021a": "Multiply list by integer (with restrictions)",
  "580751a40b5a777a200000a1": "Vowel one",
  "57161cb0b436cf0911000819": "Find the integer Partition of k-Length With Maximum or Minimum Value For Its Product Value",
  "5619dbc22e69620e5a000010": "When Sigma1 Function Has Equals Values For an Integer and Its Reversed One",
  "535e88e608035176670014b8": "Name That Integer",
  "5298961d9ce954d77b0003a6": "The range() function",
  "54d3eae3525c153b21000e3b": "String Integer Greater-than",
  "568f058bb74d73512500003f": "Big integers sum",
  "5302b069ad5217ce2d0000f1": "Random Sequence Generator",
  "538865ef0b24c5ce6a00070d": "intToBits(int, length)",
  "54e9554c92ad5650fe00022b": "Converting integer to currency format",
  "559e3224324a2b6e66000046": "Functions of Integers on Cartesian Plane",
  "58de2be7b4b74ca1c8000205": "Infinite Diceworks: MeanMaxing your rolls (Quantum Mechanically)",
  "55d2aee99f30dbbf8b000001": "Scoring Tests",
  "5417423f9e2e6c2f040002ae": "Digitize",
  "57efcb78e77282f4790003d8": "How many times should I go?",
  "57741d8f10a0a66915000001": "Integer Difference",
  "55b54be931e9ce28bc0000d6": "Sums of consecutive integers",
  "57eaec5608fed543d6000021": "Divide and Conquer",
  "55606aeebf1f0305f900006f": "Convert Integer to Binary",
  "5776600afc8cd670130000df": "T.T.T.12: Split integer",
  "5841f680c5c9b092950001ae": "Series of integers from m to n",
  "588e2a1ad1140d31cb00008c": "Pairs of integers from m to n",
  "588e27b7d1140d31cb000060": "Pairs of integers from 0 to n",
  "5899e054aa1498da6b0000cc": "Reverse and Invert",
  "563700da1ac8be8f1e0000dc": "Rearrange Number to Get its Maximum",
  "52fee0a131b8158492000120": "Argument Mapper",
  "58dd98fe8d29b0f30d0002bd": "Check your arguments",
  "56ed20a2c4e5d69155000301": "Scaling Squared Strings",
  "586988b82e8d9cdc520003ac": "Spy games -  rebuild your decoder",
  "55da6c52a94744b379000036": "Sum up the random string",
  "585a033e3a36cdc50a00011c": "Frequency sequence",
  "51fd6bc82bc150b28e0000ce": "No oddities here",
  "54e8c3e89e2ae6f4900005a1": "Add property to every object in array ",
  "525d9b1a037b7a9da7000905": "Javascript filter - 1",
  "57f75cc397d62fc93d000059": "Char Code Calculation",
  "57f759bb664021a30300007d": "Switcheroo",
  "53d2697b7152a5e13d000b82": "Making Copies",
  "570523c146edc287a50014b1": "Especially Joyful Numbers",
  "533c46b140aafec05b000d31": "Advanced Pig Latin",
  "558878ab7591c911a4000007": "Single Word Pig Latin",
  "53c94a82689f84c2dd00007d": "Integer to English",
  "52724507b149fa120600031d": "Write out numbers",
  "553a2461098c64ae53000041": "Wordify an integer",
  "574e4175ff5b0a554a00000b": "Convert Improper Fraction to Mixed Numeral",
  "53c2c3e78d298dddda000460": "Implementing Array.prototype.groupBy method",
  "58334362c5637ad0bb0001c2": "Filter valid romans",
  "536c738e49aa8b663b000301": "Unlimited Sum",
  "5632e12703e2037fa7000061": "Base64 Numeric Translator",
  "55efecb8680f47654c000095": "Hero's root",
  "54e2213f13d73eb9de0006d2": "Pair Zeros",
  "55c098aa8468f3b9030000f1": "Move Zeros",
  "563c39f92f7bed9572000011": "The Tale of Two Zeros",
  "557cffec8c3e8e55cc00010f": "Count number of zeros from 1 to N",
  "56c2acc8c44a3ad6e400050a": "Monkey's MATH 01:  How many \"ZERO\"s?",
  "58ad09d6154165a1c80000d1": "Simple Fun #154: Zero And One",
  "5600e00e42bcb7b9dc00014e": "Calculate the Harmonic Conjugated Point of a Triplet  of Aligned Points",
  "542c1a6b25808b0e2600017c": "Wind component calculation",
  "5307ff5b588fe6d7000000a5": "Once",
  "5351b35ebaeb67f9110012d2": "Can you keep a secret?",
  "5458d4d2cbae2a9438000389": "Lazily executing a function",
  "555a77eb65dd419534000016": "Sometimes",
  "57ab606e53ba3339da0000a2": "sum function",
  "554c8a93e466e794fe000001": "[Geometry A-1]  Locate point - to the right, to the left or on the vector?",
  "58417e9ab9c25c774500001f": "Missing Angle",
  "555f43d8140a6df1dd00012b": "Cartesian coordinates from degree angle",
  "53b7bc844db8fde50800020a": "Points On A Line",
  "56a313a0538696bcab000004": "A Crazy Robot? Who's is behind the scenes to make that?",
  "5307ce667da4f26b1600080d": "Arc Length",
  "56a13035eb55c8436a000041": "Volume of a cup",
  "556cebcf7c58da564a000045": "Number of Rectangles in a Grid",
  "554dc2b88fbafd2e95000125": "[Geometry A-2]: Length of a vector",
  "53222010db0eea35ad000001": "Slope of a Line",
  "55f1786c296de4952f000014": "Length of the line segment",
  "5899aa695401a83a5c0000c4": "Circle area inside square",
  "5841f4fb673ea2a2ae000111": "Series of integers from 0 to n",
  "535a69fb36973f2aad000953": "SMS Shortener",
  "54a91a4883a7de5d7800009c": "String incrementer",
  "52e1476c8147a7547a000811": "Regex Password Validation",
  "542106e2dda52658bf00001a": "Node.js Async I/O",
  "58bfa1ea43fadb41840000b4": "Simple Fun #190: Folding Paper",
  "58bcd27b7288983803000002": "Simple Fun #182: Happy \"g\"",
  "58c218efd8d3cad11c0000ef": "Simple Fun #194: Binary String",
  "58b8dccecf49e57a5a00000e": "Simple Fun #180: Repeat Adjacent",
  "5855777bb45c01bada0002ac": "Resistor Color Codes, Part 2",
  "57cf3dad05c186ba22000348": "Resistor Color Codes",
  "541a077539c5ef3fd8001133": "Typer.js",
  "52a112d9488f506ae7000b95": "Is Integer Array?",
  "52c7c425f80c299ac60003df": "Escape HTML Markup",
  "541a354c39c5efa5fa001372": "IP Address to Number",
  "51689e27fe9a00b126000004": "Format words into a sentence",
  "584ebd7a044a1520f20000d5": "Range function",
  "5558cc216a7a231ac9000022": "Find Duplicates ",
  "52c32ef251f31ae8f50000ae": "Differential Averaging",
  "52378b3ee72f21e1ea000045": "True Min",
  "530017aac7c0f49926000084": "Pluck",
  "558dd9a1b3f79dc88e000001": "Find The Duplicated Number in a Consecutive Unsorted List",
  "56ba8a9b022c16017d0001f3": "Sequence generator",
  "54d22119beeaaaf663000024": "254 shades of grey",
  "52c82f219e8eaab84700025f": "Array.prototype.splice(from, count, insertItems...)",
  "558298453b0435384e000101": "Product of two squares",
  "52ea928a1ef5cfec800003ee": "IPv4 to int32",
  "580878d5d27b84b64c000b51": "Sum of Triangular Numbers",
  "58d5b39b1c0402c5f7002e0d": "Bear the Freelancer",
  "58bcfe1e23fee9fd95000007": "Simple Fun #185: Revamp",
  "588475d575431d0a0e000023": "Simple Fun #19: Count Black Cells",
  "58dbb9b82f449e134a000119": "One Line Task: Making Pizza",
  "57d5e850bfcdc545870000b7": "Dead Ants",
  "54589f3b52756d34d6000158": "All, None & Any",
  "58c5577d61aefcf3ff000081": "Rail Fence Cipher:  Encoding and Decoding ",
  "58b38256e51f1c2af0000081": "Simple Fun #166: Best Match",
  "587731fda577b3d1b0001196": "CamelCase Method",
  "58dba4d8b9f4178483000181": "Comic Book Hero - The Flash - Saving Lives",
  "54dc6f5a224c26032800005c": "Help the bookseller !",
  "54df2067ecaa226eca000229": "Gau\u00df needs help! (Sums  of a lot of numbers).",
  "55a3cb91d1c9ecaa2900001b": "Katastrophe!",
  "5431c3be70d4b064750003c4": "Live and Let Dice ...roll",
  "58db8dc3ac225602610000f2": "Infinite Diceworks: MeanMaxing your rolls",
  "574ac54ca3ebd6b322000bb3": "Fix the program to return Hello World message object",
  "563cc8c1a3895d7d30000049": "Reimplement Multiplication Part 1",
  "5723b111101f5f905f0000a5": "Parallel resistors",
  "58dba2e499abd416c9000166": "Total Resistance in  a Parallel Circuit",
  "52b7ed099cdc285c300001cd": "Sum of Intervals",
  "57feb00f08d102352400026e": "Airport Arrivals/Departures - #1",
  "5641275f07335295f10000d0": "Split The Bill",
  "5516ab668915478845000780": "Do you speak retsec?",
  "58db956196bc137740000bdd": "Hello... Everyone!",
  "58db95e7091c114391000040": "Calculate Compound Annual Growth Rate of an investment",
  "58d298e5cbc278e6d8000005": "How much will the apples cost?",
  "5864152183f7e6e834000160": "All Star Code Challenge #5",
  "58da7ae9b340a2440500009c": "Point in a unit circle",
  "55cb0597e12e896ab6000099": "Arithmetic sequence -  sum of n elements",
  "52dd72494367608ac1000416": "Prime Numbers",
  "573acc8cffc3d13f61000533": "Rigged Dice",
  "589e2af835999cbe2f000229": "Magic Dice: Who wins?",
  "58223370aef9fc03fd000071": "Dashatize it",
  "54809175ab03a2cecb000ae4": "Dice Rolling",
  "58dabca7ce77a12dbd00000f": "Highest power of 2 that evenly divides a number",
  "5590961e6620c0825000008f": "Case Swapping",
  "574bd867d277832448000adf": "Master of Files ",
  "5641c3f809bf31f008000042": "Formatting decimal places #1",
  "5356ad2cbb858025d800111d": "Name Array Capping",
  "57faf32df815ebd49e000117": "Exclamation marks series #5: Remove all exclamation marks from the end of words",
  "56c19316e8b139dff60006da": "Capitalize first letter of a string",
  "58bd04d923fee9fd95000035": "One Line Task: Paint The Walls Of Office",
  "559f3e20f4f29869cf0000ea": "Sort with Arrow Functions",
  "580a4734d6df748060000045": "Sorted? yes? no? how?",
  "588a7d45019c42be61000009": "Interweaving strings and removing digits",
  "56536e45bd4717003a000056": "Convert number to  sequence of bits",
  "55d38b959f9c33f3fb00007d": "The Coins of Ter | Round to the Next N",
  "55d1d6d5955ec6365400006d": "Round up to the next multiple of 5",
  "5701e43f86306a615c001868": "Credit card issuer checking",
  "56f54d45af5b1fec4b000cce": "Valid HK Phone Number",
  "5729c30961cecadc4f001878": "Sorted Union",
  "56a24b4d9f3671584d000039": "Are there doubles?",
  "56951add53eccacf44000030": "Doggy Daycare",
  "56dd927e4c9055f8470013a5": "Thinking & Testing : Sport Star",
  "56d949281b5fdc7666000004": "Thinking & Testing : Uniq or not Uniq",
  "56de38c1c54a9248dd0006e4": "Thinking & Testing : Falsetto Rap Concert",
  "567fe8b50c201947bc000056": "Regexp Basics - is it IPv4 address?",
  "559760bae64c31556c00006b": "Number climber",
  "58b635903e78b34958000056": "Simple Fun #172: Count Number",
  "546f922b54af40e1e90001da": "Replace With Alphabet Position",
  "52829c5fe08baf7edc00122b": "Number Of Occurrences",
  "5886dea04703f1712d000051": "Simple Fun #26: Weak Numbers",
  "571c128782661cdcca000932": "Dice roll - D&D #1",
  "57df83328a8b8d004600039a": "myjinxin's Fairy tales #005 : The little match girl ",
  "56d9c274c550b4a5c2000d92": "Thinking & Testing : Math of Middle school",
  "56ee0448588cbb60740013b9": "Thinking & Testing : Retention and discard",
  "56eccc08b9d9274c300019b9": "Thinking & Testing : Report about something",
  "56eee006ff32e1b5b0000c32": "Thinking & Testing : Retention and discard II",
  "589d1e88e8afb7a85e00004e": "Simple Fun #113: Number Increasing",
  "5894017082b9fb62c50000df": "Simple Fun #69: Are Equally Strong?",
  "5886cab0a95e17e61600009d": "Simple Fun #21: Number Of Clans",
  "55e86e212fce2aae75000060": "Integers: Recreation Two",
  "58a66c208b88b2de660000c3": "Simple Fun #136: Missing Values",
  "5639302a802494696d000077": "Working with Dictionaries",
  "5886c6b2f3b6ae33dd0000be": "Simple Fun #20: First Reverse Try",
  "5886d35d4703f125a6000008": "Simple Fun #22: Is Smooth?",
  "5886f3713a111b620f0000dc": "Simple Fun #28: Html End Tag By Start Tag",
  "58870402c81516bbdb000088": "Simple Fun #30:  Strings  Construction",
  "58881b859ab1e053240000cc": "Simple Fun #41:  Elections Winners",
  "58485a43d750d23bad0000e6": "Fizz Buzz Cuckoo Clock",
  "586ec0b8d098206cce001141": "Thinkful - List and Loop Drills: Inverse Slicer",
  "58ad230ce0201e17080001c5": "Simple Fun #156: Rotate Paper By 180 Degrees",
  "58b6c403a38abaaf6c00006b": "Simple Fun #175: Same Encryption",
  "58ad29bc4b852b14a4000050": "Simple Fun #157: Counting Triangles",
  "5884731139a9b4b7a8000002": "Simple Fun #18: Candles",
  "58846d50f54f021d90000012": "Simple Fun #17: Rounders",
  "58846b46f4456a8919000025": "Simple Fun #16: Apple Boxes",
  "588463cae61257e44600006d": "Simple Fun #13: Magical Well",
  "5884615cbd573356ab000050": "Simple Fun #12: Count Sum of Two Representions",
  "58845a92bd573378f4000035": "Simple Fun #11: Swap Adjacent Bits",
  "5886dbc685d5788715000071": "Simple Fun #25: Comfortable Numbers",
  "5877e7d568909e5ff90017e6": "How many numbers III?",
  "58c8a41bedb423240a000007": "Simple Fun #198: Cake Slice",
  "57efa1a2108d3f73f60000e9": "Shaving the Beard",
  "56896f078dcf3e886c000067": "Generate HTML links",
  "582cb3a637c5583f2200005d": "Disagreeable ascii",
  "57e8f757085f7c7d6300009a": "Holiday II - Plane Seating",
  "56a24b309f3671608b00003a": "Dad is Commatose",
  "56b12e3ad2387de332000041": "Greatest Difference",
  "56ae72854d005c7447000023": "Simple template",
  "5676f07029da352ba2000065": "Largest prime number containing n digit",
  "56a28c30d7eb6acef700004d": "Perfect Number Verifier",
  "54fb853b2c8785dd5e000957": "Chain me",
  "556196a6091a7e7f58000018": "Largest pair sum in array",
  "5750699bcac40b3ed80001ca": "Match My Husband",
  "57d147bcc98a521016000320": "Pillow on the Fridge",
  "58844a13aa037ff143000072": "Simple Fun #7: Will You?",
  "589b1c15081bcbfe6700017a": "Driving School Series #2",
  "56b22765e1007b79f2000079": "Narcissistic Numbers ",
  "57bec3bc5640aa5f3f00003e": "Currency Matrix Generator",
  "5782a87d9fb2a5e623000158": "Time Degrees",
  "577c349edf78c178a1000108": "Xmas Tree",
  "573b216f5328ffcd710013b3": "Jacob's Weight Loss Program",
  "564d398e2ecf66cec00000a9": "Which triangle is that?",
  "5866f10311ceec6ac10001e8": "All Star Code Challenge #31",
  "56fe9dbb69510b2ff8000fb3": "SpeedCode #1 - Getters and Setters in Object Literals",
  "5866e6992e8d9cdbcd00040a": "All Star Code Challenge #28",
  "584c7b1e2cb5e1a727000047": "Hello World - Without Strings",
  "56ec6016a9dfe3346e001242": "Geometric Mean II",
  "56ebcea1b9d927f9bf000544": "Geometric Mean  I",
  "57b2e428d24156b312000114": "Find the volume of a Cone.",
  "588805ca44c7e8c3a100013c": "Simple Fun #35:  Different Squares",
  "5886da134703f125a6000033": "Simple Fun #24: Pages Numbering with Ink",
  "58981e716551af31b100063f": "Simple Fun #101: Regular Months",
  "58880c6e79a0a3e459000004": "Simple Fun #37:  House Numbers Sum",
  "588810c99fb63e49e1000606": "Simple Fun #38:  House Of Cats",
  "588820169ab1e053240000e0": "Simple Fun #42: Are Similar?",
  "58c8a6daa7f31a623200016a": "Simple Fun #199: Pass The Bill",
  "58884e352ffea6d2f8000082": "Simple Fun #48: Higher Version",
  "588854201361435f5e0000bd": "Simple Fun #50: Array Conversion",
  "588856a82ffea640c80000cc": "Simple Fun #51: Array Previous Less",
  "5888445107a0d57711000032": "Simple Fun #45: New Numeral System",
  "5893e0c41a88085c330000a0": "Simple Fun #63: Shape Area",
  "58a6742c14b042a042000038": "Simple Fun #137: S2N",
  "58b8db810f40ea7788000126": "Simple Fun #179: Fraction",
  "5884658d02accbd0a7000039": "Simple Fun #14: Line Up",
  "58842a2b4e8efb92b7000080": "Simple Fun #5: Knapsack Light",
  "58844f1a76933b1cd0000023": "Simple Fun #8: Kill K-th Bit",
  "588431bb76933b84520000d3": "Simple Fun #6: Is Infinite Process?",
  "588425ee4e8efb583d000088": "Simple Fun #4: Phone Call",
  "56047bb6bcd785ce75000069": "Digital Synesthesia",
  "57af26297f75b57d1f000225": "Truncate a string!",
  "544047f0cf362503e000036e": "Find heavy ball - level: novice",
  "5515395b9cd40b2c3e00116c": "Linear Regression of Y on X",
  "55c3026406402936bc000026": "Insert Dashes 2",
  "576a527ea25aae70b7000c77": "Statistics in Kata 2: AND case - Ball bags",
  "57102bbfd860a3369300089c": "AD2070: Help Lorimar troubleshoot his robots-  ultrasonic distance analysis",
  "57555810be106b613c000115": "Regex Ninja: Unique Digits",
  "525b71926080a49789000185": "Normally Distributed Random Number Generator",
  "575eac1f484486d4600000b2": "Statistics in Kata 1: OR case - Unfair dice",
  "5708ccb0fe2d01677c000565": "Mean, Variance and Standard Deviation of a  Probability Distribution for Discrete Variables.",
  "5266fba01283974e720000fa": "Calculate Variance",
  "58d9b332ac20339ecd00015c": "Recursive Ninja: Warlords edition",
  "583ed487ee36e2a8d20000e8": "Recursive Ninja",
  "5522ebbd20cc1cf7980014e7": "Vasya and Book",
  "584acbee7d22f84dc80000e2": "Convert Improper Fraction to Mixed Number",
  "5313b713bb244a0eb20001fe": "Number-like counter",
  "55aeee88ecebc5c9230000a0": "Iterator Basics",
  "5819ba1e73b986d4160004f7": "Authenticate a list of usernames",
  "57ab1f7cbb9944a7860002a6": "Noye's Fludde",
  "5572392fee5b0180480001ae": "Keypad horror",
  "5805f0663f1f9c49be00011f": "Birthday II - Presents",
  "56523ec6fc8ac62677000005": "Create sequence containing all allowed characters",
  "588e68aed4cff457d300002e": "Turn the Mars rover to take pictures",
  "57b4dd38d2a31c75f7000299": "Make the small words big!",
  "53f211b159c3fcec3d000efa": "Left$   and   Right$",
  "56562b12044fa538b0000010": "Image Files Only",
  "564e21ba7cd824845b000097": "Knight vs Bishop",
  "57e1857d333d8e0f76002169": "Loose Change!",
  "55e7d9d63bdc3caa2500007d": "Satisfying numbers",
  "547336f44481cf5ecc000dde": "Next birth-day of the week finder",
  "55efee33bd91ae75ac00003c": "htmlify my text",
  "563d54a7329a7af8f4000059": "Put a Letter in a Column",
  "57d06663eca260fe630001cc": "Olympic Rings",
  "580ed88494291dd28c000019": "Sorting Poker",
  "528d9adf0e03778b9e00067e": "Find the Mine!",
  "58b8cc7e8e7121740700002d": "Simple Fun #177: Rank Of Element",
  "589a8d9b729e7abd9a0000ed": "Simple Fun #105: Rectangles",
  "58989a079c70093f3e00008d": "Cartesian neighbors",
  "588422ba4e8efb583d00007d": "Simple Fun #3: Late Ride",
  "55f416b2019f552cb0000086": "Color of the moment",
  "568f9d15bb0d0bf2a8000009": "Can you test it for me?",
  "558aa460dcfb4a94c40001d7": "Fuel economy converter (mpg  <-> L/100 km)",
  "55da49c166949c319200003e": "Basic method",
  "57729a09914da60e17000329": "What time is it?",
  "57f12b4d5f2f22651c00256d": "Array Info",
  "58899594b832f80348000122": "Simple Fun #55: Cyclic String",
  "5868b2de442e3fb2bb000119": "Closest and Smallest",
  "58ce88427e6c3f41c2000087": "Am I safe to drive?",
  "55a9c0994cb7e284d500005e": "Implementing a Queue",
  "5716955a794d3013d00013f9": "The unknown but known variables: Addition",
  "58c21c4ff130b7cab400009e": " Simple Fun #195: Guess Hat Color",
  "56347fcfd086de8f11000014": "Euler's method for a first-order ODE",
  "55d5f550f0f026f7de00000b": "Let them bounce",
  "5772ded6914da62b4b0000f8": "Palindrome Pairs",
  "5579906f2f0c0d0766000127": "Holiday Array Repair",
  "57366eaae7f8d2df290003e8": "UniDecoder",
  "57cd273ee35eb97735000004": "Isn't that a letter too?",
  "567de72e8b3621b3c300000b": "Regexp Basics - is it a letter?",
  "563c8540d50eb20bab00009a": "Make techno.",
  "578597a122542a7d24000018": "Happy numbers to the n power",
  "57470efebf81fea166001627": "noobCode 03: CHECK THESE LETTERS... see if letters in \"String 2\" are present in \"String 1\"",
  "544e2c60908f2da03600022a": "Convert between radians and degrees",
  "52a0849a852a854d050005f4": "Operator overload ?",
  "579387dc7cb7a1e592000112": "Pokemon Go",
  "55ea5304685da2fb40000018": "heggeleggleggo",
  "559f35bde66a7250f60000c9": "Sum with Arrows",
  "56fe9a0c11086cd842000008": "Coding 3min: Father and Son",
  "532b4057484b0e58e8000766": "Use reduce() to calculate the sum of the values in an array",
  "572a428aca1f70dbab001318": "Smart Toaster",
  "57f59da8d3978bb31f000152": "Make Me Slow",
  "581ee0db1bbdd04e010002fd": "Floating-point Approximation (II)",
  "55807d36933247feff00002f": "Vasya and Plates",
  "565ce4ab24ef4aee6a000074": "String Matcher",
  "56426b4e971f01fd2f00005b": "Find the Square Root",
  "534d80775371ece88d0010b5": "isAN(value)",
  "57e17750621bca9e6f00006f": "Colored Hexes!",
  "5797bbb34be9127074000132": "Tetration",
  "5241de3d8d333fefe30006a1": "(Don't) Make Me Repeat Myself",
  "5645fda2956e462b5100005e": "Array arithmetic",
  "52f3a8e1f85fadcdf7001e31": "Factorial division",
  "54cb61619b30e88e44001048": "Run your String",
  "541db50c259d9c55c00007b9": "Node.js Intro",
  "57add740e298a7a6d500000d": "T.T.T.32: Count with your fingers",
  "561fe8dbd50efaa2e9000075": "Sparse array this is?",
  "58d8f800a1111a80f400021a": "Statistics 101: Coin Sampling",
  "569218bc919ccba77000000b": "Target Date",
  "5889a6b653ad4a22710000d0": "Simple Fun #59: Reverse On Diagonals",
  "5889ae4f7af7f99a9a000019": "Simple Fun #62: Draw Rectangle",
  "57057a035eef1f7e790009ef": "Chuck Norris II - One Punch",
  "5630d1747935943168000013": "Tally it up",
  "56bac4c34537cf1e270005a1": "Sorting Arrays ... wait, what?!",
  "56c6a67ed3702be0fc0017d8": "I need a lookup quick!",
  "5762592d784ead628a0000dd": "T.T.T.#5: Only you",
  "570e5d0b93214b1a950015b1": "Coding 3min : Special factor",
  "578e8fb075ffd1891e000a6a": "Milliseconds",
  "551115c5ce486ce707000487": "Hamming(7,4) code - Message encoding",
  "5624e574ec6034c3a20000e6": "Hamming Distance - Part 1: Binary codes",
  "5410c0e6a0e736cf5b000e69": "Hamming Distance",
  "58a6af7e8c08b1e9c40001c1": "Simple Fun #141: Hamming Distance",
  "581963edc929ba19e7000148": "The furthest distance of index",
  "568ff914fc7a40a18500005c": "Distance from the average",
  "58d4634b14286c0302000593": "Lychrel numbers",
  "5893f43b779ce54da4000124": "Simple Fun #67: Array Change",
  "5893fa478a8a23ef82000031": "Simple Fun #68: Palindrome Rearranging",
  "589433358420bf25950000b6": "Chess Fun #3: Chess Knight",
  "58956f5ff780edf4a70000a2": "Simple Fun #86: is Information Consistent?",
  "589a9792ea93aae1bf00001c": "Simple Fun #106: Is Thue Morse?",
  "589a9aadc4e27877cb000027": "Simple Fun #107: Company Bot Strategy",
  "58aa9662c55ffbdceb000101": "Simple Fun #149: Next Day Of Week",
  "589d237fdfdef0239a00002e": "Simple Fun #114: \"abacaba\"",
  "58a3c1f12f949e21b300005c": "Simple Fun #124: Lamps",
  "58aa8698ae929e1c830001c7": "Simple Fun #147: Find The Missing Tree",
  "58b63cb2b7d86adb650000b7": "Simple Fun #173: A Hero Go To The School",
  "58bccdf56f25ff6b6d00002f": "Simple Fun #181: Rounding",
  "58bcdc65f6d3b11fce000045": "Simple Fun #184: LCM from m to n",
  "58bf97cde4a5edfd4f00008d": "Simple Fun #189: Plant Doubling",
  "58841cb52a077503c4000015": "Simple Fun #2: Circle of Numbers",
  "57b68bc7b69bfc8209000307": "Average Scores",
  "58409435258e102ae900030f": "Parity bit - Error detecting code",
  "51f2b4448cadf20ed0000386": "Remove anchor from URL",
  "5389864ec72ce03383000484": "Autocomplete! Yay!",
  "58d64595a1111ab7df000049": "Detect my Konami code!",
  "54ca3e777120b56cb6000710": "Unary function chainer",
  "586538146b56991861000293": "If you can read this...",
  "57c6c2e1f8392d982a0000f2": "Histogram - V1",
  "58360d112fb0ba255300008b": "Now that's a crib!",
  "5834a44e44ff289b5a000075": "MTV Cribs",
  "5620281f0eeee479cd000020": "The Union Jack",
  "558db3ca718883bd17000031": "Complete The Pattern #15",
  "5592e5d3ede9542ff0000057": "Complete The Pattern #13",
  "559379505c859be5a9000034": "Complete The Pattern #14",
  "558ac25e552b51dbc60000c3": "Complete The Pattern #12",
  "5839c48f0cf94640a20001d3": "Land perimeter",
  "5575ff8c4d9c98bc96000042": "Complete The Pattern #8 - Number Pyramid",
  "525dfedb5b62f6954d000006": "Throwing Darts",
  "5650f1a6075b3284120000c0": "Checkered Board",
  "526233aefd4764272800036f": "Matrix Addition",
  "53dc08fa8a0c93229400023b": "Checkerboard Generation",
  "5714eb80e1bf814e53000c06": "How much hex is the fish",
  "580f6cbcfbf2bec47c000511": "Find Grid Position",
  "58694d1c2e8d9c6d9b000296": "Get all array elements except those with specified indexes",
  "55ae997d1c40a199e6000018": "Complete The Pattern #16",
  "5589ad588ee1db3f5e00005a": "Complete The Pattern #11 - Plus",
  "5579e6a5256bac65e4000060": "Complete The Pattern #9 - Diamond",
  "5340298112fa30e786000688": "Difference of 2",
  "55191f78cd82ff246f000784": "Wheel of Fortune",
  "563cb92e0996a4ac0b000042": "Numbers' Plus Pattern",
  "56582133c932d8239900002e": "Find Count of Most Frequent Item in an Array",
  "5581a7651185fe13190000ee": "Complete The Pattern #10 - Parallelogram",
  "5574940eae1cf7d520000076": "Complete The Pattern #6 - Odd Ladder",
  "5507309481b8bd3b7e001638": "Simple Maths Test",
  "565b3542af398bfb50000003": "Count strings in objects",
  "566b51166f88d7560c00001a": "Shuffle an Array",
  "557592fcdfc2220bed000042": "Complete The Pattern #7 - Cyclical Permutation",
  "55749101ae1cf7673800003e": "Complete The Pattern #5 - Even Ladder",
  "577d5ce442a8d81e790002b2": "Celebrity Baby Names",
  "55a5085c1a3d379fbb000062": "Slamming Lockers",
  "55a98fbbe9760cf5af00003f": "Pluck data from Wikipedia lists",
  "52a723508a4d96c6c90005ba": "99 Bottles of Beer",
  "5783d8f3202c0e486c001d23": "Convert an array of strings to array of numbers",
  "5861487fdb20cff3ab000030": "Esolang Interpreters #4 - Boolfuck Interpreter",
  "55e6f5e58f7817808e00002e": "A Rule of Divisibility by 7",
  "57d0329442e44e65e8000bb5": "Simple Encryption #3 - Turn The Bits Around",
  "57fb142297e0860073000064": "Exclamation marks series #13: Count the number of exclamation marks and question marks, return the product",
  "54fdadc8762e2e51e400032c": "String to integer conversion",
  "56f4ff45af5b1f8cd100067d": "Sort - one, three, two",
  "52d4678038644497e900007c": "Advanced Events",
  "52d3b68215be7c2d5300022f": "Simple Events",
  "52210226578afb73bd0000f1": "Game - Electrons around the cores",
  "52ae6b6623b443d9090002c8": "Guess The Gifts!",
  "525f00ec798bc53e8e00004c": "Secret knock",
  "52ad1db4b2651f744d000394": "How Many Reindeers?",
  "52afd1fe8f7c52a0e1000304": "Santa's Master Plan",
  "525988ee6021e918e6000dce": "None shall pass",
  "53c2a84a1dfa43a7e40005ba": "Lock and Key",
  "52af9d951f5a1298b2000170": "Christmas Day",
  "52a64cf14009fd59c6000994": "Holiday Shopping Priority Queue",
  "52755006cc238fcae70000ed": "Christmas tree",
  "53a3240ced8465f048000302": "Single-Use Tickets: Don't Let Anyone Sneak In!",
  "52b23340c65ea422b1000045": "Will the present fit?",
  "52a6b34e43c2484ac10000cd": "Naughty or Nice?",
  "52ab60b122e82a6375000bad": "Sort Santa's Reindeer",
  "52aeb2f3ad0e952f560005d3": "Sort the Gift Code",
  "52af7bf41f5a1291a6000025": "Milk and Cookies for Santa",
  "52b50a20fa0e77b304000103": "SantaClausable Interface",
  "52af0d380fcae83a560008af": "Only One Gift Per Child",
  "585eaef9851516fcae00004d": "Naughty or Nice?",
  "523c7fbb0d47a759580000e2": "Simple Time Bomb",
  "5784c89be5553370e000061b": "Product of Largest Pair",
  "57de78848a8b8df8f10005b1": "How much coffee do you need?",
  "57d532d2164a67cded0001c7": "Histogram - H1",
  "557341907fbf439911000022": "Complete The Pattern #3 (Horizontal Image of #2)",
  "5631213916d70a0979000066": "Number-Star ladder",
  "564f3d49a06556d27c000077": "Upturn Numeral Triangle",
  "55736129f78b30311300010f": "Complete The Pattern #4",
  "57ebdf944cde58f973000405": "Reverse Letters in Sentence ",
  "583989556754d6f4c700018e": "Show multiples of 2 numbers within a range",
  "58670300f04e7449290000e5": "Thinkful - List Drills: Longest word",
  "58ce8725c835848ad6000007": "Drying Potatoes",
  "51f9d3db4095e07f130001ee": "Compose functions (T Combinator)",
  "5298a7b37edba9043200047b": "Pipelining and composing functions",
  "525a5b2185a9a4f5670006c1": "How new Works",
  "52d56d9c6b02b2fa9a0006d9": "Write JavaScript's 'call' function using apply.",
  "53c7da8baf72924af8000405": "new with apply",
  "52e5e86b2ff32887280002e4": "Cylon Evolution",
  "558ccca75f511f2b0d0000f7": "Javascript from the Inside  #1 : Map",
  "557e508a47c7e9adf9000062": "JS Prototypes Module #1 - Object Prototypes",
  "55e8beb4e8fc5b7697000036": "Terminal Game #2",
  "56e20642ddeb0f4fac000344": "Array Mappings",
  "56aaf25213edd3a88a000002": "Zip it!",
  "5758a91bbd1fdd2033000947": "Argue the toss",
  "55c211cce1ef691d9b000061": "Javascript Mathematician",
  "56143efa9d32b3aa65000016": "Some Circles",
  "541b5694204d12573700101c": "Combinator Flip",
  "5258b272e6925db09900386a": "For the sake of argument",
  "529f32794a6db5d32a00071f": "Basic JS - Calculating averages",
  "52a4e42ce950ed50da000748": "Array intersect all",
  "5836ebe4f7e1c56e1a000033": "Interlace an arbitrary Number of Strings",
  "569260e1096a6545fb00004c": "PatternCraft  - Command",
  "5682e545fb263ecf7b000069": "PatternCraft - Decorator",
  "5682e72eb7354b2f39000021": "PatternCraft - State",
  "5682e809386707366d000024": "PatternCraft - Strategy",
  "577ad961ae2807182f000c29": "Count the Characters",
  "5682e646d5eddc1e21000017": "PatternCraft - Visitor",
  "56919e637b2b971492000036": "PatternCraft  - Adapter",
  "534fcca5edb124cfe6000f60": "Singleton Pattern",
  "57d7805cec167081a50014ac": "Spaghetti Code - #1 Easy",
  "5849169a6512c5964000016e": "Greatest Common Factor of an Array",
  "573e6831e3201f6a9b000971": "Training JS #41: Regular Expression--\"\\\"",
  "573fb9223f9793e485000453": "Training JS #42: Regular Expression--( ?: ), ( ?= ) and ( ?! )",
  "573975d3ac3eec695b0013e0": "Training JS #38: Regular Expression--\"^\",\"$\", \".\" and test()",
  "56fcc393c5957c666900024d": "Coding with Squared Strings",
  "585d8c8a28bc7403ea0000c3": "Find the unique string",
  "5700c9acc1555755be00027e": "All Inclusive?",
  "5862e0db4f7ab47bed0000e5": "Find The Unique",
  "570564e838428f2eca001d73": "Chuck Norris I - Push Ups",
  "57c7231c484cf9e6ac000090": "Adding values of arrays in a shifted way",
  "57d93978950d8486a3000def": "These aren't the numbers you're looking for! (Find a number by approximation)",
  "57ea70aa5500adfe8a000110": "Fold an array",
  "58184387d14fc32f2b0012b2": "Floating-point Approximation (I)",
  "58acfe4ae0201e1708000075": "Simple Fun #152: Invite More Women?",
  "5706be574f2c297a7b00060d": "Chuck Norris VI - Shopping with Chuck",
  "5853213063adbd1b9b0000be": "Street Fighter 2 - Character Selection",
  "573d11c48b97c0ad970002d4": "Training JS #40: Regular Expression--\"|\", \"[]\" and \"()\"",
  "573bca07dffc1aa693000139": "Training JS #39: Regular Expression--\"?\", \"*\", \"+\" and \"{}\"",
  "5735e39313c205fe39001173": "Training JS #37: Unlock new weapon---RegExp Object",
  "5735956413c2054a680009ec": "Training JS #36: methods of Math---kata author's lover:random()",
  "57353de879ccaeb9f8000564": "Training JS #35: methods of Math---log() and its family",
  "5733f948d780e27df6000e33": "Training JS #34: methods of Math---pow() sqrt() and cbrt()",
  "5733d6c2d780e20173000baa": "Training JS #33: methods of Math---max() min() and abs()",
  "5732d3c9791aafb0e4001236": "Training JS #32: methods of Math---round() ceil() and floor()",
  "572af273a3af3836660014a1": "Training JS #23: methods of arrayObject---push(), pop(), shift() and unshift()",
  "57308546bd9f0987c2000d07": "Training JS #28: methods of arrayObject---every() and some()",
  "573156709a231dcec9000ee8": "Training JS #30: methods of arrayObject---reduce() and reduceRight()",
  "5732b0351eb838d03300101d": "Training JS #31: methods of arrayObject---isArray() indexOf() and toString()",
  "5731861d05d14d6f50000626": "Training JS #29: methods of arrayObject---concat() and join()",
  "573023c81add650b84000429": "Training JS #27: methods of arrayObject---filter()",
  "572fdeb4380bb703fc00002c": "Training JS #26: methods of arrayObject---map()",
  "572df796914b5ba27c000c90": "Training JS #25: methods of arrayObject---reverse() and sort()",
  "572cb264362806af46000793": "Training JS #24: methods of arrayObject---splice() and slice()",
  "57284d23e81185ae6200162a": "Training JS #20: Methods of String object--charAt() charCodeAt() and fromCharCode()",
  "572ab0cfa3af384df7000ff8": "Training Time",
  "5729b103dd8bac11a900119e": "Training JS #21: Methods of String object--trim() and the string template",
  "5728203b7fc662a4c4000ef3": "Training JS #19: Methods of String object--toUpperCase() toLowerCase() and replace()",
  "57280481e8118511f7000ffa": "Training JS #18: Methods of String object--concat() split() and its good friend join()",
  "57277a31e5e51450a4000010": "Training JS #17: Methods of String object--indexOf(), lastIndexOf() and search()",
  "57274562c8dcebe77e001012": "Training JS #16: Methods of String object--slice(), substring() and substr()",
  "57256064856584bc47000611": "Training JS #15: Methods of Number object--toFixed(), toExponential() and toPrecision()",
  "57238ceaef9008adc7000603": "Training JS #14: Methods of Number object--toString() and toLocaleString()",
  "5722fd3ab7162a3a4500031f": "Training JS #13: Number object and  its properties",
  "5722b3f0bd5583cf44001000": "Training JS #12: loop statement --for..in and for..of",
  "5721c189cdd71194c1000b9b": "Training JS #11: loop statement --break,continue",
  "5721a78c283129e416000999": "Training JS #10: loop statement --for",
  "57216d4bcdd71175d6000560": "Training JS #9: loop statement --while and do..while",
  "572059afc2f4612825000d8a": "Training JS #8: Conditional statement--switch",
  "57202aefe8d6c514300001fd": "Training JS #7: if..else and ternary operator",
  "571f832f07363d295d001ba8": "Training JS #6:  Basic data types--Boolean  and conditional statements if..else",
  "571f1eb77e8954a812000837": "Training JS #5:  Basic data types--Object",
  "571effabb625ed9b0600107a": "Training JS #4:  Basic data types--Array",
  "571edea4b625edcb51000d8e": "Training JS #3:  Basic data types--String",
  "571edd157e8954bab500032d": "Training JS #2:  Basic data types--Number",
  "55a4f9afeffe4231090000d6": "Is integer safe to use?",
  "56dd9b84fe5754786f0014f7": "Implement Array.prototype.filter()",
  "57bfea4cb19505912900012c": "Points of Reflection",
  "5713bc89c82eff33c60009f7": "Freudian translator ",
  "5709bdd2f088096786000008": "noobCode 01: SUPERSIZE ME.... or rather, this integer! ",
  "577a6e90d48e51c55e000217": "Collatz Conjecture (3n+1)",
  "582e4c3406e37fcc770001ad": "ES6 string addition",
  "52adc142b2651f25a8000643": "Sleigh Authentication",
  "53844152aa6fc137d8000589": "A function within a function",
  "57faf7275c991027af000679": "Exclamation marks series #6: Remove n exclamation marks in the sentence from left to right",
  "58356a94f8358058f30004b5": "Drone Fly-By",
  "581331293788bc1702001fa6": "Framed Reflection",
  "58108b147d48fc36ba0000aa": "True Addition",
  "511f0fe64ae8683297000001": "Basic Training: Add item to an Array",
  "560ecf0cb040de130e00007d": "Grasshopper - Order of operations",
  "56fcfad9c7e1fa2472000034": "Evil or Odious",
  "57f22b0f1b5432ff09001cab": "Well of Ideas - Harder Version",
  "57f90a8d5cae44a9dc000091": "JS is Weird: Return a",
  "5803956ddb07c5c74200144e": "Age Range Compatibility Equation",
  "542ebbdb494db239f8000046": "What's up next?",
  "57238766214e4b04b8000011": "Simple Change Machine ",
  "580a094553bd9ec5d800007d": "Alan Partridge II - Apple Turnover",
  "582dafb611d576b745000b74": "For UFC Fans (Total Beginners): Conor McGregor vs George Saint Pierre",
  "560c31275c39c481c4000022": "Grasshopper - Shopping list",
  "570cc83df616a85944001315": "Count words",
  "5692a582cc22387ccf000017": "Configure package json for a node application",
  "560dab9f8b50f89fd6000070": "Grasshopper - Make change",
  "559ac78160f0be07c200005a": "Name Shuffler",
  "57080f21d531cd94950007eb": "Not so black box",
  "5720a1cb65a504fdff0003e2": "Find the Difference in Age between Oldest and Youngest Family Members",
  "571b6a4a7beb0a8ade0007a8": "Blood-Alcohol Content",
  "570597e258b58f6edc00230d": "Remove First and Last Character Part Two",
  "5703c093022cd1aae90012c9": "Be Concise IV - Index of an element in an array",
  "56d8ae9237123036d3001b54": "Grasshopper - Object syntax debug",
  "56f7f8215d7c12c0e7000b19": "Fun with ES6 Classes #1 - People, people, people",
  "56be025f9347a066c7000e4f": "Improving Math.round(x)",
  "557af9418895e44de7000053": "repeatIt",
  "57f6ecdfcca6e045d2001207": "Simple Comparison? ",
  "547c71fdc5b2b38db1000098": "\"this\" is a problem ",
  "55a14aa4817efe41c20000bc": "Classy Extentions",
  "58b1ae711fcffa34090000ea": "Killer Garage Door",
  "54dba07f03e88a4cec000caf": "Barking mad",
  "541629460b198da04e000bb9": "Last",
  "5302d846be2a9189af0001e4": "Welcome to the City",
  "5810085c533d69f4980001cf": "simple calculator ",
  "570669d8cb7293a2d1001473": "Chuck Norris VII - True or False? (Beginner)",
  "559f860f8c0d6c7784000119": "Are there any arrows left?",
  "58941fec8afa3618c9000184": "Simple Fun #74: Growing Plant",
  "589422431a88082ea600002a": "Simple Fun #75: Digit Degree",
  "589573e3f0902e8919000109": "Simple Fun #87: Shuffled Array",
  "58aa68605aab54a26c0001a6": "Simple Fun #144: Distinct Digit Year",
  "58a6841442fd72aeb4000080": "Simple Fun #138: Similarity",
  "571e9af407363dbf5700067c": "Filling an array (part 2)",
  "585355fb0877c420a2000009": "Christmas mission: Programmer's Christmas #3",
  "57f3996fa05a235d49000574": "Abundant Numbers",
  "58068479c27998b11900056e": "Sorting on planet Twisted-3-7",
  "5865a75da5f19147370000c7": "All Star Code Challenge #20",
  "51ba717bb08c1cd60f00002f": "Range Extraction",
  "55f89832ac9a66518f000118": "Simplifying multilinear polynomials",
  "52503c77e5b972f21600000e": "Largest Difference in Increasing Indexes",
  "58c47a95e4eb57a5b9000094": "What's Your Poison?",
  "543da2dd23ccbd1fb600048e": "Sign in/Sign out but sign it",
  "558c04ecda7fb8f48b000075": "Same Array?",
  "58d014421c694f71630000bc": "I Promise Not To Optimize",
  "5857d5cff37aeca1b100011c": "Snakes on a Plane - #2 Hard",
  "52e77537ba20f9d51f000486": "Combining Records",
  "5811aef3acdf4dab5e000251": "Mixbonacci",
  "5523b97ac8f5025c45000900": "The Enigma Machine - Part 1: The Plugboard",
  "5418a1dd6d8216e18a0012b2": "Validate Credit Card Number",
  "5287e858c6b5a9678200083c": "Does my number look big in this?",
  "526dad7f8c0eb5c4640000a4": "Vector class",
  "54d4c8b08776e4ad92000835": "What's a Perfect Power  anyway?",
  "56b5afb4ed1f6d5fb0000991": "Reverse or rotate?",
  "52b757663a95b11b3d00062d": "WeIrD StRiNg CaSe",
  "53907ac3cd51b69f790006c5": "Triangle type",
  "53f40dff5f9d31b813000774": "Recover a secret string from random triplets",
  "539a0e4d85e3425cb0000a88": "A Chain adding function",
  "58b2c5de4cf8b90723000051": "Guess Who?",
  "56f253dd75e340ff670002ac": "Composing squared strings",
  "54db15b003e88a6a480000b9": "Moduli number system",
  "56e7d40129035aed6c000632": "Easy Line",
  "5870fa11aa0428da750000da": "RoboScript #2 - Implement the RS1 Specification",
  "58708934a44cfccca60000c4": "RoboScript #1 - Implement Syntax Highlighting",
  "563f0c54a22b9345bf000053": "A disguised sequence (I)",
  "5834315e06f227a6ac000099": "Find twins",
  "56fb9da2fca8b9d7de00083f": "Find the Most Probable Sum Value or Values, in Rolling N-dice of n Sides",
  "56f852635d7c12fb610013d7": "Tracking Hits for Different Sum Values  for Different Kinds of Dice",
  "56f78a42f749ba513b00037f": "Probabilities for Sums in Rolling  Cubic Dice",
  "55703a2a52dd10501c000131": "Find the hobbits!",
  "57e45ce6a20449368f000092": "Dumb News: The Truth About CW Leaderboard !",
  "57157a7c2ad76331360002d0": "You're not my type",
  "57052ac958b58fbede001616": "#01 - Music theory - Minor/Major chords",
  "5866f0c8442e3fec050001ec": "All Star Code Challenge #30",
  "5872d59caa042821100001f8": "Transformation iteration",
  "5885424265fc9c38100017ef": "Playing with Sets : Sup/Sub",
  "588502f87987a27f690001f7": "Playing with Sets : Equal or Not ?",
  "5884e9ccf72916207900010f": "Playing with Sets : Complement",
  "5884d46015a70f6cd7000035": "Playing with Sets : Intersection",
  "58263b5fe7fb3848f500006f": "Snakes on a Plane - #1 Easy",
  "56d877bd97c0e584b2000053": "5x5 Tap Code",
  "57d7536d950d8474f6000a06": "The Wrong-Way Cow",
  "520d9c27e9940532eb00018e": "Duplicate Arguments",
  "55b95c76e08bd5eef100001e": "Counting in the  Amazon",
  "58a0697ef636cac09c000014": "Youtube URL",
  "58b42c98f4cdd62f45000c6e": "Running functions",
  "56efab15740d301ab40002ee": "Reducing by steps",
  "586c3070b98de0a57000012e": "Split camelcase",
  "54808e45ab03a2c8330009fb": "Secret Message",
  "52654ea8e218b83553000666": "Binary string",
  "56cafdabc8cfcc3ad4000a2b": "Binary scORe",
  "546ba103f0cf8f7982000df4": "Binary Calculator",
  "58cbfe2516341cce1e000001": "Jungerstein's Math Training Room: 1. How many zeros are at the end of n!! ? ",
  "5813257b0d8f13b683000171": "Swedish Personal Number",
  "56d904db9963e9cf5000037d": "Thinking & Testing: A and B?",
  "56fe17fcc25bf3e19a000292": "Disguised sequences (II)",
  "565c0fa6e3a7d39dee000125": "Braking well",
  "5282b48bb70058e4c4000fa7": "Convert A Hex String To RGB",
  "56e9e4f516bcaa8d4f001763": "Sum of numbers from 0 to N",
  "54521e9ec8e60bc4de000d6c": "Maximum  subarray sum",
  "5250a89b1625e5decd000413": "Flatten",
  "56cac350145912e68b0006f0": "up AND down",
  "581a52d305fe7756720002eb": "Is that a real phone number?  (British version)",
  "5898a751b2edc082f60005f4": "Tombola - validation",
  "55902c5eaa8069a5b4000083": "Dollars and Cents",
  "538835ae443aae6e03000547": "Functional Addition",
  "58cda88814e65627c5000045": "Write Number in Expanded Form - Part 2",
  "5842df8ccbd22792a4000245": "Write Number in Expanded Form",
  "5227129b316b56d50d0003b7": "Two levels arrays",
  "5263c5d011f4233c9d000561": "The Look and Say sequence",
  "515decfd9dcfc23bb6000006": "IP Validation",
  "5876e24130b45aaa0c00001d": "Esolang: Ticker",
  "531963f82dde6fc8c800048a": "Mystery function #1",
  "5894045b8a8a230d0c000077": "Simple Fun #70: Avoid Obstacles",
  "588fa08b1223c3ee42000062": "Create a password hashing function.",
  "57f891255cae44b2e10000c5": "Working With Coloured Numbers",
  "582c5382f000e535100001a7": "Parse a linked list from a string",
  "56f7996c5d7c121fd6000511": "Helper Functions and Recursion - Factorials, Permutations and Combinations",
  "56f29b3b75e340627a0009d5": "Recurrence by Recursion",
  "56c04261c3fcf33f2d000534": "Magnet particules in boxes",
  "58528e9e22555d8d33000163": "Minutes to Midnight",
  "5837fd7d44ff282acd000157": "Count the days!",
  "5857e8bb9948644aa1000246": "Can Santa save Christmas?",
  "563c823393305ec84e000048": "The Arpeggiator",
  "52f51502053125863c0009d7": "Optimal Taxi Fare",
  "58cf55c8c496ce2406000088": "The anti-optimizer",
  "58c2158ec7df54a39d00015c": "Simple Fun #193: Moment Of Time In Space",
  "583f158ea20cfcbeb400000a": "Make a function that does arithmetic!",
  "53368a47e38700bd8300030d": "Format a string of names like 'Bart, Lisa & Maggie'.",
  "56060ba7b02b967eb1000013": "Raise Me to The Third Power, Search My Divisors... .....Could You Believe that?",
  "5603a9585480c94bd5000073": "Sum and Rest the  Number with its Reversed and See What Happens",
  "57d0d4dcc98a52779400000b": "I guess this is a 7kyu kata #1: Search result",
  "5612ab201830eb000f0000c0": "Find the First Number in Having a Certain Number of Divisors I",
  "523f5d21c841566fde000009": "Array.diff",
  "56dc83840a10fee472000ca1": "Check if a number is a part of an arbitrary fibonacci sequence",
  "5512e5662b34d88e44000060": "Broken sequence",
  "536a9f94021a76ef0f00052f": "Recursive reverse string",
  "57bf7fae3b3164dcac000352": "Prime Sextuplets",
  "580777ee2e14accd9f000165": "The Skiponacci Sequence",
  "571654c3347e6533fa00186b": "Coding 3min : Parallel circuit",
  "5701bdd564730378ac000b88": "SpeedCode #4 \u00d7 Factory Functions #3 - Artefacts",
  "572269697297444c570008b9": "noobCode 02: TRICKY QUESTIONS ( primitives and operator precedence)",
  "56ff6a70e1a63ccdfa0001b1": "SpeedCode #2 - Array Madness",
  "588817db5fb13af14a000020": "Simple Fun #40:  Timed Reading",
  "540afbe2dc9f615d5e000425": "Validate Sudoku with size `NxN`",
  "5873b2010565844b9100026d": "Begin your day with a challenge, but an easy one.",
  "5886e082a836a691340000c3": "Simple Fun #27: Rectangle Rotation",
  "53db96041f1a7d32dc0004d2": "Did I Finish my Sudoku?",
  "551f37452ff852b7bd000139": "Binary Addition",
  "55b4d87a3766d9873a0000d4": "How Much?",
  "54d81488b981293527000c8f": "Sum of Pairs",
  "55908aad6620c066bc00002a": "Exes and Ohs",
  "56d67c7eecb553574900016c": "Midpoint inception",
  "560cd60f215a80dc00000049": "Expressive Objects",
  "588468f3b3d02cf67b0005cd": "Simple Fun #15: Addition without Carrying",
  "54e6533c92449cc251001667": "Unique In Order",
  "52bd8335d9aca8fb16000341": "How low can you go?",
  "5886faac54a7111c21000072": "Simple Fun #29:  Is MAC48 Address?",
  "581e1d083a4820eb4f00004f": "MOD 256 without the MOD operator",
  "5863f1c8b359c4dd4e000001": "Bulk up!",
  "58b6d8ba1697a5655d00009b": "Spanish Pirates off the Treasure Coast",
  "58953a5a41c97914d7000070": "Simple Fun #85: Polygon Perimeter",
  "57873ab5e55533a2890000c7": "Correct the time-string",
  "56fa93d36883c783ec0001d1": "\"console.log\" and the Lexical \"this\"",
  "58475cce273e5560f40000fa": "Square Roots: Approximation",
  "573182c405d14db0da00064e": "Consecutive k-Primes",
  "58a672d6426bf38be4000057": "Find the in-between point",
  "5829c2c8ef8d4474300000fa": "Triple Sorting - Sort & Stringify a list by 3 attributes",
  "582b0d73c190130d550000c6": "Square and Cubic Factors",
  "5850e85c6e997bddd300005d": "Square Roots: Simplify/Desimplify",
  "58733d9b0e9cf3a824000050": "Sum #1",
  "571ec274b1c8d4a61c0000c8": "Training JS #1: create your first JS function and print \"Hello World!\"",
  "55955a48a4e9c1a77500005a": "Say hello!",
  "52fff3f4aff4559096000917": "Default configuration",
  "58a848258a6909dd35000003": "Mastermind",
  "554f76dca89983cc400000bb": "Diophantine Equation",
  "561e9c843a2ef5a40c0000a4": "Gap in Primes",
  "5613d06cee1e7da6d5000055": "Steps in Primes",
  "58be35e9e36224a33f000023": "Tom's Allergies",
  "58ca7afc92ce34dfa50001fa": "Geohashing",
  "588453ea56daa4af920000ca": "Simple Fun #9: Array Packing",
  "526156943dfe7ce06200063e": "My smallest code interpreter (aka Brainf**k)",
  "577b9960df78c19bca00007e": "Find the nth Digit of a Number",
  "52a8f768a8ddc5070c000ca2": "Hash Hacker",
  "52608f5345d4a19bed000b31": "Chinese Numeral Encoder",
  "57f3c59fab9a91db28000027": "An 'orrible expression on 'is face",
  "57faf12b21c84b5ba30001b0": "Exclamation marks series #4: Remove all exclamation marks from sentence but ensure a exclamation mark at the end of string",
  "55c4eb777e07c13528000021": "Factorial tail",
  "55911ef14065454c75000062": "Multiplying numbers as strings",
  "553e8b195b853c6db4000048": "All unique",
  "54d558c72a5e542c0600060f": "Defuse the bombs!",
  "568dc014440f03b13900001d": "L1: Bartender, drinks!",
  "57642a90dee2da8dd3000161": "Arguments to Binary addition",
  "56bcaedfcf6b7f2125001118": "Safen User Input Part I - htmlspecialchars",
  "559f80b87fa8512e3e0000f5": "Are arrow functions odd?",
  "55d1d06def244b18c100007c": "Shop Inventory Manager",
  "517b2bcf8557c200b8000015": "Ninja vs Samurai: Attack + Block",
  "55d3b1f2c1b2f0d3470000a9": "Algorithmic predicament- Bug Fixing #9",
  "526dbd6c8c0eb53254000110": "Not very secure",
  "52dd912cf5073adca8000556": "A Banking Trouble",
  "561abc8d324728b06e000102": "Get the lost toString back",
  "547f1a8d4a437abdf800055c": "\"this\" is an other problem",
  "567ed5db4089538eea000010": "Nuclear Missile Manager",
  "52cd53948d673a6e66000576": "Breaking search bad",
  "54834b3559e638b39d0009a2": "\"this\" is an other solution",
  "5255892719453db6d2000a23": "Part 1: Evil Programming Government Restrictions",
  "52f3eeb274c7e693a600288e": "Inserting multiple strings into another string",
  "52a224d9e6d7a078200007b2": "The Desperate Rocket Scientist",
  "54cefc8c975ca613d4000d7f": "Greed",
  "5505552bd181b990d9000caf": "Deletion in an array",
  "5844a422cbd2279a0c000281": "Debug the functions EASY",
  "53d4eec01f1a9b3020000786": "Anonymous Returns.",
  "5434d8487abffa2f64000db6": "Who let the dogs out?",
  "52437f32636a67edb00002f7": "Honey to the Bee",
  "55d2603d506a40e162000056": "Reducing Problems - Bug Fixing #8",
  "52e9aa89b5acdd26d3000127": "Multiply characters",
  "514a677421607afc99000002": "getNames()",
  "56368f37d464c0a43c00007f": "Debug Basic Calculator",
  "53a257d83cacabb1fd0007d3": "Dangerous Dates",
  "55c7f90ac8025ebee1000062": "Failed Sort - Bug Fixing #4",
  "580e67ae22e42d797000015e": "Oh dear God! Is it bugged?",
  "55cd4ce59382498cbd000080": "Class conundrum - Bug Fixing #7",
  "558710234f02dcc4a8000005": "Fix my method",
  "57158fb92ad763bb180004e7": "Fix your code before the garden dies! ",
  "54fdaa4a50f167b5c000005f": "Unexpected parsing",
  "562e98755e9214cd2500003d": "A bugs trilogy: Episode 1 - \"Let Math.Random(); decide your future\"",
  "5708f682c69b48047b000e07": "Multiply the number",
  "56bc0fc65bdaeb46d800084a": "Math Object Madness",
  "56b71b1dbd06e6d88100092a": "Understanding closures - the basics",
  "526ec46d6f5e255e150002d1": "Closures and Scopes",
  "565d6d1696e154b51b000076": "JavaScript seems to be broken",
  "55e762cb8d89416b4300007c": "We need these data immediately!",
  "54f5c1b000ecc46de6000e4c": "Something 's fishy...",
  "5504b15fd181b977c30001d5": "Hoisting",
  "535d118ccdbf501816001101": "[JS] Parse integers in array",
  "5267faf57526ea542e0007fb": "Math Issues",
  "56aed32a154d33a1f3000018": "Fix the Bugs (Syntax) - My First Kata",
  "56f695399400f5d9ef000af5": "Is this my tail?",
  "526471539d52735c620000c6": "Broken Counter",
  "571d42206414b103dc0006a1": "Filling an array (part 1)",
  "52a47dd7e950edabfa000391": "Max Headroom and JavaScript style",
  "514aa0dc21607ae236000017": "Shifty Closures",
  "57e1e61ba396b3727c000251": "String cleaning",
  "5626b561280a42ecc50000d1": "Take a Number And Sum  Its Digits Raised To The Consecutive Powers And ....\u00a1Eureka!!",
  "57f609022f4d534f05000024": "Find the stray number",
  "560f8d41cf6e1fe5c900002e": "Find variable which breaks strict comparison!",
  "57a386117cb1f31890000039": "Parse float",
  "57ab2d6072292dbf7c000039": "Polish alphabet",
  "563c13853b07a8f17c000022": "Is the date today",
  "54fe05c4762e2e3047000add": "OOP: Object Oriented Piracy ",
  "56b0ff16d4aa33e5bb00008e": "Remove the time",
  "578a8a01e9fd1549e50001f1": "Is your period late?",
  "55a144eff5124e546400005a": "Classy Classes",
  "55e4c52ad58df7509c00007e": "Invalid Login - Bug Fixing #11",
  "56019d3b2c39ccde76000086": "Grasshopper - Terminal Game Turn Function",
  "514a3996d22ce03198000003": "Mr. Freeze",
  "56d6c333c9ae3fc32800070f": "Days in the year",
  "5612a42e746aa62de100001a": "Decibel Scale",
  "57078c56924f34f763000b3f": "Circular Objects #1 - Running around in circles",
  "53f9ee9f64b19d4b1d0001ed": "Hello Happy Codevarrior!",
  "56e6a330715e7221d9000a3b": "Do something \"n.times\" (Simplifying \"for\" loops)",
  "55a13556ca4a6d0ab4000003": "Lexical this",
  "56ff9b53140fcca90b000530": "SpeedCode #3 \u00d7 Fun with ES6 Classes #5 - Dogs and Classes",
  "56fe107569510b1b1b0002a5": "Shortest Code: Trypophobia",
  "56fe9ffbc25bf33fff000f7c": "Coding 3min: Trypophobia",
  "5263c6999e0f40dee200059d": "The observed PIN",
  "581c06b95cfa838603000435": "Scraping: Codewars Top 500 Users",
  "56e195d02bb22479e50016af": "Pernicious Numbers",
  "54fdbad0762e2e8a54000452": "Count word occurrences",
  "525481903700c1a1ff0000e1": "Function Cache",
  "5838e2978bbc04b7cd000008": "Ten Green Bottles",
  "577e9095d648a15b800000d4": "Evaluate a postfix expression",
  "52cda638f87aa2b141000935": "No 'Math' expression evaluator",
  "563c9f8073ccb1464d0000ae": "Special Scores For Words",
  "555a03f259e2d1788c000077": "RNA to Protein Sequence Translation",
  "527a6e602a7db3456e000a2b": "Extract Nested Object Reference",
  "5298ad7cd0f550269500051b": "Ziiiiip!",
  "57fa537f8b0760c7da000407": "Diamonds and Toads",
  "5708ef48fe2d018413000776": "Translate DNA  in 6 frames",
  "5388ff350b24c5e33000114c": "Baseball",
  "54e4aa695c8a4c4cee0004d4": "The once rollable dice",
  "574b1916a3ebd6e4fa0012e7": "They say that only the name is long enough to attract attention. They also said that only a simple Kata will have someone to solve it. This is a sadly story #1: Are they opposite?",
  "570bcd9715944a2c8e000009": "Coding 3min : Jumping Dutch act",
  "588711735ea0b4649e000001": "Simple Fun #34:  Numbers Grouping",
  "5888145122fe8620950000f0": "Simple Fun #39:  Switch Lights",
  "585aa2473d357ba593000213": "Is there a floating number here?",
  "561e1e2e6b2e78407d000011": "The Sum and The Rest of Certain Pairs of Numbers have to be Perfect Squares",
  "5662b14e0a1fb8320a00005c": "Naughty or Nice",
  "562dbaf65d4ab6685c0000ed": "Lorraine Wants to Win the TV Contest",
  "515dfd2f1db09667a0000003": "Get key/value pairs as arrays",
  "56bd9e4b0d0b64eaf5000819": "Combine objects",
  "56d6b7e43e8186c228000637": "Colour Association",
  "57cbb9e240e3024aae000b26": "2 DNAs sequences, coding for same protein? ",
  "53573877d5493b4d6e00050c": "Find the Capitals",
  "525fbff0594da0665c0003a3": "Conway's Game of Life",
  "52996b5c99fdcb5f20000004": "Instant Runoff Voting",
  "5384df88aa6fc164bb000e7d": "Don't Eat the Last Cake!",
  "53417de006654f4171000587": "Simple card game",
  "534ffb35edb1241eda0015fe": "Blackjack Scorer",
  "530045e3c7c0f4d3420001af": "Conway's Look and Say - Generalized",
  "52b013920b1d45c8b4000355": "Dreidel dreidel",
  "5502c9e7b3216ec63c0001aa": "Categorize New Member",
  "54d472e98776e4eb5b000215": "Musical Pitch Classes",
  "56bb01de0e8b29de50000b19": "What's wrong with these identifiers?",
  "53db4acb1f1a7dd68700040a": "Monads: The list monad",
  "546e416c8e3b6bf82f0002f2": "Binding within the List Monad",
  "5456812629ccbf311b000078": "Cycle a list of values",
  "56a1c63f3bc6827e13000006": "How many are smaller than me II?",
  "56a1c074f87bc2201200002e": "How many are smaller than me?",
  "52cf02cd825aef67070008fa": "Help the general decode secret enemy messages.",
  "5782b5ad202c0ef42f0012cb": "Simple Encryption #2 - Index-Difference",
  "52d1bd3694d26f8d6e0000d3": "Vigen\u00e8re Cipher Helper",
  "57f14afa5f2f226d7d0000f4": "Simple Encryption #4 - Qwerty",
  "526d42b6526963598d0004db": "Caesar Cipher Helper",
  "52223df9e8f98c7aa7000062": "ROT13",
  "52763db7cffbc6fe8c0007f8": "Tongues",
  "54729e48e1d2a369e00000d3": "Rotation Cipher Cracker",
  "542a823c909c97da4500055e": "Polybius square cipher - encode",
  "52eb114b2d55f0e69800078d": "Simple Substitution Cipher Helper",
  "581e014b55f2c52bb00000f8": "Decipher this! ",
  "56fb3cde26cc99c2fd000009": "ROT13 variant cipher",
  "576fac714bc84c312c0000b7": "Cryptography #1 - Viva Cesare",
  "535c1c80cdbf5011e600030f": "Keyword Cipher Helper",
  "57b2fc418491f9f092000029": "Number encrypting: decypher",
  "57aa3927e298a757820000a8": "Number encrypting: cypher",
  "54207f9677730acd490000d1": "Password Hashes",
  "565b9d6f8139573819000056": "Decoding a message",
  "573d498eb90ccf20a000002a": "The Barksdale Code",
  "5862fb364f7ab46270000078": "Basic Encryption",
  "5556136b7ebc7c786000005e": "Simple safecracking",
  "57241cafef90082e270012d8": "Keyword Cipher",
  "56ff1667cc08cacf4b00171b": "Help Suzuki count his vegetables....",
  "56fc55cd1f5a93d68a001d4e": "How many stairs will Suzuki climb in 20 years?",
  "5701800886306a876a001031": "Suzuki needs help lining up his students!",
  "571c1e847beb0a8f8900153d": "Help Suzuki rake his garden!",
  "57d4ecb8164a67b97c00003c": "Help Suzuki purchase his Tofu!",
  "5421c6a2dda52688f6000af8": "Function Composition",
  "583952fbc23341c7180002fd": "Coding Meetup #14 - Higher-Order Functions Series - Order the food",
  "583d972b8bbc0402cf000121": "Coding Meetup #16 - Higher-Order Functions Series - Ask for missing details",
  "583a8bde28019d615a000035": "Coding Meetup #15 - Higher-Order Functions Series - Find the odd names",
  "582dace555a1f4d859000058": "Coding Meetup #12 - Higher-Order Functions Series - Find GitHub admins",
  "582ba36cc1901399a70005fc": "Coding Meetup #11 - Higher-Order Functions Series - Find the average age",
  "582a53ed261c2af9d200018c": "Coding Meetup #10 - Higher-Order Functions Series - Create usernames",
  "5829ca646d02cd1a65000284": "Coding Meetup #9 - Higher-Order Functions Series - Is the meetup age-diverse?",
  "58291fea7ff3f640980000f9": "Coding Meetup #8 - Higher-Order Functions Series - Will all continents be represented?",
  "582887f7d04efdaae3000090": "Coding Meetup #7 - Higher-Order Functions Series - Find the most senior developer",
  "58287977ef8d4451f90001a0": "Coding Meetup #6 - Higher-Order Functions Series - Can they code in the same language?",
  "5828713ed04efde70e000346": "Coding Meetup #5 - Higher-Order Functions Series - Prepare the count of languages",
  "58279e13c983ca4a2a00002a": "Coding Meetup #2 - Higher-Order Functions Series - Greet developers",
  "5827bc50f524dd029d0005f2": "Coding Meetup #4 - Higher-Order Functions Series - Find the first Python developer",
  "5827acd5f524dd029d0005a4": "Coding Meetup #3 - Higher-Order Functions Series - Is Ruby coming?",
  "582746fa14b3892727000c4f": "Coding Meetup #1 - Higher-Order Functions Series - Count the number of JavaScript developers coming from Europe",
  "5411e3e95f3a7f6a7a0000e3": "Array#reduce",
  "540de1f0716ab384b4000828": "Unpacking Arguments",
  "53b2ff49b82af296ce001139": "Array.prototype.reverse()",
  "5413759479ba273f8100003d": "esreveR",
  "525a037c82bf42b9f800029b": "Partition On",
  "52195c9bb576caf14200007f": "Adding useful functional functionality to JavaScript arrays  ",
  "582041237df353e01d000084": "Fun with lists: filter",
  "58319f37aeb69a89a00000c7": "Fun with lists: reduce",
  "581e50555f59405743001813": "Fun with lists: anyMatch + allMatch",
  "5819081d056d4bdd410004f8": "Fun with lists: countIf",
  "581c867a33b9fe732e000076": "Fun with lists: lastIndexOf",
  "581c6b075cfa83852700021f": "Fun with lists: indexOf",
  "58259d9062cfb45e1a00006b": "Fun with lists: map",
  "525f277c7103571f47000147": "Finding an appointment",
  "52af1f150fcae8d33d0009bc": "Ho Ho Ho with Functions!",
  "52567c56cb6ac86b56000516": "Sentences with Functions",
  "5264603df227072e6500006d": "The Fruit Juice",
  "529a92d9aba78c356b000353": "Algebraic Lists",
  "527b3cd0492b6b15250060af": "Push a hash/an object into array",
  "53d045892578b1be8b0001c4": "Tail recursion with trampoline",
  "53223653a191940f2b000877": "Determining if a graph has a solution",
  "586640f739c5ab4f4c00022f": "Fun with trees: lists edition",
  "58381907f8ac48ae070000de": "Coding Meetup #13 - Higher-Order Functions Series - Is the meetup language-diverse?",
  "5244ab738978478c1800002e": "GPS Navigation",
  "5268acac0d3f019add000203": "Design a Simple Automaton (Finite State Machine)",
  "52ed326b8df6540e06000029": "Simple elevator",
  "52d43d5515be7cbc92000611": "Tree leaves at same level",
  "52ed80dfe7bf9ae61d000056": "Deep Freeze",
  "588a00ad70720f2cd9000005": "Simple Web Framework #1: Create  a basic router",
  "52859abdf8fc1b12e0000141": "Flatten a Nested Map",
  "53ad7224454985e4e8000eaa": "Dragon's Curve",
  "53ad69892a27079b34000bd9": "Ackermann Function ",
  "53a1eac7e0afd3ad3300008b": "Mutual Recursion",
  "56dbf59b0a10feb08c000227": "Moves in squared strings (IV)",
  "56dbeec613c2f63be4000be6": "Moves in squared strings (III)",
  "56f8fe6a2e6c0dc83b0008a7": "Be Concise III - Sum Squares",
  "56f4f7cfaf5b1f8cd100060e": "Be Concise II - I Need Squares",
  "56f3f6a82010832b02000f38": "Be Concise I - The Ternary Operator",
  "56dbe7f113c2f63570000b86": "Moves in squared strings (II)",
  "53ea07c9247bc3fcaa00084d": "Look and say numbers",
  "549cb9c0c36a02ce2e000156": "RPG dice roller",
  "527bbf9f8699010bf40006ee": "Functional Lists",
  "5259510fc76e59579e0009d4": "Did you mean ...?",
  "52af840e0b1d45d45f000078": "Definitely Naughty or Probably Nice?",
  "524ada2bdc2121b521000353": "The Captain's Distance Request",
  "525f3eda17c7cd9f9e000b39": "Calculating with Functions",
  "5269452810342858ec000951": "Coordinates Validator",
  "5509609d1dbf20a324000714": "Decimal to any Rational or Irrational Base Converter",
  "5239078120eeabe18f0000da": "Image Processing",
  "5296bc77afba8baa690002d7": "Sudoku Solver",
  "511ed4593ba69cba1a000002": "Wrapped Function",
  "578f8fa7deaed95f82000200": "JS 101 - 2.1",
  "5888514674b58e929a000036": "Simple Fun #49: Decipher",
  "52672d961283975bd70002b0": "The Prediction",
  "56caf4a1145912a5c4000b76": "Kata Impossible I - The Impossible Lottery",
  "574c51aa3e4ea6de22001363": "Sir , showMe  yourID ",
  "55e5fa3501fd9c3f4d000050": "Linked Lists - Merge Sort",
  "55e5253dcd20f821c400008e": "Linked Lists - Shuffle Merge",
  "56a194c4bd5032751e000029": "Is a Prime?",
  "57037ed25a7263ac35000c80": "Generate user links",
  "54f6e7a62e2c167e29000112": "Don't rely on luck HARDCORE",
  "5268af3872b786f006000228": "Don't rely on luck.",
  "515bb423de843ea99400000a": "PaginationHelper",
  "55e1d2ba1a3229674d000037": "Linked Lists - Front Back Split",
  "55e725b930957a038a000042": "Linked Lists - Recursive Reverse",
  "55e72695870aae78c4000026": "Linked Lists - Iterative Reverse",
  "55d9f257d60c5fd98d00001b": "Linked Lists - Remove Duplicates",
  "55d0c7ee7c0d30a12b000045": "Linked Lists - Insert Sort",
  "55da347204760ba494000038": "Linked Lists - Move Node",
  "55dd5386575839a74f0000a9": "Linked Lists - Alternating Split",
  "55d17ddd6d7868493e000074": "Linked Lists - Append",
  "581e476d5f59408553000a4b": "Fun with lists: length",
  "52f6be83172a8ba0be000342": "Reverse linked list",
  "5810d8ce2956d78698000032": "Find the K-th last element of a singly linked list",
  "58b8c94b7df3f116eb00005b": "Simple Fun #176: Reverse Letter",
  "52532cc8e9ea83b89b000008": "Hard Time Bomb",
  "557053e47a652a6060000064": "Age from DOB",
  "55cc33e97259667a08000044": "Linked Lists - Sorted Insert",
  "55e67e44bf97fa66900000a0": "Linked Lists - Sorted Intersect",
  "55e5d31bf7ca1e44980000a7": "Linked Lists - Sorted Merge",
  "589ace5eeef39faf49000061": "Simple Fun #111: Reverse Brackets",
  "55e7280b40e1c4a06d0000aa": "Best travel",
  "586c0909c1923fdb89002031": "Connect 4",
  "57f92db48b0760410a0001e7": "JS is Weird: Return fuelstar",
  "58663693b359c4a6560001d6": "Maze Runner",
  "534e01fbbb17187c7e0000c6": "Make a spiral",
  "58ade2233c9736b01d0000b3": "Password generator",
  "52f4261c95d6bff39a003096": "Maximum Contiguous Sum",
  "589dcba5e708ec509f000164": "Thinking & Testing: Sing a Song",
  "58af4ed8673e88a719000116": "Character limits: How long is your piece of string?",
  "57a62154cf1fa5b25200031e": "Alternate case",
  "57ae18c6e298a7a6d5000c7a": "Replace all items",
  "57a84137cf1fa5f9f80000d6": "Get list sum recursively",
  "58b57ae2724e3c63df000006": "Parse HTML/CSS Colors",
  "536602df5d0266e7b0000d31": "Morse Encoding",
  "55a5b91f5c7546e8420001d5": "Easiest Kata on Codewars",
  "58ac59d21c9e1d7dc5000150": "Cut array into smaller parts",
  "551614eb77dd9ee37100003e": "Batman Quotes",
  "530265044b7e23379d00076a": "Point in Polygon",
  "52423db9add6f6fc39000354": "Conway's Game of Life  - Unlimited Edition",
  "58a12162784e0cfe4700000d": "One Line Task: GCD Function",
  "57e2dd0bec7d247e5600013a": "Unflatten a list (Easy)",
  "566d5e2e57d8fae53c00000c": "Bingo Card",
  "52d2e2be94d26fc622000735": "Vigen\u00e8re Autokey Cipher Helper",
  "5270f22f862516c686000161": "Base64 Encoding",
  "526c7b931666d07889000a3c": "Befunge Interpreter",
  "586a1af1c66d18ad81000134": "Driving Licence",
  "586e6d4cb98de09e3800014f": "Vending Machine",
  "587136ba2eefcb92a9000027": "Snakes and Ladders",
  "53897d3187c26d42ac00040d": "Find whether there is a route between two nodes in a graph",
  "5594463eaf1701909c0000d4": "Sum ALL the arrays!",
  "57547f9182655569ab0008c4": "Recursive Replication",
  "576400f2f716ca816d001614": "Reduce My Fraction",
  "56d6b921c9ae3fd926000601": "Strings, strings, strings (Easy)",
  "574ad936a3ebd6b322000d19": "Binary Swap",
  "57882daf90b2f375280000ad": "Sum squares of numbers in list that may contain more lists",
  "5786f020e55533ebb7000153": "Deep List Reverse",
  "54ab259e15613ce0c8001bab": "self_converge",
  "5800580f8f7ddaea13000025": "Sum The Tree",
  "57e8c68c97a05990b10000c3": "Broken Collatz",
  "57f032307b45ef9c8f0001dd": "The real size of a multi-dimensional array",
  "57d5fed61a6282bf6f002a5f": "Magic Index",
  "57bd0abcb9799763f1001bdc": "Mad Max: Recursion Road",
  "582c297e56373f0426000098": "Convert a linked list to a string",
  "58817056e7a31c2ceb000052": "Esolang: InfiniTick",
  "587edac2bdf76ea23500011a": "Esolang: Tick",
  "589d33e4e0bbce5d6300061c": "The Modulo-3 Sequence",
  "588417e576933b0ec9000045": "Simple Fun #1: Seats in Theater",
  "56dbe0e313c2f63be4000b25": "Moves in squared strings (I)",
  "5806445c3f1f9c2f72000031": "Mean vs. Median",
  "576bb3c4b1abc497ec000065": "Compare Strings by Sum of Chars",
  "5502ddd734137e90af000f62": "Convert Time to String",
  "562f91ff6a8b77dfe900006e": "Going to the cinema",
  "57a93f93bb9944516d0000c1": "Interactive Dictionary",
  "523fba59cb9aaaef4f000135": "bit \"Wise\" #2: SHIFT-iness",
  "523878615b438c1c450003ba": "bit \"Wise\" #1: XOR-cism",
  "5277dc3ff4bfbd9a36000c1c": "ASCII85 Encoding & Decoding",
  "5252f11b401ddbf7090006c4": "Star Catalog Matching",
  "54d496788776e49e6b00052f": "Sum by Factors",
  "5889ab4928c08c08da00009b": "Simple Fun #61: Crossing Sum",
  "5896616336c4bad1c50000d7": "Area of an annulus",
  "52f2f5ecc807c0ab1a00001a": "Atbash Cipher Helper",
  "5361372e700d2a9627000cf1": "Kama Sutra Cipher Helper",
  "52f2f1ea12b5cbc66900300a": "Affine Cipher Helper",
  "57f7f71a7b992e699400013f": "Sort the columns of a csv-file",
  "57d9808b950d84e1a2000437": "Back to KinderGarten (eeeeeeasy)",
  "5551dc71101b2cf599000023": "Pizza pieces",
  "52abd4c941fcec78ce00002e": "How the Grinch Almost Ended Christmas",
  "551e949bbf4e52c106000aed": "Programmed mapper",
  "56a5491471b6f0d40a000001": "Clue - Esoteric programming #4",
  "56e67d6166d442121800074c": "\u25a0\u25a1 Pattern \u25a1\u25a0 : Wave",
  "56941f177c0a52aef50000a2": "Brainscrambler - Esoteric programming #3",
  "55df8bb5b435f0628a0000c8": "ABC - Esoteric programming #2",
  "55653db7b0075fe1f000000a": "5command - Esoteric programming #1",
  "55cc4912df1006e49c0000f4": "Hide from the Sun",
  "52aae14aa7fd03d57400058f": "Remove Zeros",
  "56f399b59821793533000683": "Sort deck of cards",
  "57fe864854685b1c420002e0": "Sorting Arrays",
  "5694d22eb15d78fe8d00003a": "Group in 10s",
  "57049a1946edc26dbc00074a": "Shortest Code: Symmetric Sort",
  "5705aeb041e5befba20010ba": "Coding 3min : Symmetric Sort",
  "52cb0b50c61b330f18000763": "Multi Level Sorting",
  "5326ef17b7320ee2e00001df": "Escape the Mines !",
  "55cacc3039607536c6000081": "Linked Lists - Insert Nth Node",
  "55befc42bfe4d13ab1000007": "Linked Lists - Get Nth Node",
  "55beec7dd347078289000021": "Linked Lists - Length & Count",
  "55be95786abade3c71000079": "Linked Lists - Push & BuildOneTwoThree",
  "583ea278c68d96a5fd000abd": "Coding Meetup #17 - Higher-Order Functions Series - Sort by programming language",
  "56fd862db0c52efd9e0018f9": "ACME factory needs your help",
  "57dd3a06eb0537b899000a64": "The 12 Days of Christmas",
  "589577f0d1b93ae32a000001": "Simple Fun #88: Sort By Height",
  "589631d24a7323d18d00016f": "Piano Kata, Part 2",
  "589273272fab865136000108": "Piano Kata, Part 1",
  "5868a68ba44cfc763e00008d": "Esolang Interpreters #3 - Custom Paintf**k Interpreter",
  "58678d29dbca9a68d80000d7": "Esolang Interpreters #2 - Custom Smallfuck Interpreter",
  "586dd26a69b6fd46dd0000c0": "Esolang Interpreters #1 - Introduction to Esolangs and My First Interpreter (MiniStringFuck)",
  "52094b0673c32d3fc5000065": "Imperfect Network #2 (out-of-order messages)",
  "513fa1d75e4297ba38000003": "flatten()",
  "52092a7cea29118405000027": "Imperfect Network #1 (duplicate messages)",
  "5268956c10342831a8000135": "Binary Tree Traversal",
  "55d459414bd7798fc5000081": "Invert binary tree",
  "52aebd2423b44356b8000578": "Valid Binary Christmas Tree",
  "55847fcd3e7dadc9f800005f": "Binary Tree Compare",
  "55b350026cc02ac1a7000032": "Convert integer to Whitespace format",
  "5668e3800636a6cd6a000018": "Ghostbusters (whitespace removal)",
  "5254620499cfe504bf0001c9": "Robby, the robot",
  "56b4af8ac6167012ec00006f": "Number Shortening Filter",
  "5511b2f550906349a70004e1": "Last digit of a large number",
  "55ab4f980f2d576c070000f4": "Playing on a chessboard",
  "583d10c03f02f41462000137": "The maximum sum value of ranges -- Simple version",
  "5896fc74b3ce5ae5fb00001d": "Computational Geometry 101: Perimeter and Area of an arbitrary shape (2D)",
  "5748838ce2fab90b86001b1a": "Area of a Square",
  "57d0089e05c186ccb600035e": "Check if  a triangle is an equable triangle!",
  "580a0347430590220e000091": "Find the area of the rectangle!",
  "537baa6f8f4b300b5900106c": "Area of a Circle",
  "5474be18b2bc28ff92000fbd": "Area of a Shape",
  "57da5365a82a1998440000a9": "You are a Cube!",
  "57aa218e72292d98d500240f": "Heron's formula",
  "5887a6fe0cfe64850800161c": "Largest Square Inside A Circle",
  "514a024011ea4fb54200004b": "Extract the domain name from a URL",
  "55aa075506463dac6600010d": "Integers: Recreation One",
  "54a2e93b22d236498400134b": "Multi-tap Keypad Text Entry on an Old Mobile Phone",
  "525f039017c7cd0e1a000a26": "Palindrome chain length",
  "544aed4c4a30184e960010f4": "Find the divisors! ",
  "5202ef17a402dd033c000009": "Title Case",
  "5541f58a944b85ce6d00006a": "Product of consecutive Fib numbers",
  "57fb09ef2b5314a8a90001ed": "Exclamation marks series #11: Replace all vowel to exclamation mark in the sentence",
  "57faece99610ced690000165": "Exclamation marks series #2: Remove all exclamation marks from the end of sentence",
  "526f35b9c103314662000007": "Binary Genetic Algorithms",
  "567b21565ffbdb30e3000010": "Genetic Algorithm Series - #5 Roulette wheel selection",
  "567b468357ed7411be00004a": "Genetic Algorithm Series - #4 Get population and fitnesses",
  "567d71b93f8a50f461000019": "Genetic Algorithm Series - #3 Crossover",
  "567b39b27d0a4606a5000057": "Genetic Algorithm Series - #2 Mutation",
  "567d609f1c16d7369c000008": "Genetic Algorithm Series - #1 Generate",
  "57f36495c0bb25ecf50000e7": "Sum of all the multiples of 3 or 5",
  "56b58d11e3a3a7cade000792": "Sexy Primes <3",
  "55e6125ad777b540d9000042": "Invalid Input - Error Handling #1",
  "589478160c0f8a40870000bc": "Area of an arrow",
  "5653935c09106259c000001a": "Random Number Generator",
  "5572f7c346eb58ae9c000047": "Complete The  Pattern #1 ",
  "56484848ba95170a8000004d": "Speed Control",
  "55733d3ef7c43f8b0700007c": "Complete The Pattern #2",
  "5506b230a11c0aeab3000c1f": "Deodorant Evaporator",
  "56214b6864fe8813f1000019": "Grasshopper - Bug Squashing",
  "55c90cad4b0fe31a7200001f": "String Templates - Bug Fixing #5",
  "55dc4520094bbaf50e0000cb": "Wilson primes",
  "56c22c5ae8b139416c00175d": "Job Matching #1",
  "545991b4cbae2a5fda000158": "Enumerable Magic - Does My List Include This?",
  "54598e89cbae2ac001001135": "Enumerable Magic #2 - True for Any?",
  "54598d1fcbae2ae05200112c": "Enumerable Magic #1 - True for All?",
  "545993ee52756d98ca0010e1": "Enumerable Magic #4 - True for None?",
  "56530b444e831334c0000020": "Determine offspring sex based on genes XX and XY chromosomes",
  "5601c5f6ba804403c7000004": "Localize The Barycenter of a Triangle",
  "565f5825379664a26b00007c": "Surface  Area and Volume of a Box",
  "57a5c31ce298a7e6b7000334": "Bin to Decimal",
  "56a25ba95df27b7743000016": "validate code with simple regex",
  "574c5075d27783851800169e": "Heads and Legs",
  "57096af70dad013aa200007b": "Logical calculator",
  "56a3f08aa9a6cc9b75000023": "Simple validation of a username with regex",
  "557b5e0bddf29d861400005d": "Miles per gallon to kilometers per liter",
  "55a75e2d0803fea18f00009d": "Find the Slope",
  "5763bb0af716cad8fb000580": "Count the number of cubes with paint on",
  "56c5847f27be2c3db20009c3": "Never visit a . . . !?",
  "5786f8404c4709148f0006bf": "Pole Vault Starting Marks",
  "559f3123e66a7204f000009f": "Take an Arrow to the knee, Functionally",
  "57cff961eca260b71900008f": "Is there a vowel in there?",
  "57613fb1033d766171000d60": "UEFA EURO 2016",
  "57b58827d2a31c57720012e8": "Fuel Calculator: Total Cost",
  "55eea63119278d571d00006a": "Smallest unused ID",
  "57a5015d72292ddeb8000b31": "Palindrome Strings",
  "56e2f59fb2ed128081001328": "Printing Array elements with Comma delimiters",
  "55f73f66d160f1f1db000059": "Grasshopper - Combine strings",
  "57a37f3cbb99449513000cd8": "Get number from string",
  "567bf4f7ee34510f69000032": "Regexp Basics - is it a digit?",
  "56a946cd7bd95ccab2000055": "Regex count lowercase letters",
  "57a77726bb9944d000000b06": "Price of Mangoes",
  "578b4f9b7c77f535fc00002f": "Constructing a car #1 - Engine and Fuel Tank",
  "586669a8442e3fc307000048": "Sortable Shapes",
  "53f1015fa9fe02cbda00111a": "Color Ghost",
  "55805ab490c73741b7000064": "makeBackronym",
  "55a14f75ceda999ced000048": "Template Strings",
  "55d32bff0cc60b2e7f000173": "Calculate Integral",
  "55c1d76ccc8f89fb2900009b": "Playing with cubes III",
  "568018a64f35f0c613000054": "Finish Guess the Number Game",
  "563a362e21001b1d16000049": "Reveal Spy Identity",
  "55c0ac142326fdf18d0000af": "Playing with cubes II",
  "55c0a79e20be94c91400014b": "Playing with cubes I",
  "56200d610758762fb0000002": "Grasshopper - Basic Function Fixer",
  "57cfdf34902f6ba3d300001e": "Sort and Star",
  "569e09850a8e371ab200000b": "Pre-FizzBuzz Workout #1",
  "55412f7a350768e824000154": "Let's do the laundry!",
  "566d5cf8001db71d7b000022": "Bingo Number Caller",
  "56a8f83d96d99a315a0000a0": "Happy Little Trees",
  "56407edf50bcc8f01d000023": "CollectionAssert Test",
  "578fdcfc75ffd1112c0001a1": "The Lazy Startup Office",
  "5702e2f380b8c86df3000003": "TDD Area Calculations",
  "582b079bbbbc74bed7000095": "Vectors #1",
  "57c1ab3949324c321600013f": "ToLeetSpeak",
  "5641a03210e973055a00000d": "Formatting decimal places #0",
  "56f3a1e899b386da78000732": "Parts of a list",
  "57d2807295497e652b000139": "Averages of numbers",
  "539ee3b6757843632d00026b": "Find the capitals",
  "55e2adece53b4cdcb900006c": "Tortoise racing",
  "5270d0d18625160ada0000e4": "Greed is Good",
  "5663f5305102699bad000056": "Maximum Length Difference",
  "573992c724fc289553000e95": "Find the smallest",
  "566fc12495810954b1000030": "Count the Digit",
  "55eeddff3f64c954c2000059": "Sum consecutives",
  "56a4872cbb65f3a610000026": "Rotate for a Max",
  "54d418bd099d650fa000032d": "Vampire Numbers",
  "5375f921003bf62192000746": "Word a10n (abbreviation)",
  "57814d79a56c88e3e0000786": "Simple Encryption #1 - Alternating Split",
  "520b9d2ad5c005041100000f": "Simple Pig Latin",
  "525e5a1cb735154b320002c8": "Triangular Treasure",
  "54b80308488cb6cd31000161": "Checking Groups",
  "54bf1c2cd5b56cc47f0007a1": "Counting Duplicates",
  "5648b12ce68d9daa6b000099": "Number of People in the Bus",
  "51b6249c4612257ac0000005": "Roman Numerals Decoder",
  "5226eb40316b56c8d500030f": "Pascal's Triangle",
  "54eb33e5bc1a25440d000891": "Square into Squares. Protect trees!",
  "588f3e0dfa74475a2600002a": "1's, 0's and wildcards",
  "583203e6eb35d7980400002a": "Count the smiley faces!",
  "57ed4cef7b45ef8774000014": "The Office II - Boredom Score",
  "586f6741c66d18c22800010a": "Sum of a sequence",
  "559ce00b70041bc7b600013d": "Financing Plan on Planet XY140Z-n",
  "52c4dd683bfd3b434c000292": "Catching Car Mileage Numbers",
  "539de388a540db7fec000642": "The Coupon Code",
  "5513795bd3fafb56c200049e": "Count by X",
  "555eded1ad94b00403000071": "Sum of the first nth term of Series",
  "57fa92b25c9910e7bc0001df": "Fac Recursion (Pest control  - find the bugs and fix them)",
  "55c933c115a8c426ac000082": "Switch/Case - Bug Fixing #6",
  "55c606e6babfc5b2c500007c": "Failed Filter - Bug Fixing #3",
  "55c423ecf847fbcba100002b": "Regex Failure - Bug Fixing #2",
  "5512a0b0509063e57d0003f5": "A + B",
  "57193694938fcdfe3a001dd7": "IPv4 Validator",
  "517b0f33cd023d848d000001": "Ninja vs Samurai: Strike",
  "566dc566f6ea9a14b500007b": "Filtering even numbers (Bug Fixes)",
  "563cf89eb4747c5fb100001b": "Remove the minimum",
  "558fc85d8fd1938afb000014": "Sum of two lowest positive integers",
  "56a5d994ac971f1ac500003e": "Consecutive strings",
  "5772382d509c65de7e000982": "Fibo akin",
  "57e5a6a67fbcc9ba900021cd": "Fun with trees: array to tree",
  "57591ef494aba64d14000526": "John and Ann sign up for Codewars",
  "57dd79bff6df9b103b00010f": "Fun with trees: is perfect",
  "57e5279b7cf1aea5cf000359": "Fun with trees: max sum",
  "58373ba351e3b615de0001c3": "The Book of Mormon",
  "569512b7707bc1b88200002f": "Recursion #2 - Fibonacci",
  "5694cb0ec554589633000036": "Recursion #1 - Factorial",
  "5264d2b162488dc400000001": "Stop gninnipS My sdroW!",
  "541af676b589989aed0009e7": "Counting Change Combinations",
  "5324945e2ece5e1f32000370": "Sum Strings as Numbers",
  "556e0fccc392c527f20000c5": "Fibonacci, Tribonacci and friends",
  "556deca17c58da83c00002db": "Tribonacci Sequence",
  "555615a77ebc7c2c8a0000b8": "Vasya - Clerk",
  "55035eb47451fb61c0000288": "Ookkk, Ok, O?  Ook, Ok, Ooo!",
  "54e320dcebe1e583250008fd": "Decimal to Factorial and Back",
  "586a514cc66d18807f0000a6": "Implement brute force protection",
  "552c028c030765286c00007d": "IQ Test",
  "550f22f4d758534c1100025a": "Directions Reduction",
  "564057bc348c7200bd0000ff": "A Rule of Divisibility by 13",
  "55a29405bc7d2efaff00007c": "Going to zero or to infinity?",
  "566543703c72200f0b0000c9": "Disease Spread",
  "56b27f35c616d3b889000043": "RunTime Compiler",
  "56bc5f83e8936f3d200009ac": "Basics 07: Calculate Sin(x) - too easy?",
  "54784a99b5339e1eaf000807": "Calculate the function f(x) for a simple linear sequence (Medium)",
  "57f6ad55cca6e045d2000627": "To square(root) or not to square(root)",
  "57a55c8b72292d057b000594": "Reversing Words in a String",
  "588e0f11b7b4a5b373000041": "Temperature analysis I",
  "559a28007caad2ac4e000083": "Perimeter of squares in a rectangle",
  "5508249a98b3234f420000fb": "First Variation on Caesar Cipher",
  "54c9fcad28ec4c6e680011aa": "Merged String Checker",
  "557f6437bf8dcdd135000010": "Large Factorials",
  "526a569ca578d7e6e300034e": "Base Conversion",
  "525f4206b73515bffb000b21": "Adding Big Numbers",
  "556b85b433fb5e899200003f": "Simple fraction to mixed number converter",
  "52bc74d4ac05d0945d00054e": "First non-repeating character",
  "55466989aeecab5aac00003e": "Rectangle into Squares",
  "576757b1df89ecf5bd00073b": "Build Tower",
  "5503013e34137eeeaa001648": "Give me a Diamond",
  "559536379512a64472000053": "Playing with passphrases",
  "52761ee4cffbc69732000738": "Good vs Evil",
  "54d7660d2daf68c619000d95": "Common Denominators",
  "57b06f90e298a7b53d000a86": "The Supermarket Queue",
  "56269eb78ad2e4ced1000013": "Find the next perfect square!",
  "56606694ec01347ce800001b": "Is this a triangle?",
  "566be96bb3174e155300001b": "Ball Upwards",
  "58635f1b2489549be50003f1": "Thinkful - Number Drills: Quadratic formula",
  "56445c4755d0e45b8c00010a": "Banker's Plan",
  "55b42574ff091733d900002f": "Friend or Foe?",
  "50654ddff44f800200000004": "Multiply"
}